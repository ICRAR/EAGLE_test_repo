{
    "modelData": {
        "filePath": "leap.palette",
        "repoService": "GitHub",
        "repoBranch": "master",
        "sha": "a817e59",
        "git_url": "",
        "fileType": "palette",
        "repo": "ICRAR/EAGLE_test_repo"
    },
    "linkDataArray": [],
    "nodeDataArray": [
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "An axis aligned box.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -1,
            "expanded": false,
            "description": "",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -2,
            "expanded": false,
            "description": "This class represents an arithmetic progression \nIt is internally used as the return type of the Eigen::seq and Eigen::seqN functions, and as the input arguments of DenseBase::operator()(const RowIndices&, const ColIndices&), and most of the time this is the only way it is used.",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Represents a rectangular matrix with a banded storage.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -3,
            "expanded": false,
            "description": "",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [
                {
                    "IdText": "Result",
                    "Id": "aaa82b59-3d89-44e4-a857-64b366d48e4c"
                }
            ],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "PythonApp",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Call Leap.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -4,
            "expanded": false,
            "description": "Call Leap\nA BarrierAppDrop that reads a config file, generates a command line for the LeapAccelerateCLI application, and then executes the application",
            "inputPorts": [
                {
                    "IdText": "Config",
                    "Id": "ed268e0f-ba2a-475d-8d68-ad04641291b3"
                }
            ],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [
                {
                    "text": "measurementSetFilename (String)",
                    "description": "The file from which the input measurement set should be loaded",
                    "value": "-",
                    "name": "measurementSetFilename"
                },
                {
                    "text": "appclass (String)",
                    "description": "The path to the class that implements this app",
                    "value": "leap_nodes.CallLeap.CallLeap",
                    "name": "appclass"
                },
                {
                    "text": "Execution time",
                    "description": "",
                    "value": 5,
                    "name": "execution_time"
                },
                {
                    "text": "Num CPUs",
                    "description": "",
                    "value": 1,
                    "name": "num_cpus"
                },
                {
                    "text": "Group start",
                    "description": "",
                    "value": 0,
                    "name": "group_start"
                }
            ],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Represents a diagonal matrix with its storage.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -5,
            "expanded": false,
            "description": "",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "A document for parsing JSON text as DOM.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -6,
            "expanded": false,
            "description": "",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Represents an in-memory output byte stream.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -7,
            "expanded": false,
            "description": "This class is mainly for being wrapped by EncodedOutputStream or AutoUTFOutputStream.\nIt is similar to FileWriteBuffer but the destination is an in-memory buffer instead of a file.\nDifferences between MemoryBuffer and StringBuffer:",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Represents a JSON Pointer. Use Pointer for UTF8 encoding and default allocator.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -8,
            "expanded": false,
            "description": "This class implements RFC 6901 \"JavaScript Object Notation (JSON) Pointer\" (\nA JSON pointer is for identifying a specific value in a JSON document (GenericDocument). It can simplify coding of DOM tree manipulation, because it can access multiple-level depth of DOM tree with single API call.\nAfter it parses a string representation (e.g. \"/foo/0\" or URI fragment representation (e.g. \"#/foo/0\") into its internal representation (tokens), it can be used to resolve a specific value in multiple documents, or sub-tree of documents.\nContrary to GenericValue, Pointer can be copy constructed and copy assigned. Apart from assignment, a Pointer cannot be modified after construction.\nAlthough Pointer is very convenient, please aware that constructing Pointer involves parsing and dynamic memory allocation. A special constructor with user- supplied tokens eliminates these.\nGenericPointer depends on GenericDocument and GenericValue.",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "JSON schema document.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -9,
            "expanded": false,
            "description": "A JSON schema document is a compiled version of a JSON schema. It is basically a tree of internal::Schema.",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [
                {
                    "IdText": "Result",
                    "Id": "e9cd06b5-645b-42ba-967f-6d1fbb927035"
                }
            ],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "PythonApp",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Leap Gather.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -10,
            "expanded": false,
            "description": "Leap Gather\nA BarrierAppDrop that gathers output from multiple instances of the LeapAccelerateCLI application, sorts it, and outputs it",
            "inputPorts": [
                {
                    "IdText": "Result",
                    "Id": "81f4fea6-4990-4910-984b-a53167618f77"
                }
            ],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [
                {
                    "text": "appclass (String)",
                    "description": "The path to the class that implements this app",
                    "value": "leap_nodes.LeapGather.LeapGather",
                    "name": "appclass"
                },
                {
                    "text": "Execution time",
                    "description": "",
                    "value": 5,
                    "name": "execution_time"
                },
                {
                    "text": "Num CPUs",
                    "description": "",
                    "value": 1,
                    "name": "num_cpus"
                },
                {
                    "text": "Group start",
                    "description": "",
                    "value": 0,
                    "name": "group_start"
                }
            ],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Default memory allocator used by the parser and DOM.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -11,
            "expanded": false,
            "description": "This allocator allocate memory blocks from pre-allocated memory chunks.\nIt does not free memory blocks. And Realloc() only allocate new memory.\nThe memory chunks are allocated by BaseAllocator, which is CrtAllocator by default.\nUser may also supply a buffer as the first chunk.\nIf the user-buffer is full then additional chunks are allocated by BaseAllocator.\nThe user-buffer is not deallocated by this allocator.",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Dense storage base class for matrices and arrays.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -12,
            "expanded": false,
            "description": "This class can be extended with the help of the plugin mechanism described on the page",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [
                {
                    "IdText": "Config",
                    "Id": "88a8de95-5df2-4092-a7a0-54a95d4e9f13"
                }
            ],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "PythonApp",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Produce Config.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -13,
            "expanded": false,
            "description": "Produce Config\nA BarrierAppDrop that produces multiple config files suitable for the CallLeap BarrierAppDrop",
            "inputPorts": [
                {
                    "IdText": "Directions",
                    "Id": "e8d3a812-10f0-45ab-91ba-6569a5ae1c37"
                }
            ],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [
                {
                    "text": "number_of_stations (Integer)",
                    "description": "The number of stations from the measurement set that should be processed",
                    "value": "1",
                    "name": "number_of_stations"
                },
                {
                    "text": "implementation (String)",
                    "description": "The implementation of the LEAP algorithm to use (cpu, casa, cuda)",
                    "value": "cpu",
                    "name": "implementation"
                },
                {
                    "text": "auto_correlation (string)",
                    "description": "Enable auto correlation in the LEAP algorithm",
                    "value": "false",
                    "name": "auto_correlation"
                },
                {
                    "text": "appclass (String)",
                    "description": "The path to the class that implements this app",
                    "value": "leap_nodes.ProduceConfig.ProduceConfig",
                    "name": "appclass"
                },
                {
                    "text": "Execution time",
                    "description": "",
                    "value": 5,
                    "name": "execution_time"
                },
                {
                    "text": "Num CPUs",
                    "description": "",
                    "value": 1,
                    "name": "num_cpus"
                },
                {
                    "text": "Group start",
                    "description": "",
                    "value": 0,
                    "name": "group_start"
                }
            ],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "The quaternion class used to represent 3D orientations and rotations.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -14,
            "expanded": false,
            "description": "",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "A sparse matrix expression referencing an existing sparse expression.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -15,
            "expanded": false,
            "description": "",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "A versatible sparse matrix representation.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -16,
            "expanded": false,
            "description": "This class implements a more versatile variants of the common \nA call to the function makeCompressed() turns the matrix into the standard \nMore details on this storage sceheme are given in the",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Represents a translation transformation.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -17,
            "expanded": false,
            "description": "",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "Represents a tridiagonal matrix with a compact banded storage.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -18,
            "expanded": false,
            "description": "",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        },
        {
            "outputPorts": [],
            "canHaveOutputs": true,
            "outputLocalPorts": [],
            "category": "",
            "inputAppFields": [],
            "selected": false,
            "inputLocalPorts": [],
            "outputAppFields": [],
            "text": "JSON writer.",
            "drawOrderHint": 0,
            "exitApplicationType": "None",
            "categoryType": "Application",
            "inputApplicationName": "",
            "outputApplicationType": "Unknown",
            "streaming": false,
            "exitApplicationName": "",
            "isData": false,
            "showPorts": false,
            "subject": null,
            "key": -19,
            "expanded": false,
            "description": "Writer implements the concept Handler. It generates JSON text by events to an output os.\nUser may programmatically calls the functions of a writer to generate JSON text.\nOn the other side, a writer can also be passed to objects that generates events,\nfor example Reader::Parse() and Document::Accept().",
            "inputPorts": [],
            "isGroup": false,
            "inputApplicationType": "Unknown",
            "collapsed": false,
            "fields": [],
            "outputApplicationName": "",
            "canHaveInputs": true
        }
    ]
}