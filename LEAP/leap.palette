{
    "modelData": {
        "fileType": "palette",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE_test_repo",
        "filePath": "leap.palette",
        "sha": "5a91d53",
        "git_url": ""
    },
    "nodeDataArray": [
        {
            "category": "PythonApp",
            "categoryType": "Application",
            "isData": false,
            "isGroup": false,
            "canHaveInputs": true,
            "canHaveOutputs": true,
            "drawOrderHint": 0,
            "key": -1,
            "text": "Call Leap.",
            "description": "Call Leap\nA BarrierAppDrop that reads a config file, generates a command line for the LeapAccelerateCLI application, and then executes the application",
            "collapsed": false,
            "showPorts": false,
            "streaming": false,
            "subject": null,
            "selected": false,
            "expanded": false,
            "inputApplicationName": "",
            "outputApplicationName": "",
            "exitApplicationName": "",
            "inputApplicationType": "Unknown",
            "outputApplicationType": "Unknown",
            "exitApplicationType": "None",
            "inputPorts": [
                {
                    "Id": "c572879a-94cc-4ca6-bff3-e5104a2171f5",
                    "IdText": "Config"
                }
            ],
            "outputPorts": [
                {
                    "Id": "b0117d15-1842-450e-af34-b3bccf7c754b",
                    "IdText": "Result"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "fields": [
                {
                    "text": "measurementSetFilename (String)",
                    "name": "measurementSetFilename",
                    "value": "-",
                    "description": "The file from which the input measurement set should be loaded"
                },
                {
                    "text": "appclass (String)",
                    "name": "appclass",
                    "value": "leap_nodes.CallLeap.CallLeap",
                    "description": "The path to the class that implements this app"
                },
                {
                    "text": "Execution time",
                    "name": "execution_time",
                    "value": 5,
                    "description": ""
                },
                {
                    "text": "Num CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "description": ""
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": 0,
                    "description": ""
                }
            ]
        },
        {
            "category": "PythonApp",
            "categoryType": "Application",
            "isData": false,
            "isGroup": false,
            "canHaveInputs": true,
            "canHaveOutputs": true,
            "drawOrderHint": 0,
            "key": -2,
            "text": "Leap Gather.",
            "description": "Leap Gather\nA BarrierAppDrop that gathers output from multiple instances of the LeapAccelerateCLI application, sorts it, and outputs it",
            "collapsed": false,
            "showPorts": false,
            "streaming": false,
            "subject": null,
            "selected": false,
            "expanded": false,
            "inputApplicationName": "",
            "outputApplicationName": "",
            "exitApplicationName": "",
            "inputApplicationType": "Unknown",
            "outputApplicationType": "Unknown",
            "exitApplicationType": "None",
            "inputPorts": [
                {
                    "Id": "9f0e4274-5a95-4ca6-aefa-b1393972cfea",
                    "IdText": "Result"
                }
            ],
            "outputPorts": [
                {
                    "Id": "e21b9d06-0e40-4fc8-9a87-8481a0a34774",
                    "IdText": "Result"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "fields": [
                {
                    "text": "appclass (String)",
                    "name": "appclass",
                    "value": "leap_nodes.LeapGather.LeapGather",
                    "description": "The path to the class that implements this app"
                },
                {
                    "text": "Execution time",
                    "name": "execution_time",
                    "value": 5,
                    "description": ""
                },
                {
                    "text": "Num CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "description": ""
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": 0,
                    "description": ""
                }
            ]
        },
        {
            "category": "PythonApp",
            "categoryType": "Application",
            "isData": false,
            "isGroup": false,
            "canHaveInputs": true,
            "canHaveOutputs": true,
            "drawOrderHint": 0,
            "key": -3,
            "text": "Produce Config.",
            "description": "Produce Config\nA BarrierAppDrop that produces multiple config files suitable for the CallLeap BarrierAppDrop",
            "collapsed": false,
            "showPorts": false,
            "streaming": false,
            "subject": null,
            "selected": false,
            "expanded": false,
            "inputApplicationName": "",
            "outputApplicationName": "",
            "exitApplicationName": "",
            "inputApplicationType": "Unknown",
            "outputApplicationType": "Unknown",
            "exitApplicationType": "None",
            "inputPorts": [
                {
                    "Id": "1671d1bb-657a-4c7e-8871-baab280fe470",
                    "IdText": "Directions"
                }
            ],
            "outputPorts": [
                {
                    "Id": "37784957-fad4-470e-88cd-987319a7b98b",
                    "IdText": "Config"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "fields": [
                {
                    "text": "number_of_stations (Integer)",
                    "name": "number_of_stations",
                    "value": "1",
                    "description": "The number of stations from the measurement set that should be processed"
                },
                {
                    "text": "implementation (String)",
                    "name": "implementation",
                    "value": "cpu",
                    "description": "The implementation of the LEAP algorithm to use (cpu, casa, cuda)"
                },
                {
                    "text": "auto_correlation (string)",
                    "name": "auto_correlation",
                    "value": "false",
                    "description": "Enable auto correlation in the LEAP algorithm"
                },
                {
                    "text": "appclass (String)",
                    "name": "appclass",
                    "value": "leap_nodes.ProduceConfig.ProduceConfig",
                    "description": "The path to the class that implements this app"
                },
                {
                    "text": "Execution time",
                    "name": "execution_time",
                    "value": 5,
                    "description": ""
                },
                {
                    "text": "Num CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "description": ""
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": 0,
                    "description": ""
                }
            ]
        }
    ],
    "linkDataArray": []
}