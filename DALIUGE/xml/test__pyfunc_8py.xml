<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="test__pyfunc_8py" kind="file" language="Python">
    <compoundname>test_pyfunc.py</compoundname>
    <innerclass refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp" prot="public">test::apps::test_pyfunc::TestPyFuncApp</innerclass>
    <innerclass refid="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest" prot="public">test::apps::test_pyfunc::PyFuncAppIntraNMTest</innerclass>
    <innernamespace refid="namespacetest_1_1apps_1_1test__pyfunc">test::apps::test_pyfunc</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>ICRAR<sp/>-<sp/>International<sp/>Centre<sp/>for<sp/>Radio<sp/>Astronomy<sp/>Research</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>(c)<sp/>UWA<sp/>-<sp/>The<sp/>University<sp/>of<sp/>Western<sp/>Australia,<sp/>2017</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Copyright<sp/>by<sp/>UWA<sp/>(in<sp/>the<sp/>framework<sp/>of<sp/>the<sp/>ICRAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MA<sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>base64</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>unittest</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>six</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>six.moves.cPickle<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pickle<sp/><sp/></highlight><highlight class="comment">#<sp/>@UnresolvedImport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..manager<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>test_dm</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dlg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>droputils</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedlg_1_1apps" kindref="compound">dlg.apps</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pyfunc</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedlg_1_1ddap__protocol" kindref="compound">dlg.ddap_protocol</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DROPStates,<sp/>DROPRel,<sp/>DROPLinkType</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedlg_1_1drop" kindref="compound">dlg.drop</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>InMemoryDROP</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedlg_1_1droputils" kindref="compound">dlg.droputils</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DROPWaiterCtx</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedlg_1_1exceptions" kindref="compound">dlg.exceptions</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>InvalidDropException</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">func1(arg1):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg1</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">func2(arg1):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg1<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">func3():</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">func_with_defaults(a,<sp/>b=10,<sp/>c=20,<sp/>x=30,<sp/>y=40,<sp/>z=50):</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>-<sp/>b<sp/>*<sp/>c<sp/>+<sp/>(y<sp/>-<sp/>x)<sp/>*<sp/>z.<sp/>Default<sp/>is<sp/>a<sp/>+<sp/>300&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>a<sp/>-<sp/>b<sp/>*<sp/>c<sp/>+<sp/>(y<sp/>-<sp/>x)<sp/>*<sp/>z</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;%r<sp/>-<sp/>%r<sp/>*<sp/>%r<sp/>+<sp/>(%r<sp/>-<sp/>%r)<sp/>*<sp/>%r<sp/>=<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>a,<sp/>b,<sp/>c,<sp/>y,<sp/>x,<sp/>z,<sp/>res)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_PyFuncApp(oid,<sp/>uid,<sp/>f,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>fname<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(f,<sp/>six.string_types):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>f<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test.apps.test_pyfunc.&quot;</highlight><highlight class="normal"><sp/>+<sp/>f</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>fcode,<sp/>fdefaults<sp/>=<sp/>pyfunc.serialize_func(f)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pyfunc.PyFuncApp(oid,<sp/>uid,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_name=fname,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_code=fcode,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_defaults=fdefaults,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**kwargs)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp" kindref="compound">TestPyFuncApp</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_missing_function_param(self):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertRaises(InvalidDropException,<sp/>pyfunc.PyFuncApp,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_invalid_function_param(self):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>function<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertRaises(InvalidDropException,<sp/>pyfunc.PyFuncApp,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>func_name=</highlight><highlight class="stringliteral">&apos;func1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_function_invalid_module(self):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>function<sp/>lives<sp/>in<sp/>an<sp/>unknown<sp/>module/package</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertRaises(InvalidDropException,<sp/>pyfunc.PyFuncApp,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>func_name=</highlight><highlight class="stringliteral">&apos;doesnt_exist.func1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_function_invalid_fname(self):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>function<sp/>lives<sp/>in<sp/>an<sp/>unknown<sp/>module/package</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertRaises(InvalidDropException,<sp/>pyfunc.PyFuncApp,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>func_name=</highlight><highlight class="stringliteral">&apos;test.apps.test_pyfunc.doesnt_exist&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_valid_creation(self):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_PyFuncApp(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;func1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_creation_with_code(self):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">inner_function(x,<sp/>y):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+<sp/>y</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_PyFuncApp(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>inner_function)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_test_simple_functions(self,<sp/>f,<sp/>input_data,<sp/>output_data):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>c<sp/>=<sp/>[<ref refid="classdlg_1_1drop_1_1InMemoryDROP" kindref="compound">InMemoryDROP</ref>(x,<sp/>x)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>_PyFuncApp(</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/>f)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.addInput(a)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.addOutput(c)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/><ref refid="classdlg_1_1droputils_1_1DROPWaiterCtx" kindref="compound">DROPWaiterCtx</ref>(self,<sp/>c,<sp/>5):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.write(pickle.dumps(input_data))<sp/><sp/></highlight><highlight class="comment">#<sp/>@UndefinedVariable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setCompleted()</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>drop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>a,<sp/>b,<sp/>c:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(DROPStates.COMPLETED,<sp/>drop.status)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(output_data,<sp/>pickle.loads(droputils.allDropContents(c)))<sp/><sp/></highlight><highlight class="comment">#<sp/>@UndefinedVariable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1af04fe5e84536396113a259012a05a983" kindref="member">test_func1</ref>(self):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Checks<sp/>that<sp/>func1<sp/>in<sp/>this<sp/>module<sp/>works<sp/>when<sp/>wrapped&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>os.urandom(64)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a47dd493b6b5f8618760c356c31d5003f" kindref="member">_test_simple_functions</ref>(</highlight><highlight class="stringliteral">&apos;func1&apos;</highlight><highlight class="normal">,<sp/>data,<sp/>data)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a8bb52c401726b30e5b28b7e37ab00485" kindref="member">test_func2</ref>(self):</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Checks<sp/>that<sp/>func2<sp/>in<sp/>this<sp/>module<sp/>works<sp/>when<sp/>wrapped&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>random.randint(0,<sp/>1e6)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a47dd493b6b5f8618760c356c31d5003f" kindref="member">_test_simple_functions</ref>(</highlight><highlight class="stringliteral">&apos;func2&apos;</highlight><highlight class="normal">,<sp/>n,<sp/>2<sp/>*<sp/>n)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_inner_func(self):</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>random.randint(0,<sp/>1e6)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">f(x):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+<sp/>2</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a47dd493b6b5f8618760c356c31d5003f" kindref="member">_test_simple_functions</ref>(f,<sp/>n,<sp/>n<sp/>+<sp/>2)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_lambda(self):</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>random.randint(0,<sp/>1e6)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a47dd493b6b5f8618760c356c31d5003f" kindref="member">_test_simple_functions</ref>(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x<sp/>/<sp/>2,<sp/>n,<sp/>n<sp/>/<sp/>2)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_inner_func_with_closure(self):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>random.randint(0,<sp/>1e6)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">f(x):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+<sp/>n</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a47dd493b6b5f8618760c356c31d5003f" kindref="member">_test_simple_functions</ref>(f,<sp/>n,<sp/>n<sp/>+<sp/>n)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_lambda_with_closure(self):</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>random.randint(0,<sp/>1e6)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a47dd493b6b5f8618760c356c31d5003f" kindref="member">_test_simple_functions</ref>(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>(x<sp/>+<sp/>n)<sp/>/<sp/>2,<sp/>n,<sp/>(n<sp/>+<sp/>n)<sp/>/<sp/>2)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_test_func3(self,<sp/>output_drops,<sp/>expected_outputs):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>_PyFuncApp(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;func3&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>drop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>output_drops:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.addOutput(drop)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drops<sp/>=<sp/>[a]<sp/>+<sp/>droputils.listify(output_drops)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.execute()</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>drop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>drops:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(DROPStates.COMPLETED,<sp/>drop.status)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>expected_output,<sp/>drop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(expected_outputs,<sp/>output_drops):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(expected_output,<sp/>pickle.loads(droputils.allDropContents(drop)))<sp/><sp/></highlight><highlight class="comment">#<sp/>@UndefinedVariable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a5c862f8812656eff5cfd5e371734d011" kindref="member">test_func3_singleoutput</ref>(self):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Checks<sp/>that<sp/>func3<sp/>in<sp/>this<sp/>module<sp/>works<sp/>when<sp/>wrapped<sp/>as<sp/>an<sp/>application</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>multiple<sp/>outputs.</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a3760dda4b021e0279b4db60abc9c5f75" kindref="member">_test_func3</ref>([<ref refid="classdlg_1_1drop_1_1InMemoryDROP" kindref="compound">InMemoryDROP</ref>(</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">)],<sp/>[[</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">]])</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a77297011ff6b6171bd6068b18fc99e7b" kindref="member">test_func3_multioutput</ref>(self):</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Checks<sp/>that<sp/>func3<sp/>in<sp/>this<sp/>module<sp/>works<sp/>when<sp/>wrapped<sp/>as<sp/>an<sp/>application</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>multiple<sp/>outputs.</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_drops<sp/>=<sp/>[<ref refid="classdlg_1_1drop_1_1InMemoryDROP" kindref="compound">InMemoryDROP</ref>(x,<sp/>x)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1a3760dda4b021e0279b4db60abc9c5f75" kindref="member">_test_func3</ref>(output_drops,<sp/>(</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_test_defaults(self,<sp/>expected_out,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_do_test(func,<sp/>expected_out,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>List<sp/>with<sp/>(drop,<sp/>value)<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_inputs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dict<sp/>with<sp/>name:<sp/>(drop,<sp/>value)<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwarg_inputs<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>translate<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>base64.b64encode(pickle.dumps(x))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>arg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>si<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;uid_%d&apos;</highlight><highlight class="normal"><sp/>%<sp/>i</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_inputs.append(<ref refid="classdlg_1_1drop_1_1InMemoryDROP" kindref="compound">InMemoryDROP</ref>(si,<sp/>si,<sp/>pydata=translate(arg)))</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>kwarg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs.items():</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>si<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;uid_%d&apos;</highlight><highlight class="normal"><sp/>%<sp/>i</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwarg_inputs[name]<sp/>=<sp/>(si,<sp/><ref refid="classdlg_1_1drop_1_1InMemoryDROP" kindref="compound">InMemoryDROP</ref>(si,<sp/>si,<sp/>pydata=translate(kwarg)))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/><ref refid="classdlg_1_1drop_1_1InMemoryDROP" kindref="compound">InMemoryDROP</ref>(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>pydata=translate(1))</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/><ref refid="classdlg_1_1drop_1_1InMemoryDROP" kindref="compound">InMemoryDROP</ref>(</highlight><highlight class="stringliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;o&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app<sp/>=<sp/>_PyFuncApp(</highlight><highlight class="stringliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>func,<sp/>func_arg_mapping={name:<sp/>vals[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>vals<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwarg_inputs.items()})</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app.addInput(a)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app.addOutput(output)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>drop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>arg_inputs<sp/>+<sp/>[x[1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwarg_inputs.values()]:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app.addInput(drop)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>droputils.DROPWaiterCtx(self,<sp/>output):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setCompleted()</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>arg_inputs<sp/>+<sp/>[x[1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwarg_inputs.values()]:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.setCompleted()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(expected_out,<sp/>pickle.loads(droputils.allDropContents(output)))<sp/><sp/></highlight><highlight class="comment">#<sp/>@UndefinedVariable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>func_with_defaults<sp/>returns<sp/>a<sp/>-<sp/>b<sp/>*<sp/>c<sp/>+<sp/>(y<sp/>-<sp/>x)<sp/>*<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>defaults<sp/>are:<sp/>b=10,<sp/>c=20,<sp/>x=30,<sp/>y=40,<sp/>z=50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>value<sp/>of<sp/>&quot;a&quot;<sp/>is<sp/>always<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_do_test(</highlight><highlight class="stringliteral">&apos;func_with_defaults&apos;</highlight><highlight class="normal">,<sp/>expected_out,<sp/>*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_do_test(func_with_defaults,<sp/>expected_out,<sp/>*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_defaults_empty(self):</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1<sp/>-<sp/>b<sp/>*<sp/>c<sp/>+<sp/>(y<sp/>-<sp/>x)<sp/>*<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>defaults<sp/>are:<sp/>b=10,<sp/>c=20,<sp/>x=30,<sp/>y=40,<sp/>z=50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(301)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_defaults_positional_args_only(self):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1<sp/>-<sp/>b<sp/>*<sp/>c<sp/>+<sp/>(y<sp/>-<sp/>x)<sp/>*<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>defaults<sp/>are:<sp/>b=10,<sp/>c=20,<sp/>x=30,<sp/>y=40,<sp/>z=50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(501,<sp/>0)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(481,<sp/>1)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(0,<sp/>1,<sp/>1,<sp/>40)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(249,<sp/>1,<sp/>2,<sp/>35)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_defaults_kwargs_only(self):</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(301)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(1,<sp/>z=0,<sp/>c=0)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(1,<sp/>z=0,<sp/>b=0)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(561,<sp/>b=-1,<sp/>y=300,<sp/>z=2)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_defaults_args_and_kwargs(self):</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(561,<sp/>-1,<sp/>y=300,<sp/>z=2)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(0,<sp/>1,<sp/>1,<sp/>x=40)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1apps_1_1test__pyfunc_1_1TestPyFuncApp_1ad8fa1d04da0a367afcc2e76f9d171f9f" kindref="member">_test_defaults</ref>(249,<sp/>1,<sp/>2,<sp/>x=35)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest" kindref="compound">PyFuncAppIntraNMTest</ref>(test_dm.NMTestsMixIn,<sp/>unittest.TestCase):</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest_1a54426f113e9d26e94290781e636eb43e" kindref="member">test_input_in_remote_nm</ref>(self):</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>test<sp/>similar<sp/>in<sp/>spirit<sp/>to<sp/>TestDM.test_runGraphOneDOPerDom,<sp/>but<sp/>where</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>application<sp/>B<sp/>is<sp/>a<sp/>PyFuncApp.<sp/>This<sp/>makes<sp/>sure<sp/>that<sp/>PyFuncApp<sp/>work<sp/>fine</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>across<sp/>Node<sp/>Managers.</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NM<sp/>#1<sp/><sp/><sp/><sp/><sp/><sp/>NM<sp/>#2</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=======<sp/><sp/><sp/><sp/>=============</highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>A<sp/>--|----|-&gt;<sp/>B<sp/>--&gt;<sp/>C<sp/>|</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=======<sp/><sp/><sp/><sp/>=============</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g1<sp/>=<sp/>[{</highlight><highlight class="stringliteral">&quot;oid&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;plain&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;storage&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal">}]</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g2<sp/>=<sp/>[{</highlight><highlight class="stringliteral">&quot;oid&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;app&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;app&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;dfms.apps.pyfunc.PyFuncApp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;func_name&quot;</highlight><highlight class="normal">:<sp/>__name__<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.func1&apos;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;oid&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;plain&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;storage&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;producers&quot;</highlight><highlight class="normal">:[</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">]}]</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rels<sp/>=<sp/>[DROPRel(</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/>DROPLinkType.INPUT,<sp/></highlight><highlight class="stringliteral">&apos;B&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_data<sp/>=<sp/>os.urandom(32)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_data<sp/>=<sp/>self._test_runGraphInTwoNMs(g1,<sp/>g2,<sp/>rels,<sp/>pickle.dumps(a_data),<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(a_data,<sp/>pickle.loads(c_data))</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest_1a5a64f2443a1fc66c6c02c1930063d4e6" kindref="member">test_output_in_remote_nm</ref>(self):</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Like<sp/>the<sp/>above,<sp/>but<sp/>with<sp/>this<sp/>graph.<sp/>In<sp/>this<sp/>case<sp/>the<sp/>output<sp/>(instead<sp/>of</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>input)<sp/>is<sp/>in<sp/>a<sp/>remote<sp/>Node<sp/>Manager.</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NM<sp/>#1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NM<sp/>#2</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=============<sp/><sp/><sp/><sp/>=======</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>A<sp/>--&gt;<sp/>B<sp/>--|----|-&gt;<sp/>C<sp/>|</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=============<sp/><sp/><sp/><sp/>=======</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g1<sp/>=<sp/>[{</highlight><highlight class="stringliteral">&quot;oid&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;plain&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;storage&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;consumers&quot;</highlight><highlight class="normal">:<sp/>[</highlight><highlight class="stringliteral">&apos;B&apos;</highlight><highlight class="normal">]},</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;oid&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;app&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;app&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;dfms.apps.pyfunc.PyFuncApp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;func_name&quot;</highlight><highlight class="normal">:<sp/>__name__<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.func1&apos;</highlight><highlight class="normal">}]</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g2<sp/>=<sp/>[{</highlight><highlight class="stringliteral">&quot;oid&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;plain&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;storage&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal">}]</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rels<sp/>=<sp/>[DROPRel(</highlight><highlight class="stringliteral">&apos;B&apos;</highlight><highlight class="normal">,<sp/>DROPLinkType.PRODUCER,<sp/></highlight><highlight class="stringliteral">&apos;C&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_data<sp/>=<sp/>os.urandom(32)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_data<sp/>=<sp/>self._test_runGraphInTwoNMs(g1,<sp/>g2,<sp/>rels,<sp/>pickle.dumps(a_data),<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(a_data,<sp/>pickle.loads(c_data))</highlight></codeline>
    </programlisting>
    <location file="daliuge-runtime/test/apps/test_pyfunc.py"/>
  </compounddef>
</doxygen>
