<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacedlg_1_1utils" kind="namespace" language="Python">
    <compoundname>dlg::utils</compoundname>
    <innerclass refid="classdlg_1_1utils_1_1ZlibUncompressedStream" prot="public">dlg::utils::ZlibUncompressedStream</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="utils_8py_1aa0f07b1823133ddb89bb88db2294bf26" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::utils.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= logging.getLogger(__name__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="42" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="utils_8py_1a8bf76a65f4311dd645da0d1d0c1e9ab4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::utils.terminate_or_kill</definition>
        <argsstring></argsstring>
        <name>terminate_or_kill</name>
        <initializer>= common.terminate_or_kill</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="391" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="utils_8py_1a1bc9b8295da4d5012c0d0800ec1921dd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::utils.wait_or_kill</definition>
        <argsstring></argsstring>
        <name>wait_or_kill</name>
        <initializer>= common.wait_or_kill</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="392" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="utils_8py_1a6cec7d8afeabfa16150de87befe17ebc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::utils.b2s</definition>
        <argsstring></argsstring>
        <name>b2s</name>
        <initializer>= common.b2s</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="393" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="utils_8py_1aa5e8c3eb50038e85d9161adb7fbf96b4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::utils.check_port</definition>
        <argsstring></argsstring>
        <name>check_port</name>
        <initializer>= common.check_port</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="395" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="utils_8py_1adf926e262645d08f1e882a1ccb2d77e2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::utils.connect_to</definition>
        <argsstring></argsstring>
        <name>connect_to</name>
        <initializer>= common.connect_to</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="396" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="utils_8py_1adea0b8b27e786a5ac647507088c3518b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::utils.portIsClosed</definition>
        <argsstring></argsstring>
        <name>portIsClosed</name>
        <initializer>= common.portIsClosed</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="397" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="utils_8py_1a6d6dd25dcb3e6a39b2db79f76390ad0b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::utils.portIsOpen</definition>
        <argsstring></argsstring>
        <name>portIsOpen</name>
        <initializer>= common.portIsOpen</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="398" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="utils_8py_1ac0aaea581223f022e424054c9b375d84" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::utils.write_to</definition>
        <argsstring></argsstring>
        <name>write_to</name>
        <initializer>= common.write_to</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="399" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="utils_8py_1a346248de6cbc1cdd9662d7a194674a38" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::utils.JSONStream</definition>
        <argsstring></argsstring>
        <name>JSONStream</name>
        <initializer>= common.JSONStream</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="401" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="401" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="utils_8py_1aff9fd44565cac9de26412a8ce9b8a689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.timed_import</definition>
        <argsstring>(module_name)</argsstring>
        <name>timed_import</name>
        <param>
          <type>module_name</type>
          <defname>module_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Imports `module_name` and log how long it took to import it</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="44" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="44" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1abde6aab581db523e3cb28446f2cb4fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.get_local_ip_addr</definition>
        <argsstring>()</argsstring>
        <name>get_local_ip_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Enumerate all interfaces and return bound IP addresses (exclude localhost)
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="52" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="52" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a6c377ca1ff926c595857121f8cb0d238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.get_all_ipv4_addresses</definition>
        <argsstring>()</argsstring>
        <name>get_all_ipv4_addresses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get a list of all IPv4 interfaces found in this computer</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="64" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a5acb7e63c3a3e22228599b270eee48a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.register_service</definition>
        <argsstring>(zc, service_type_name, service_name, ipaddr, port, protocol=&apos;tcp&apos;)</argsstring>
        <name>register_service</name>
        <param>
          <type>zc</type>
          <defname>zc</defname>
        </param>
        <param>
          <type>service_type_name</type>
          <defname>service_type_name</defname>
        </param>
        <param>
          <type>service_name</type>
          <defname>service_name</defname>
        </param>
        <param>
          <type>ipaddr</type>
          <defname>ipaddr</defname>
        </param>
        <param>
          <type>port</type>
          <defname>port</defname>
        </param>
        <param>
          <type>protocol</type>
          <defname>protocol</defname>
          <defval>&apos;tcp&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>ZeroConf: Register service type, protocol, ipaddr and port

Returns ZeroConf object and ServiceInfo object
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="73" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="73" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a532a31f15fea3368f9ee05770ed2d1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.deregister_service</definition>
        <argsstring>(zc, info)</argsstring>
        <name>deregister_service</name>
        <param>
          <type>zc</type>
          <defname>zc</defname>
        </param>
        <param>
          <type>info</type>
          <defname>info</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>ZeroConf: Deregister service
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="95" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a95eac0f5b6627055c1d908ee7b3f5671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.browse_service</definition>
        <argsstring>(zc, service_type_name, protocol, callback)</argsstring>
        <name>browse_service</name>
        <param>
          <type>zc</type>
          <defname>zc</defname>
        </param>
        <param>
          <type>service_type_name</type>
          <defname>service_type_name</defname>
        </param>
        <param>
          <type>protocol</type>
          <defname>protocol</defname>
        </param>
        <param>
          <type>callback</type>
          <defname>callback</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>ZeroConf: Browse for services based on service type and protocol

callback signature: callback(zeroconf, service_type, name, state_change)
    zeroconf: ZeroConf object
    service_type: zeroconf service
    name: service name
    state_change: ServiceStateChange type (Added, Removed)

Returns ZeroConf object
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="101" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="101" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1ab630e6ecc6c1287e91a9f4bed5daaf0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.zmq_safe</definition>
        <argsstring>(host_or_addr)</argsstring>
        <name>zmq_safe</name>
        <param>
          <type>host_or_addr</type>
          <defname>host_or_addr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Converts `host_or_addr` to a format that is safe for ZMQ to use</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="118" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="118" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a58c3c8d1f801924909e0ae6b225cee71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.to_externally_contactable_host</definition>
        <argsstring>(host, prefer_local=False)</argsstring>
        <name>to_externally_contactable_host</name>
        <param>
          <type>host</type>
          <defname>host</defname>
        </param>
        <param>
          <type>prefer_local</type>
          <defname>prefer_local</defname>
          <defval>False</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Turns `host`, which is an address used to bind a local service,
into a host that can be used to externally contact that service.

This should be used when there is no other way to find out how a client
to that service is going to connect to it.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="128" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="128" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a5c97e6694ec283c01dd046b101da86b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.getDlgDir</definition>
        <argsstring>()</argsstring>
        <name>getDlgDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the root of the directory structure used by the DALiuGE framework at
runtime.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="156" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="156" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1aba00d9f42f6809119b0243cb3ff134ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.getDlgPidDir</definition>
        <argsstring>()</argsstring>
        <name>getDlgPidDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the location of the directory used by the DALiuGE framework to store
its PIDs. If `createIfMissing` is True, the directory will be created if it
currently doesn&apos;t exist
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="165" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a56221725984a96e94b81e0515b27631c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.getDlgLogsDir</definition>
        <argsstring>()</argsstring>
        <name>getDlgLogsDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the location of the directory used by the DALiuGE framework to store
its logs. If `createIfMissing` is True, the directory will be created if it
currently doesn&apos;t exist
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="173" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="173" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a4e906659ca5d9b7ede1078b2b5216435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.createDirIfMissing</definition>
        <argsstring>(path)</argsstring>
        <name>createDirIfMissing</name>
        <param>
          <type>path</type>
          <defname>path</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Creates the given directory if it doesn&apos;t exist
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="181" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="181" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1abcf24e998a5ac1eb9f200cbffc5f4b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.isabs</definition>
        <argsstring>(path)</argsstring>
        <name>isabs</name>
        <param>
          <type>path</type>
          <defname>path</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Like os.path.isabs, but handles None</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="191" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1af5b2920bb171994caadb72724ee312e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.fname_to_pipname</definition>
        <argsstring>(fname)</argsstring>
        <name>fname_to_pipname</name>
        <param>
          <type>fname</type>
          <defname>fname</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Converts a graph filename (assuming it&apos;s a .json file) to its &quot;pipeline&quot;
name (the basename without the extension).
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="195" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="195" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1af01447be4e695ef3d05344dfba12b522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.escapeQuotes</definition>
        <argsstring>(s, singleQuotes=True, doubleQuotes=True)</argsstring>
        <name>escapeQuotes</name>
        <param>
          <type>s</type>
          <defname>s</defname>
        </param>
        <param>
          <type>singleQuotes</type>
          <defname>singleQuotes</defname>
          <defval>True</defval>
        </param>
        <param>
          <type>doubleQuotes</type>
          <defname>doubleQuotes</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Escapes single and double quotes in a string. Useful to include commands
in a shell invocation or similar.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="205" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="205" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a21ec3b5e86274ca62fb482e0dfdea696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.prepare_sql</definition>
        <argsstring>(sql, paramstyle, data=())</argsstring>
        <name>prepare_sql</name>
        <param>
          <type>sql</type>
          <defname>sql</defname>
        </param>
        <param>
          <type>paramstyle</type>
          <defname>paramstyle</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
          <defval>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Prepares the given SQL statement for proper execution depending on the
parameter style supported by the database driver. For this the SQL statement
must be written using the &quot;{X}&quot; or &quot;{}&quot; placeholders in place for each,
parameter which is a style-agnostic parameter notation.

This method returns a tuple containing the prepared SQL statement and the
values to be bound into the query as required by the driver.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="216" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="216" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a3397bafe327b2379c0a53a25b9a46ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.object_tracking</definition>
        <argsstring>(name)</argsstring>
        <name>object_tracking</name>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns a decorator that helps classes track which object is currently under
execution. This is done via a thread local object, which can be accessed via
the &apos;tlocal&apos; attribute of the returned decorator.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="259" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="259" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="utils_8py_1a89233261f5fcfdb78f9fcdf273d9300c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.utils.get_symbol</definition>
        <argsstring>(name)</argsstring>
        <name>get_symbol</name>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Gets the global symbol ``name``, which is an &quot;absolute path&quot; to a python
name in the form of ``pkg.subpkg.subpkg.module.name``</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/utils.py" line="286" column="1" bodyfile="daliuge-runtime/dlg/utils.py" bodystart="286" bodyend="292"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="daliuge-runtime/dlg/utils.py" line="1" column="1"/>
  </compounddef>
</doxygen>
