<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtest_1_1apps_1_1test__crc_1_1CRCAppTests" kind="class" language="Python" prot="public">
    <compoundname>test::apps::test_crc::CRCAppTests</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TestCase</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtest_1_1apps_1_1test__crc_1_1CRCAppTests_1a0d1b37055adbf3eebbaf48983035509f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_crc.CRCAppTests.test_with_dynlib</definition>
        <argsstring>(self)</argsstring>
        <name>test_with_dynlib</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>We test the following graph:

A -----&gt; B ----&gt; C ---&gt; D ---&gt; E
   |        +--&gt; F ---&gt; G ---&gt; H
   +------------------&gt; I ---&gt; J

A and C are FileDrops; B is a DynlibApp; D, G and I are CRCApps;
F, E, H and J are InMemoryDrops.

The DynlibApp B copies A into C and F; therefore D, G and I should yield
the same results, meaning that E, H and J should have the same contents.
Similarly, A, C and F should have the same contents.

This graph was experiencing some problems in a MacOS machine. Hopefully
this test will shed some light on that issue and allow us to track it
down and fix it.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_crc.py" line="44" column="1" bodyfile="daliuge-runtime/test/apps/test_crc.py" bodystart="44" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1860">
        <label>test.apps.test_crc.CRCAppTests</label>
        <link refid="classtest_1_1apps_1_1test__crc_1_1CRCAppTests"/>
        <childnode refid="1861" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1861">
        <label>TestCase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1862">
        <label>test.apps.test_crc.CRCAppTests</label>
        <link refid="classtest_1_1apps_1_1test__crc_1_1CRCAppTests"/>
        <childnode refid="1863" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1863">
        <label>TestCase</label>
      </node>
    </collaborationgraph>
    <location file="daliuge-runtime/test/apps/test_crc.py" line="41" column="1" bodyfile="daliuge-runtime/test/apps/test_crc.py" bodystart="41" bodyend="87"/>
    <listofallmembers>
      <member refid="classtest_1_1apps_1_1test__crc_1_1CRCAppTests_1a0d1b37055adbf3eebbaf48983035509f" prot="public" virt="non-virtual"><scope>test::apps::test_crc::CRCAppTests</scope><name>test_with_dynlib</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
