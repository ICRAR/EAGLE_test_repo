<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest" kind="class" language="Python" prot="public">
    <compoundname>test::apps::test_dynlib2::DynlibAppTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TestCase</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest_1a4385704b2155a6556e29c6c544d46ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_dynlib2.DynlibAppTest.test_simple_batch_copy</definition>
        <argsstring>(self)</argsstring>
        <name>test_simple_batch_copy</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_dynlib2.py" line="47" column="1" bodyfile="daliuge-runtime/test/apps/test_dynlib2.py" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest_1aaf4f7586c317f3904bf6fa203fdd2bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_dynlib2.DynlibAppTest.test_simple_stream_copy</definition>
        <argsstring>(self)</argsstring>
        <name>test_simple_stream_copy</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_dynlib2.py" line="50" column="1" bodyfile="daliuge-runtime/test/apps/test_dynlib2.py" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest_1aaefcc51e28d779ffae4f8725bca24694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_dynlib2.DynlibAppTest.test_cancel_dynlibprocapp</definition>
        <argsstring>(self)</argsstring>
        <name>test_cancel_dynlibprocapp</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Checks that we can cancel a long-running dynlib proc app</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_dynlib2.py" line="103" column="1" bodyfile="daliuge-runtime/test/apps/test_dynlib2.py" bodystart="103" bodyend="118"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest_1a4ad58e7dde9318645603a1cc81b97751" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_dynlib2.DynlibAppTest._test_simple_copy</definition>
        <argsstring>(self, streaming)</argsstring>
        <name>_test_simple_copy</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>streaming</type>
          <defname>streaming</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Checks that the following graph works, both in streaming and batch mode:

A ----&gt; B ----&gt; C
   |       +--&gt; D
   |
   +--&gt; E ----&gt; F
   +--&gt; G

Both B and E use the same dynamically loaded library and work with their
input A to copy the inputs into their outputs.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_dynlib2.py" line="53" column="1" bodyfile="daliuge-runtime/test/apps/test_dynlib2.py" bodystart="53" bodyend="102"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2495">
        <label>test.apps.test_dynlib2.DynlibAppTest</label>
        <link refid="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest"/>
        <childnode refid="2496" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2496">
        <label>TestCase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2497">
        <label>test.apps.test_dynlib2.DynlibAppTest</label>
        <link refid="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest"/>
        <childnode refid="2498" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2498">
        <label>TestCase</label>
      </node>
    </collaborationgraph>
    <location file="daliuge-runtime/test/apps/test_dynlib2.py" line="46" column="1" bodyfile="daliuge-runtime/test/apps/test_dynlib2.py" bodystart="46" bodyend="119"/>
    <listofallmembers>
      <member refid="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest_1a4ad58e7dde9318645603a1cc81b97751" prot="private" virt="non-virtual"><scope>test::apps::test_dynlib2::DynlibAppTest</scope><name>_test_simple_copy</name></member>
      <member refid="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest_1aaefcc51e28d779ffae4f8725bca24694" prot="public" virt="non-virtual"><scope>test::apps::test_dynlib2::DynlibAppTest</scope><name>test_cancel_dynlibprocapp</name></member>
      <member refid="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest_1a4385704b2155a6556e29c6c544d46ae9" prot="public" virt="non-virtual"><scope>test::apps::test_dynlib2::DynlibAppTest</scope><name>test_simple_batch_copy</name></member>
      <member refid="classtest_1_1apps_1_1test__dynlib2_1_1DynlibAppTest_1aaf4f7586c317f3904bf6fa203fdd2bf3" prot="public" virt="non-virtual"><scope>test::apps::test_dynlib2::DynlibAppTest</scope><name>test_simple_stream_copy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
