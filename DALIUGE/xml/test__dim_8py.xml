<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="test__dim_8py" kind="file" language="Python">
    <compoundname>test_dim.py</compoundname>
    <innerclass refid="classtest_1_1manager_1_1test__dim_1_1LocalDimStarter" prot="public">test::manager::test_dim::LocalDimStarter</innerclass>
    <innerclass refid="classtest_1_1manager_1_1test__dim_1_1TestDIM" prot="public">test::manager::test_dim::TestDIM</innerclass>
    <innerclass refid="classtest_1_1manager_1_1test__dim_1_1TestREST" prot="public">test::manager::test_dim::TestREST</innerclass>
    <innernamespace refid="namespacetest_1_1manager_1_1test__dim">test::manager::test_dim</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>ICRAR<sp/>-<sp/>International<sp/>Centre<sp/>for<sp/>Radio<sp/>Astronomy<sp/>Research</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>(c)<sp/>UWA<sp/>-<sp/>The<sp/>University<sp/>of<sp/>Western<sp/>Australia,<sp/>2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Copyright<sp/>by<sp/>UWA<sp/>(in<sp/>the<sp/>framework<sp/>of<sp/>the<sp/>ICRAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MA<sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>codecs</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>unittest</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pkg_resources</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dlg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>droputils</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dlg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>utils</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedlg_1_1common" kindref="compound">dlg.common</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tool</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedlg_1_1ddap__protocol" kindref="compound">dlg.ddap_protocol</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DROPStates</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedlg_1_1manager_1_1composite__manager" kindref="compound">dlg.manager.composite_manager</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DataIslandManager</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedlg_1_1manager_1_1session" kindref="compound">dlg.manager.session</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SessionStates</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedlg_1_1testutils" kindref="compound">dlg.testutils</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ManagerStarter</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacetest_1_1manager" kindref="compound">test.manager</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>testutils</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">hostname<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;localhost&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classtest_1_1manager_1_1test__dim_1_1LocalDimStarter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1manager_1_1test__dim_1_1LocalDimStarter" kindref="compound">LocalDimStarter</ref>(<ref refid="classdlg_1_1testutils_1_1ManagerStarter" kindref="compound">ManagerStarter</ref>):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">setUp(self):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(LocalDimStarter,<sp/>self).setUp()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1LocalDimStarter_1ab8e7458fceddbc06d2852367470bd1f7" kindref="member">nm_info</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1testutils_1_1ManagerStarter_1ab611c0255ef1531a4a4c7a15a73dacb4" kindref="member">start_nm_in_thread</ref>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1LocalDimStarter_1a56c0cdb26fa5b4def95658de077844b7" kindref="member">dm</ref><sp/>=<sp/>self.nm_info.manager</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1LocalDimStarter_1a8f4797eddfb26f20b8d0921a5c4f5b70" kindref="member">dim</ref><sp/>=<sp/><ref refid="classdlg_1_1manager_1_1composite__manager_1_1DataIslandManager" kindref="compound">DataIslandManager</ref>([hostname])</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">tearDown(self):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nm_info.stop()</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.shutdown()</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(LocalDimStarter,<sp/>self).tearDown()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classtest_1_1manager_1_1test__dim_1_1TestDIM" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1manager_1_1test__dim_1_1TestDIM" kindref="compound">TestDIM</ref>(<ref refid="classtest_1_1manager_1_1test__dim_1_1LocalDimStarter" kindref="compound">LocalDimStarter</ref>,<sp/>unittest.TestCase):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">createSessionAndAddTypicalGraph(self,<sp/>sessionId,<sp/>sleepTime=0):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphSpec<sp/>=<sp/>[{</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;plain&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;storage&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;memory&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">:hostname,<sp/></highlight><highlight class="stringliteral">&apos;consumers&apos;</highlight><highlight class="normal">:[</highlight><highlight class="stringliteral">&apos;B&apos;</highlight><highlight class="normal">]},</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;B&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;app&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;app&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;dlg.apps.simple.SleepAndCopyApp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;sleepTime&apos;</highlight><highlight class="normal">:sleepTime,<sp/></highlight><highlight class="stringliteral">&apos;outputs&apos;</highlight><highlight class="normal">:[</highlight><highlight class="stringliteral">&apos;C&apos;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">:hostname},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;C&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;plain&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;storage&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;memory&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">:hostname}]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.createSession(sessionId)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(0,<sp/>self.dim.getGraphSize(sessionId))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.addGraphSpec(sessionId,<sp/>graphSpec)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(len(graphSpec),<sp/>self.dim.getGraphSize(sessionId))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_createSession(self):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionId<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lalo&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.createSession(sessionId)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(1,<sp/>len(self.dm.getSessionIds()))</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(sessionId,<sp/>self.dm.getSessionIds()[0])</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_addGraphSpec(self):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionId<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lalo&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>node<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphSpec<sp/>=<sp/>[{</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;plain&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;storage&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;memory&apos;</highlight><highlight class="normal">}]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertRaises(Exception,<sp/>self.dim.addGraphSpec,<sp/>sessionId,<sp/>graphSpec)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wrong<sp/>node<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphSpec<sp/>=<sp/>[{</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;plain&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;storage&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;memory&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;unknown_host&apos;</highlight><highlight class="normal">}]</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertRaises(Exception,<sp/>self.dim.addGraphSpec,<sp/>sessionId,<sp/>graphSpec)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphSpec<sp/>=<sp/>[{</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;plain&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;storage&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;memory&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">:hostname}]</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.createSession(sessionId)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(0,<sp/>self.dim.getGraphSize(sessionId))</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.addGraphSpec(sessionId,<sp/>graphSpec)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(1,<sp/>self.dim.getGraphSize(sessionId))</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphFromDM<sp/>=<sp/>self.dm.getGraph(sessionId)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(1,<sp/>len(graphFromDM))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dropSpec<sp/>=<sp/>list(graphFromDM.values())[0]</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/>dropSpec[</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight><highlight class="stringliteral">&apos;plain&apos;</highlight><highlight class="normal">,<sp/>dropSpec[</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight><highlight class="stringliteral">&apos;memory&apos;</highlight><highlight class="normal">,<sp/>dropSpec[</highlight><highlight class="stringliteral">&apos;storage&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_deployGraph(self):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionId<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lalo&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1TestDIM_1a603a249ce11df5efac21f1fb0515d527" kindref="member">createSessionAndAddTypicalGraph</ref>(sessionId)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Deploy<sp/>now<sp/>and<sp/>get<sp/>A<sp/>and<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.deploySession(sessionId)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>c<sp/>=<sp/>[self.dm._sessions[sessionId].drops[x]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;C&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>os.urandom(10)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>droputils.DROPWaiterCtx(self,<sp/>c,<sp/>3):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.write(data)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setCompleted()</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(data,<sp/>droputils.allDropContents(c))</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_deployGraphWithCompletedDOs(self):</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1TestDIM_1aec32aa07242d0986bc25f83bd9d9782c" kindref="member">_test_deployGraphWithCompletedDOs</ref>(</highlight><highlight class="stringliteral">&apos;lalo&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_deployGraphWithCompletedDOs_sessionIdWithSpaces(self):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1TestDIM_1aec32aa07242d0986bc25f83bd9d9782c" kindref="member">_test_deployGraphWithCompletedDOs</ref>(</highlight><highlight class="stringliteral">&apos;lala<sp/>with<sp/>spaces&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_test_deployGraphWithCompletedDOs(self,<sp/>sessionId):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1TestDIM_1a603a249ce11df5efac21f1fb0515d527" kindref="member">createSessionAndAddTypicalGraph</ref>(sessionId,<sp/>sleepTime=1)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Deploy<sp/>now<sp/>and<sp/>get<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.deploySession(sessionId,<sp/>completedDrops=[</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>self.dm._sessions[sessionId].drops[</highlight><highlight class="stringliteral">&apos;C&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>should<sp/>be<sp/>happening<sp/>before<sp/>the<sp/>sleepTime<sp/>expires</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>droputils.DROPWaiterCtx(self,<sp/>c,<sp/>2):</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(DROPStates.COMPLETED,<sp/>c.status)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_sessionStatus(self):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">assertSessionStatus(sessionId,<sp/>status):</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionStatus<sp/>=<sp/>self.dim.getSessionStatus(sessionId)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(1,<sp/>len(sessionStatus))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIn(hostname,<sp/>sessionStatus)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(status,<sp/>sessionStatus[hostname])</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(status,<sp/>self.dm.getSessionStatus(sessionId))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionId<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lala&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.createSession(sessionId)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertSessionStatus(sessionId,<sp/>SessionStates.PRISTINE)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionId<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lalo&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1TestDIM_1a603a249ce11df5efac21f1fb0515d527" kindref="member">createSessionAndAddTypicalGraph</ref>(sessionId)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertSessionStatus(sessionId,<sp/>SessionStates.BUILDING)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dm.deploySession(sessionId)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertSessionStatus(sessionId,<sp/>SessionStates.RUNNING)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>c<sp/>=<sp/>[self.dm._sessions[sessionId].drops[x]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;C&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>os.urandom(10)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>droputils.DROPWaiterCtx(self,<sp/>c,<sp/>3):</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.write(data)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setCompleted()</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertSessionStatus(sessionId,<sp/>SessionStates.FINISHED)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_getGraph(self):</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionId<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lalo&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1TestDIM_1a603a249ce11df5efac21f1fb0515d527" kindref="member">createSessionAndAddTypicalGraph</ref>(sessionId)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphSpecFromDim<sp/>=<sp/>self.dim.getGraph(sessionId)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(3,<sp/>len(graphSpecFromDim))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>oid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;B&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;C&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIn(oid,<sp/>graphSpecFromDim)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphSepcFromDM<sp/>=<sp/>self.dm.getGraph(sessionId)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertDictEqual(graphSepcFromDM,<sp/>graphSpecFromDim)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_getGraphStatus(self):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">assertGraphStatus(sessionId,<sp/>expectedStatus):</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphStatusByDim<sp/>=<sp/>self.dim.getGraphStatus(sessionId)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphStatusByDM<sp/>=<sp/>self.dm.getGraphStatus(sessionId)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertDictEqual(graphStatusByDim,<sp/>graphStatusByDM)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dropStatus<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>graphStatusByDim.values():</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(expectedStatus,<sp/>dropStatus[</highlight><highlight class="stringliteral">&apos;status&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionId<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lala&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1TestDIM_1a603a249ce11df5efac21f1fb0515d527" kindref="member">createSessionAndAddTypicalGraph</ref>(sessionId)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.deploySession(sessionId)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertGraphStatus(sessionId,<sp/>DROPStates.INITIALIZED)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>c<sp/>=<sp/>[self.dm._sessions[sessionId].drops[x]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;C&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>os.urandom(10)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>droputils.DROPWaiterCtx(self,<sp/>c,<sp/>3):</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.write(data)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setCompleted()</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertGraphStatus(sessionId,<sp/>DROPStates.COMPLETED)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_doCancel(self):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">assertGraphStatus(sessionId,<sp/>expectedStatus):</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphStatusByDim<sp/>=<sp/>self.dim.getGraphStatus(sessionId)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphStatusByDM<sp/>=<sp/>self.dm.getGraphStatus(sessionId)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertDictEqual(graphStatusByDim,<sp/>graphStatusByDM)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dropStatus<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>graphStatusByDim.values():</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(expectedStatus,<sp/>dropStatus[</highlight><highlight class="stringliteral">&apos;status&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionId<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lala&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest_1_1manager_1_1test__dim_1_1TestDIM_1a603a249ce11df5efac21f1fb0515d527" kindref="member">createSessionAndAddTypicalGraph</ref>(sessionId,<sp/>10)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.deploySession(sessionId)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertGraphStatus(sessionId,<sp/>DROPStates.INITIALIZED)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dim.cancelSession(sessionId)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#a,<sp/>c<sp/>=<sp/>[self.dm._sessions[sessionId].drops[x]<sp/>for<sp/>x<sp/>in<sp/>(&apos;A&apos;,<sp/>&apos;C&apos;)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#data<sp/>=<sp/>os.urandom(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#with<sp/>droputils.DROPWaiterCtx(self,<sp/>c,<sp/>3):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>a.write(data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>a.setCompleted()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertGraphStatus(sessionId,<sp/>DROPStates.CANCELLED)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classtest_1_1manager_1_1test__dim_1_1TestREST" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1manager_1_1test__dim_1_1TestREST" kindref="compound">TestREST</ref>(<ref refid="classtest_1_1manager_1_1test__dim_1_1LocalDimStarter" kindref="compound">LocalDimStarter</ref>,<sp/>unittest.TestCase):</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest_1_1manager_1_1test__dim_1_1TestREST_1a1084a5a7e1637349aa8db91f9f1db8a2" kindref="member">test_fullRound</ref>(self):</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>test<sp/>that<sp/>exercises<sp/>most<sp/>of<sp/>the<sp/>REST<sp/>interface<sp/>exposed<sp/>on<sp/>top<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataIslandManager</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionId<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lala&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restPort<sp/><sp/>=<sp/>8888</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;--port&apos;</highlight><highlight class="normal">,<sp/>str(restPort),<sp/></highlight><highlight class="stringliteral">&apos;-N&apos;</highlight><highlight class="normal">,hostname,<sp/></highlight><highlight class="stringliteral">&apos;-qqq&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimProcess<sp/>=<sp/>tool.start_process(</highlight><highlight class="stringliteral">&apos;dim&apos;</highlight><highlight class="normal">,<sp/>args)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/><ref refid="classtest_1_1manager_1_1testutils_1_1terminating" kindref="compound">testutils.terminating</ref>(dimProcess,<sp/>10):</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>until<sp/>the<sp/>REST<sp/>server<sp/>becomes<sp/>alive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(utils.portIsOpen(</highlight><highlight class="stringliteral">&apos;localhost&apos;</highlight><highlight class="normal">,<sp/>restPort,<sp/>10),<sp/></highlight><highlight class="stringliteral">&quot;REST<sp/>server<sp/>didn&apos;t<sp/>come<sp/>up<sp/>in<sp/>time&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>DIM<sp/>is<sp/>still<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessions<sp/>=<sp/>testutils.get(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions&apos;</highlight><highlight class="normal">,<sp/>restPort)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(0,<sp/>len(sessions))</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimStatus<sp/>=<sp/>testutils.get(self,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>restPort)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(1,<sp/>len(dimStatus[</highlight><highlight class="stringliteral">&apos;hosts&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(hostname,<sp/>dimStatus[</highlight><highlight class="stringliteral">&apos;hosts&apos;</highlight><highlight class="normal">][0])</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(0,<sp/>len(dimStatus[</highlight><highlight class="stringliteral">&apos;sessionIds&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>a<sp/>session<sp/>and<sp/>check<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testutils.post(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions&apos;</highlight><highlight class="normal">,<sp/>restPort,<sp/></highlight><highlight class="stringliteral">&apos;{&quot;sessionId&quot;:&quot;%s&quot;}&apos;</highlight><highlight class="normal"><sp/>%<sp/>(sessionId))</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessions<sp/>=<sp/>testutils.get(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions&apos;</highlight><highlight class="normal">,<sp/>restPort)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(1,<sp/>len(sessions))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(sessionId,<sp/>sessions[0][</highlight><highlight class="stringliteral">&apos;sessionId&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertDictEqual({hostname:<sp/>SessionStates.PRISTINE},<sp/>sessions[0][</highlight><highlight class="stringliteral">&apos;status&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>this<sp/>complex<sp/>graph<sp/>spec<sp/>to<sp/>the<sp/>session</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>UID<sp/>of<sp/>the<sp/>two<sp/>leaf<sp/>nodes<sp/>of<sp/>this<sp/>complex.js<sp/>graph<sp/>are<sp/>T<sp/>and<sp/>S</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Since<sp/>the<sp/>original<sp/>complexGraph<sp/>doesn&apos;t<sp/>have<sp/>node<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>need<sp/>to<sp/>add<sp/>it<sp/>manually<sp/>before<sp/>submitting<sp/>--<sp/>otherwise<sp/>it<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>rejected<sp/>by<sp/>the<sp/>DIM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>pkg_resources.resource_stream(</highlight><highlight class="stringliteral">&apos;test&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;graphs/complex.js&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:<sp/></highlight><highlight class="comment">#<sp/>@UndefinedVariable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complexGraphSpec<sp/>=<sp/>json.load(codecs.getreader(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)(f))</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dropSpec<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>complexGraphSpec:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dropSpec[</highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">]<sp/>=<sp/>hostname</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testutils.post(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions/%s/graph/append&apos;</highlight><highlight class="normal"><sp/>%<sp/>(sessionId),<sp/>restPort,<sp/>json.dumps(complexGraphSpec))</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual({hostname:<sp/>SessionStates.BUILDING},<sp/>testutils.get(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions/%s/status&apos;</highlight><highlight class="normal"><sp/>%<sp/>(sessionId),<sp/>restPort))</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>we<sp/>deploy<sp/>the<sp/>graph...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testutils.post(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions/%s/deploy&apos;</highlight><highlight class="normal"><sp/>%<sp/>(sessionId),<sp/>restPort,<sp/></highlight><highlight class="stringliteral">&quot;completed=SL_A,SL_B,SL_C,SL_D,SL_K&quot;</highlight><highlight class="normal">,<sp/>mimeType=</highlight><highlight class="stringliteral">&apos;application/x-www-form-urlencoded&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual({hostname:<sp/>SessionStates.RUNNING},<sp/>testutils.get(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions/%s/status&apos;</highlight><highlight class="normal"><sp/>%<sp/>(sessionId),<sp/>restPort))</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>...and<sp/>write<sp/>to<sp/>all<sp/>5<sp/>root<sp/>nodes<sp/>that<sp/>are<sp/>listening<sp/>in<sp/>ports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>starting<sp/>at<sp/>1111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>os.urandom(10)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(5):</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utils.write_to(</highlight><highlight class="stringliteral">&apos;localhost&apos;</highlight><highlight class="normal">,<sp/>1111+i,<sp/>msg,<sp/>2),<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>write<sp/>data<sp/>to<sp/>localhost:%d&quot;</highlight><highlight class="normal"><sp/>%<sp/>(1111+i)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>until<sp/>the<sp/>graph<sp/>has<sp/>finished<sp/>its<sp/>execution.<sp/>We&apos;ll<sp/>know</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>it<sp/>finished<sp/>by<sp/>polling<sp/>the<sp/>status<sp/>of<sp/>the<sp/>session</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>SessionStates.RUNNING<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>testutils.get(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions/%s/status&apos;</highlight><highlight class="normal"><sp/>%<sp/>(sessionId),<sp/>restPort).values():</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(0.2)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual({hostname:<sp/>SessionStates.FINISHED},<sp/>testutils.get(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions/%s/status&apos;</highlight><highlight class="normal"><sp/>%<sp/>(sessionId),<sp/>restPort))</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testutils.delete(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions/%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(sessionId),<sp/>restPort)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessions<sp/>=<sp/>testutils.get(self,<sp/></highlight><highlight class="stringliteral">&apos;/sessions&apos;</highlight><highlight class="normal">,<sp/>restPort)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(0,<sp/>len(sessions))</highlight></codeline>
    </programlisting>
    <location file="daliuge-runtime/test/manager/test_dim.py"/>
  </compounddef>
</doxygen>
