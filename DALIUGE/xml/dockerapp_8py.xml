<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dockerapp_8py" kind="file" language="Python">
    <compoundname>dockerapp.py</compoundname>
    <innerclass refid="classdlg_1_1apps_1_1dockerapp_1_1ContainerIpWaiter" prot="public">dlg::apps::dockerapp::ContainerIpWaiter</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp" prot="public">dlg::apps::dockerapp::DockerApp</innerclass>
    <innernamespace refid="namespacedlg_1_1apps_1_1dockerapp">dlg::apps::dockerapp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>ICRAR<sp/>-<sp/>International<sp/>Centre<sp/>for<sp/>Radio<sp/>Astronomy<sp/>Research</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>(c)<sp/>UWA<sp/>-<sp/>The<sp/>University<sp/>of<sp/>Western<sp/>Australia,<sp/>2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Copyright<sp/>by<sp/>UWA<sp/>(in<sp/>the<sp/>framework<sp/>of<sp/>the<sp/>ICRAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MA<sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">Module<sp/>containing<sp/>docker-related<sp/>applications<sp/>and<sp/>functions</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>collections</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threading</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>configobj<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ConfigObj</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>docker</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>utils,<sp/>droputils</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..drop<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>BarrierAppDROP</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..exceptions<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>InvalidDropException</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">DLG_ROOT<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;/dlg_root&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">DockerPath<sp/>=<sp/>collections.namedtuple(</highlight><highlight class="stringliteral">&apos;DockerPath&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;path&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classdlg_1_1apps_1_1dockerapp_1_1ContainerIpWaiter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1apps_1_1dockerapp_1_1ContainerIpWaiter" kindref="compound">ContainerIpWaiter</ref>(object):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>class<sp/>that<sp/>remembers<sp/>the<sp/>target<sp/>DROP&apos;s<sp/>uid<sp/>and<sp/>containerIp<sp/>properties</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>when<sp/>its<sp/>internal<sp/>event<sp/>has<sp/>been<sp/>set,<sp/>and<sp/>returns<sp/>them<sp/>when<sp/>waitForIp<sp/>is</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>called,<sp/>which<sp/>previously<sp/>waits<sp/>for<sp/>the<sp/>event<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>drop):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1ContainerIpWaiter_1ac8aee82671054b073f0a172edb0e5106" kindref="member">_evt</ref><sp/>=<sp/>threading.Event()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1ContainerIpWaiter_1ab2fb59c39e5679a751a85f1040f4bd59" kindref="member">_uid</ref><sp/>=<sp/>drop.uid</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop.subscribe(self,<sp/></highlight><highlight class="stringliteral">&apos;containerIp&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">handleEvent(self,<sp/>e):</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1ContainerIpWaiter_1af4c4ff3c8b4f4787860f6ad209b516bb" kindref="member">_containerIp</ref><sp/>=<sp/>e.containerIp</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._evt.set()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">waitForIp(self,<sp/>timeout=None):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._evt.wait(timeout)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1ContainerIpWaiter_1ab2fb59c39e5679a751a85f1040f4bd59" kindref="member">_uid</ref>,<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1ContainerIpWaiter_1af4c4ff3c8b4f4787860f6ad209b516bb" kindref="member">_containerIp</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp" kindref="compound">DockerApp</ref>(BarrierAppDROP):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>BarrierAppDROP<sp/>that<sp/>represents<sp/>a<sp/>process<sp/>running<sp/>in<sp/>a<sp/>container</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>hosted<sp/>by<sp/>a<sp/>local<sp/>docker<sp/>daemon.<sp/>Depending<sp/>on<sp/>the<sp/>host<sp/>system,<sp/>the<sp/>docker</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>daemon<sp/>might<sp/>be<sp/>automatically<sp/>activated<sp/>when<sp/>a<sp/>client<sp/>tries<sp/>to<sp/>connect<sp/>to</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>it<sp/>via<sp/>its<sp/>unix<sp/>socket<sp/>(like<sp/>with<sp/>systemd)<sp/>or<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>brought<sp/>up</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>prior<sp/>to<sp/>any<sp/>client<sp/>operation<sp/>(upstart).<sp/>In<sp/>any<sp/>case,<sp/>if<sp/>the<sp/>daemon<sp/>is</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>not<sp/>present,<sp/>this<sp/>class<sp/>will<sp/>raise<sp/>exceptions<sp/>whenever<sp/>it<sp/>tries<sp/>to<sp/>connect</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>server<sp/>to<sp/>perform<sp/>some<sp/>operation.</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Docker<sp/>containers<sp/>are<sp/>built<sp/>from<sp/>docker<sp/>images,<sp/>which<sp/>are<sp/>pulled<sp/>to<sp/>the<sp/>host</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>where<sp/>the<sp/>docker<sp/>daemon<sp/>runs<sp/>either<sp/>explicitly<sp/>(via<sp/>`docker<sp/>pull`)<sp/>or<sp/>less</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>visibly<sp/>(e.g.,<sp/>when<sp/>running<sp/>`docker<sp/>run`<sp/>using<sp/>an<sp/>image<sp/>that<sp/>has<sp/>not<sp/>been</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>fetched<sp/>yet).<sp/>This<sp/>DockerApp<sp/>application<sp/>will<sp/>explicitly<sp/>pull<sp/>the<sp/>image<sp/>at</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>`initialize`<sp/>time,<sp/>meaning<sp/>that<sp/>the<sp/>docker<sp/>images<sp/>will<sp/>become<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>time<sp/>the<sp/>physical<sp/>graph<sp/>(which<sp/>this<sp/>application<sp/>is<sp/>part<sp/>of)<sp/>is<sp/>deployed.</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Docker<sp/>containers<sp/>also<sp/>need<sp/>a<sp/>command<sp/>to<sp/>be<sp/>run<sp/>in<sp/>them,<sp/>which<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>an<sp/>available<sp/>program<sp/>inside<sp/>the<sp/>image.</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Input<sp/>and<sp/>output**</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>inputs<sp/>and<sp/>outputs<sp/>used<sp/>by<sp/>the<sp/>dockerized<sp/>application<sp/>are<sp/>made<sp/>available</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>by<sp/>mapping<sp/>host<sp/>directories<sp/>and<sp/>files<sp/>as<sp/>&quot;data<sp/>volumes&quot;.<sp/>Inputs<sp/>are<sp/>bound</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>using<sp/>their<sp/>full<sp/>path,<sp/>but<sp/>outputs<sp/>are<sp/>bound<sp/>only<sp/>up<sp/>to<sp/>their<sp/>dirnames,</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>because<sp/>otherwise<sp/>they<sp/>would<sp/>be<sp/>created<sp/>at<sp/>container<sp/>creation<sp/>time<sp/>by</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Docker.<sp/>For<sp/>example,<sp/>the<sp/>output<sp/>/a/b/c<sp/>will<sp/>produce<sp/>a<sp/>binding<sp/>to<sp/>/dlg/a/b</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>inside<sp/>the<sp/>docker<sp/>container,<sp/>where<sp/>c<sp/>will<sp/>have<sp/>to<sp/>be<sp/>written<sp/>by<sp/>the<sp/>process</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>running<sp/>in<sp/>the<sp/>container.</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Since<sp/>the<sp/>command<sp/>to<sp/>be<sp/>run<sp/>in<sp/>the<sp/>container<sp/>receives<sp/>most<sp/>probably<sp/>as</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>arguments<sp/>the<sp/>paths<sp/>of<sp/>its<sp/>inputs<sp/>and<sp/>outputs,<sp/>and<sp/>since<sp/>these<sp/>might<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>known<sp/>precisely<sp/>until<sp/>runtime,<sp/>users<sp/>should<sp/>use<sp/>placeholders<sp/>for<sp/>them<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>command-line<sp/>specification.<sp/>Placeholders<sp/>for<sp/>input<sp/>locations<sp/>take<sp/>the<sp/>form</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>&quot;%iX&quot;,<sp/>where<sp/>X<sp/>starts<sp/>from<sp/>0<sp/>and<sp/>refers<sp/>to<sp/>the<sp/>X-th<sp/>filesystem-related</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>input.<sp/>Likewise,<sp/>output<sp/>locations<sp/>are<sp/>specified<sp/>as<sp/>&quot;%oX&quot;.<sp/>Alternatively,</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>inputs<sp/>and<sp/>outputs<sp/>can<sp/>be<sp/>referred<sp/>to<sp/>by<sp/>their<sp/>UIDs,<sp/>in<sp/>which<sp/>case<sp/>the</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>placeholders<sp/>will<sp/>look<sp/>like<sp/>&quot;%i[X]&quot;<sp/>and<sp/>&quot;%o[X]&quot;<sp/>respectively,<sp/>where<sp/>X<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>UID<sp/>of<sp/>the<sp/>input/output<sp/>being<sp/>referenced.</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Data<sp/>volumes<sp/>are<sp/>a<sp/>file-specific<sp/>feature.<sp/>For<sp/>this<sp/>reason,<sp/>volumes<sp/>are<sp/>setup</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>file-system<sp/>based<sp/>input/output<sp/>DROPs<sp/>only,<sp/>namely<sp/>the<sp/>FileDROP<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DirectoryContainer<sp/>types.<sp/>Other<sp/>DROP<sp/>types<sp/>can<sp/>instead<sp/>pass<sp/>down<sp/>their</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dataURL<sp/>property<sp/>via<sp/>the<sp/>command-line<sp/>by<sp/>using<sp/>placeholders.<sp/>Placeholders</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>input<sp/>DROP<sp/>dataURLs<sp/>take<sp/>the<sp/>form<sp/>of<sp/>&quot;%iDataURLX&quot;,<sp/>where<sp/>X<sp/>starts<sp/>from<sp/>0</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>refers<sp/>to<sp/>the<sp/>X-th<sp/>non-filesystem<sp/>related<sp/>input.<sp/>Likewise,<sp/>output</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dataURLs<sp/>are<sp/>specified<sp/>as<sp/>&quot;%oDataURLX&quot;.<sp/>Alternatively<sp/>users<sp/>can<sp/>refer<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dataURL<sp/>of<sp/>a<sp/>specific<sp/>input<sp/>or<sp/>output<sp/>as<sp/>&quot;%iDataURL[X]&quot;<sp/>and<sp/>&quot;%oDataURL[X]&quot;</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>respectively,<sp/>where<sp/>X<sp/>is<sp/>the<sp/>UID<sp/>of<sp/>the<sp/>input/output<sp/>being<sp/>referenced.</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Additional<sp/>volume<sp/>bindings<sp/>can<sp/>be<sp/>specified<sp/>via<sp/>the<sp/>keyword<sp/>arguments<sp/>when</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>creating<sp/>the<sp/>DockerApp.<sp/>The<sp/>host<sp/>file/directories<sp/>must<sp/>exist<sp/>at<sp/>the<sp/>moment</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>creating<sp/>the<sp/>DockerApp;<sp/>otherwise<sp/>it<sp/>will<sp/>fail<sp/>to<sp/>initialize.</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Users**</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>docker<sp/>container<sp/>usually<sp/>runs<sp/>as<sp/>root<sp/>by<sp/>default.<sp/>One<sp/>of<sp/>the<sp/>major</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>drawbacks<sp/>of<sp/>this<sp/>is<sp/>that<sp/>the<sp/>output<sp/>generated<sp/>by<sp/>the<sp/>containerized</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>application<sp/>will<sp/>belong<sp/>also<sp/>to<sp/>the<sp/>root<sp/>user<sp/>of<sp/>the<sp/>host<sp/>system,<sp/>and<sp/>not<sp/>to</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>user<sp/>running<sp/>the<sp/>DALiuGE<sp/>framework.<sp/>This<sp/>DockerApp<sp/>avoids<sp/>to<sp/>run<sp/>containers</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>as<sp/>the<sp/>root<sp/>user<sp/>because<sp/>of<sp/>this<sp/>reason.<sp/>Two<sp/>parameters,<sp/>given<sp/>at</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>construction<sp/>time,<sp/>control<sp/>this<sp/>behavior:</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>`user`</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>given<sp/>indicates<sp/>the<sp/>user<sp/>used<sp/>to<sp/>run<sp/>the<sp/>container.<sp/>It<sp/>is</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assumed<sp/>that<sp/>if<sp/>a<sp/>user<sp/>is<sp/>indicated,<sp/>the<sp/>user<sp/>already<sp/>exists<sp/>in</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>docker<sp/>image;<sp/>otherwise<sp/>the<sp/>container<sp/>will<sp/>actually<sp/>fail<sp/>to</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start.<sp/>Its<sp/>default<sp/>value<sp/>is<sp/>`None`,<sp/>meaning<sp/>that<sp/>the<sp/>container</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>run<sp/>as<sp/>the<sp/>root<sp/>user.</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>`ensureUserAndSwitch`</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>container<sp/>is<sp/>run<sp/>as<sp/>the<sp/>root<sp/>user,<sp/>this</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>option<sp/>indicates<sp/>whether<sp/>a<sp/>non-root<sp/>user<sp/>with<sp/>the<sp/>same<sp/>UID<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>running<sp/>this<sp/>process<sp/>should<sp/>be:<sp/>a)<sp/>searched<sp/>for,<sp/>b)<sp/>created</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>it<sp/>doesn&apos;t<sp/>exist,<sp/>and<sp/>c)<sp/>used<sp/>to<sp/>run<sp/>the<sp/>command<sp/>inside<sp/>the</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.<sp/>This<sp/>is<sp/>achieved<sp/>by<sp/>prepending<sp/>some<sp/>shell<sp/>commands<sp/>to</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>initial<sp/>user-specified<sp/>command,<sp/>which<sp/>will<sp/>run<sp/>as<sp/>root<sp/>first,</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>that<sp/>finally<sp/>perform<sp/>the<sp/>switch<sp/>within<sp/>the<sp/>container<sp/>process.</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Its<sp/>default<sp/>value<sp/>is<sp/>`True`<sp/>if<sp/>`user`<sp/>is<sp/>`None`;<sp/>`False`</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise.</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Using<sp/>these<sp/>two<sp/>options<sp/>one<sp/>can<sp/>thus<sp/>control<sp/>the<sp/>user<sp/>that<sp/>will<sp/>run<sp/>the</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>command<sp/>inside<sp/>the<sp/>container.</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Communication<sp/>between<sp/>containers**</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Although<sp/>some<sp/>containerized<sp/>applications<sp/>might<sp/>run<sp/>on<sp/>their<sp/>own,<sp/>there<sp/>are</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>cases<sp/>where<sp/>applications<sp/>need<sp/>to<sp/>talk<sp/>to<sp/>each<sp/>other<sp/>in<sp/>order<sp/>to<sp/>advance</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(like<sp/>in<sp/>the<sp/>case<sp/>of<sp/>client-server<sp/>applications,<sp/>or<sp/>in<sp/>the<sp/>case<sp/>of<sp/>MPI</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>applications).<sp/>All<sp/>containers<sp/>started<sp/>in<sp/>the<sp/>same<sp/>host<sp/>(and<sp/>therefore,<sp/>all</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>applications<sp/>running<sp/>in<sp/>them)<sp/>belong<sp/>by<sp/>default<sp/>to<sp/>the<sp/>same<sp/>network,<sp/>and</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>therefore<sp/>are<sp/>already<sp/>visible.</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Applications<sp/>needing<sp/>to<sp/>communicate<sp/>with<sp/>other<sp/>applications<sp/>should<sp/>be<sp/>able</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>specify<sp/>the<sp/>target&apos;s<sp/>IP<sp/>in<sp/>their<sp/>command-line.<sp/>Since<sp/>the<sp/>IP<sp/>is<sp/>not<sp/>known</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>until<sp/>containers<sp/>are<sp/>created,<sp/>this<sp/>specification<sp/>is<sp/>done<sp/>using<sp/>the</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>%containerIp[oid]%<sp/>placeholder,<sp/>with<sp/>&apos;oid&apos;<sp/>being<sp/>the<sp/>OID<sp/>of<sp/>the<sp/>target</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DockerApp.</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>need<sp/>to<sp/>know<sp/>other<sp/>DockerApp&apos;s<sp/>IP<sp/>imposes<sp/>a<sp/>sequential<sp/>order<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>startup<sp/>of<sp/>the<sp/>containers,<sp/>since<sp/>one<sp/>needs<sp/>to<sp/>be<sp/>started<sp/>in<sp/>order<sp/>to<sp/>learn</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>its<sp/>IP,<sp/>which<sp/>is<sp/>used<sp/>to<sp/>start<sp/>the<sp/>second.<sp/>This<sp/>is<sp/>handled<sp/>gracefully<sp/>by</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>DockerApp<sp/>code,<sp/>with<sp/>the<sp/>condition<sp/>that<sp/>`self.handleInterest`<sp/>is<sp/>invoked</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>where<sp/>necessary.<sp/>See<sp/>`self.handleInterest`<sp/>for<sp/>more<sp/>information<sp/>about<sp/>this</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>mechanism.</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**TODO**</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Processes<sp/>in<sp/>containers<sp/>might<sp/>not<sp/>always<sp/>exit<sp/>by<sp/>themselves,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>containers<sp/>might<sp/>need<sp/>to<sp/>be<sp/>manually<sp/>stopped.<sp/>This<sp/>the<sp/>case<sp/>for<sp/>example<sp/>of</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>an<sp/>set<sp/>of<sp/>MPI<sp/>processes,<sp/>where<sp/>the<sp/>master<sp/>container<sp/>will<sp/>run<sp/>the<sp/>MPI</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>program<sp/>and<sp/>the<sp/>slave<sp/>containers<sp/>will<sp/>run<sp/>an<sp/>SSH<sp/>daemon,<sp/>where<sp/>the<sp/>SSH</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>daemon<sp/>will<sp/>not<sp/>quit<sp/>automatically<sp/>once<sp/>the<sp/>master<sp/>process<sp/>has<sp/>ended.</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Still,<sp/>we<sp/>probably<sp/>will<sp/>need<sp/>to<sp/>differentiate<sp/>between<sp/>a<sp/>forced<sp/>quit<sp/>because</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>a<sp/>timeout,<sp/>and<sp/>a<sp/>good<sp/>quit,<sp/>and<sp/>therefore<sp/>we<sp/>might<sp/>impose<sp/>that<sp/>processes</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>running<sp/>in<sp/>a<sp/>container<sp/>must<sp/>quit<sp/>themselves<sp/>after<sp/>successfully<sp/>performing</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>their<sp/>task.</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BarrierAppDROP.initialize(self,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref><sp/>=<sp/>self._getArg(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;image&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref>:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&apos;No<sp/>docker<sp/>image<sp/>specified,<sp/>cannot<sp/>create<sp/>DockerApp&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref>:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&quot;%r:<sp/>Image<sp/>%s<sp/>is<sp/>too<sp/>generic<sp/>since<sp/>it<sp/>doesn&apos;t<sp/>specify<sp/>a<sp/>tag&quot;</highlight><highlight class="normal">,<sp/>self,<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a8e149a52f5fe562507d72e284c86ef88" kindref="member">_command</ref><sp/>=<sp/>self._getArg(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;command&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a8e149a52f5fe562507d72e284c86ef88" kindref="member">_command</ref>:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>command<sp/>specified,<sp/>cannot<sp/>create<sp/>DockerApp&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>user<sp/>used<sp/>to<sp/>run<sp/>the<sp/>process<sp/>in<sp/>the<sp/>docker<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>By<sp/>default<sp/>docker<sp/>containers<sp/>run<sp/>as<sp/>root,<sp/>but<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>a<sp/>process<sp/>using<sp/>a<sp/>different<sp/>user<sp/>because<sp/>otherwise<sp/>anything<sp/>that<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>process<sp/>writes<sp/>to<sp/>the<sp/>filesystem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a2d02605c7b4dc695ce921629e5d5a0c0" kindref="member">_user</ref><sp/>=<sp/>self._getArg(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;user&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>some<sp/>cases<sp/>we<sp/>want<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>command<sp/>in<sp/>the<sp/>container<sp/>runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>as<sp/>a<sp/>certain<sp/>user,<sp/>so<sp/>we<sp/>wrap<sp/>up<sp/>the<sp/>command<sp/>line<sp/>in<sp/>a<sp/>small<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>that<sp/>will<sp/>create<sp/>the<sp/>user<sp/>if<sp/>missing<sp/>and<sp/>switch<sp/>to<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a0cd96aff0c7e31c80a69f1590fea5eb4" kindref="member">_ensureUserAndSwitch</ref><sp/>=<sp/>self._getArg(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;ensureUserAndSwitch&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a2d02605c7b4dc695ce921629e5d5a0c0" kindref="member">_user</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>By<sp/>default<sp/>containers<sp/>are<sp/>removed<sp/>from<sp/>the<sp/>filesystem,<sp/>but<sp/>people</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>might<sp/>want<sp/>to<sp/>preserve<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>This<sp/>might<sp/>be<sp/>something<sp/>that<sp/>the<sp/>data<sp/>lifecycle<sp/>manager<sp/>could</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>handle,<sp/>but<sp/>for<sp/>the<sp/>time<sp/>being<sp/>we<sp/>do<sp/>it<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a5663d0bf493b0e3a1c9518741b9f10c0" kindref="member">_removeContainer</ref><sp/>=<sp/>self._getArg(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;removeContainer&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Additional<sp/>volume<sp/>bindings<sp/>can<sp/>be<sp/>specified<sp/>for<sp/>existing<sp/>files/dirs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>the<sp/>host<sp/>system.<sp/>They<sp/>are<sp/>given<sp/>either<sp/>as<sp/>a<sp/>list<sp/>or<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>comma-separated<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a8fc2a7b7f4ec90b9d8caf10d82df8c0b" kindref="member">_additionalBindings</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindings<sp/>=<sp/>self._getArg(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;additionalBindings&apos;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindings<sp/>=<sp/>bindings.split(</highlight><highlight class="stringliteral">&apos;,&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(bindings,<sp/>str)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>bindings</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>binding<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bindings:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>binding.find(</highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>==<sp/>-1:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_path<sp/>=<sp/>container_path<sp/>=<sp/>binding</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_path,<sp/>container_path<sp/>=<sp/>binding.split(</highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(host_path):</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&quot;&apos;Path<sp/>%s<sp/>doesn&apos;t<sp/>exist,<sp/>cannot<sp/>use<sp/>as<sp/>additional<sp/>volume<sp/>binding&quot;</highlight><highlight class="normal"><sp/>%<sp/>(host_path,))</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a8fc2a7b7f4ec90b9d8caf10d82df8c0b" kindref="member">_additionalBindings</ref>[host_path]<sp/>=<sp/>container_path</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;%r<sp/>with<sp/>image<sp/>&apos;%s&apos;<sp/>and<sp/>command<sp/>&apos;%s&apos;<sp/>created&quot;</highlight><highlight class="normal">,<sp/>self,<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref>,<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a8e149a52f5fe562507d72e284c86ef88" kindref="member">_command</ref>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>we<sp/>have<sp/>the<sp/>image;<sp/>otherwise<sp/>pull<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>DockerApp._get_client()</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>any([self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>im.tags<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>im<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>c.images.list()])</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>found:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Image<sp/>&apos;%s&apos;<sp/>not<sp/>found,<sp/>pulling<sp/>it&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.images.pull(self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Took<sp/>%.2f<sp/>[s]<sp/>to<sp/>pull<sp/>image<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>(end-start),<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Image<sp/>&apos;%s&apos;<sp/>found,<sp/>no<sp/>need<sp/>to<sp/>pull<sp/>it&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.api.close()</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a98ac424eed898fb54e53ffb5706c0013" kindref="member">_containerIp</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a547ef8b3a55decf4d39404f51dedce3f" kindref="member">_containerId</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a6780aa34c8f9c7445d2c0baa2377f03b" kindref="member">_waiters</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">containerIp(self):</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a98ac424eed898fb54e53ffb5706c0013" kindref="member">_containerIp</ref></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>@containerIp.setter</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">containerIp(self,<sp/>containerIp):</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a98ac424eed898fb54e53ffb5706c0013" kindref="member">_containerIp</ref><sp/>=<sp/>containerIp</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._fire(</highlight><highlight class="stringliteral">&apos;containerIp&apos;</highlight><highlight class="normal">,<sp/>containerIp=containerIp)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">containerId(self):</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a547ef8b3a55decf4d39404f51dedce3f" kindref="member">_containerId</ref></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">handleInterest(self,<sp/>drop):</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>only<sp/>interest<sp/>we<sp/>currently<sp/>have<sp/>is<sp/>the<sp/>containerIp<sp/>of<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>DockerApps,<sp/>and<sp/>only<sp/>if<sp/>our<sp/>command<sp/>actually<sp/>uses<sp/>this<sp/>IP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(drop,<sp/>DockerApp):</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;%containerIp[{0}]%&apos;</highlight><highlight class="normal">.format(drop.uid)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a8e149a52f5fe562507d72e284c86ef88" kindref="member">_command</ref>:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._waiters.append(<ref refid="classdlg_1_1apps_1_1dockerapp_1_1ContainerIpWaiter" kindref="compound">ContainerIpWaiter</ref>(drop))</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;%r:<sp/>Added<sp/>ContainerIpWaiter<sp/>for<sp/>%r&apos;</highlight><highlight class="normal">,<sp/>self,<sp/>drop)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run(self):</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Replace<sp/>any<sp/>placeholder<sp/>in<sp/>the<sp/>commandline<sp/>with<sp/>the<sp/>proper<sp/>path<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dataURL,<sp/>depending<sp/>on<sp/>the<sp/>type<sp/>of<sp/>input/output<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>the<sp/>case<sp/>of<sp/>fs-based<sp/>i/o<sp/>we<sp/>replace<sp/>the<sp/>command-line<sp/>with<sp/>the<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>that<sp/>the<sp/>Drop<sp/>will<sp/>receive<sp/>*inside*<sp/>the<sp/>docker<sp/>container<sp/>(see<sp/>below)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iitems<sp/>=<sp/>self._inputs.items()</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oitems<sp/>=<sp/>self._outputs.items()</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsInputs<sp/><sp/>=<sp/>{uid:<sp/>i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>iitems<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>droputils.has_path(i)}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsOutputs<sp/>=<sp/>{uid:<sp/>o<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>oitems<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>droputils.has_path(o)}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dockerInputs<sp/><sp/>=<sp/>{uid:<sp/>DockerPath(DLG_ROOT<sp/>+<sp/>i.path)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fsInputs.items()}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dockerOutputs<sp/>=<sp/>{uid:<sp/>DockerPath(DLG_ROOT<sp/>+<sp/>o.path)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fsOutputs.items()}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataURLInputs<sp/><sp/>=<sp/>{uid:<sp/>i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>iitems<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>droputils.has_path(i)}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataURLOutputs<sp/>=<sp/>{uid:<sp/>o<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>oitems<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>droputils.has_path(o)}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>droputils.replace_path_placeholders(self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a8e149a52f5fe562507d72e284c86ef88" kindref="member">_command</ref>,<sp/>dockerInputs,<sp/>dockerOutputs)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>droputils.replace_dataurl_placeholders(cmd,<sp/>dataURLInputs,<sp/>dataURLOutputs)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>bind<sp/>the<sp/>inputs<sp/>and<sp/>outputs<sp/>inside<sp/>the<sp/>docker<sp/>under<sp/>the<sp/>DLG_ROOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>directory,<sp/>maintaining<sp/>the<sp/>rest<sp/>of<sp/>their<sp/>original<sp/>paths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Outputs<sp/>are<sp/>bound<sp/>only<sp/>up<sp/>to<sp/>their<sp/>dirname<sp/>(see<sp/>class<sp/>doc<sp/>for<sp/>details)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Volume<sp/>bindings<sp/>are<sp/>setup<sp/>for<sp/>FileDROPs<sp/>and<sp/>DirectoryContainers<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binds<sp/><sp/>=<sp/>[<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.path<sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dockerInputs[uid].path<sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fsInputs.items()]</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binds<sp/>+=<sp/>[os.path.dirname(o.path)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>os.path.dirname(dockerOutputs[uid].path)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fsOutputs.items()]</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binds<sp/>+=<sp/>[host_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>container_path<sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>host_path,<sp/>container_path<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._additionalBindings.items()]</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Volume<sp/>bindings:<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>binds)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>until<sp/>the<sp/>DockerApps<sp/>this<sp/>application<sp/>runtime<sp/>depends<sp/>on<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>started,<sp/>and<sp/>replace<sp/>their<sp/>IP<sp/>placeholders<sp/>by<sp/>the<sp/>real<sp/>IPs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>waiter<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a6780aa34c8f9c7445d2c0baa2377f03b" kindref="member">_waiters</ref>:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid,<sp/>ip<sp/>=<sp/>waiter.waitForIp()</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>cmd.replace(</highlight><highlight class="stringliteral">&quot;%containerIp[{0}]%&quot;</highlight><highlight class="normal">.format(uid),<sp/>ip)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Command<sp/>after<sp/>IP<sp/>replacement<sp/>is:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>cmd)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>a<sp/>user<sp/>has<sp/>been<sp/>given,<sp/>we<sp/>run<sp/>the<sp/>container<sp/>as<sp/>that<sp/>user.<sp/>It<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>useful<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>USER<sp/>environment<sp/>variable<sp/>is<sp/>set<sp/>in<sp/>those</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cases<sp/>(e.g.,<sp/>casapy<sp/>requires<sp/>this<sp/>to<sp/>correctly<sp/>operate)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>=<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a2d02605c7b4dc695ce921629e5d5a0c0" kindref="member">_user</ref></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env<sp/><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>user<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;USER&apos;</highlight><highlight class="normal">:user}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a0cd96aff0c7e31c80a69f1590fea5eb4" kindref="member">_ensureUserAndSwitch</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Append<sp/>commands<sp/>that<sp/>will<sp/>make<sp/>sure<sp/>a<sp/>user<sp/>is<sp/>present<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>same<sp/>UID<sp/>of<sp/>the<sp/>current<sp/>user,<sp/>and<sp/>that<sp/>the<sp/>command<sp/>that<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>supplied<sp/>for<sp/>this<sp/>container<sp/>runs<sp/>as<sp/>that<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Also<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>output<sp/>will<sp/>belong<sp/>to<sp/>that<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>=<sp/>os.getuid()</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createUserAndGo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;id<sp/>-u<sp/>{0}<sp/>&amp;&gt;<sp/>/dev/null<sp/>||<sp/>adduser<sp/>--uid<sp/>{0}<sp/>r;<sp/>&quot;</highlight><highlight class="normal">.format(uid)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dirname<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>set([os.path.dirname(x.path)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dockerOutputs.values()]):</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createUserAndGo<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;chown<sp/>-R<sp/>{0}.{0}<sp/>&quot;{1}&quot;;<sp/>&apos;</highlight><highlight class="normal">.format(uid,<sp/>dirname)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createUserAndGo<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;cd;<sp/>su<sp/>-l<sp/>$(getent<sp/>passwd<sp/>{0}<sp/>|<sp/>cut<sp/>-f1<sp/>-d:)<sp/>-c<sp/>/bin/bash<sp/>-c<sp/>&apos;{1}&apos;&quot;</highlight><highlight class="normal">.format(uid,<sp/>utils.escapeQuotes(cmd,<sp/>doubleQuotes=</highlight><highlight class="keyword">False</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>createUserAndGo</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wrap<sp/>everything<sp/>inside<sp/>bash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;/bin/bash<sp/>-c<sp/>&quot;%s&quot;&apos;</highlight><highlight class="normal"><sp/>%<sp/>(utils.escapeQuotes(cmd,<sp/>singleQuotes=</highlight><highlight class="keyword">False</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Command<sp/>after<sp/>user<sp/>creation<sp/>and<sp/>wrapping<sp/>is:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>cmd)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>DockerApp._get_client()</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Remove<sp/>the<sp/>container<sp/>unless<sp/>it&apos;s<sp/>specified<sp/>that<sp/>we<sp/>should<sp/>keep<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(used<sp/>below)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">rm(container):</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a5663d0bf493b0e3a1c9518741b9f10c0" kindref="member">_removeContainer</ref>:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.remove()</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container<sp/>=<sp/>c.containers.create(</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a08c213fff519d4efe1c07979bb54ad05" kindref="member">_image</ref>,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volumes=binds,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user=user,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>environment=env,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a547ef8b3a55decf4d39404f51dedce3f" kindref="member">_containerId</ref><sp/>=<sp/>cId<sp/>=<sp/>container.id</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Created<sp/>container<sp/>%s<sp/>for<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>cId,<sp/>self)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Start<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.start()</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Started<sp/>container<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>cId)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Figure<sp/>out<sp/>the<sp/>container&apos;s<sp/>IP<sp/>and<sp/>save<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setting<sp/>self.containerIp<sp/>will<sp/>trigger<sp/>an<sp/>event<sp/>being<sp/>sent<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>registered<sp/>listeners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspection<sp/>=<sp/>c.api.inspect_container(cId)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Docker<sp/>inspection:<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>inspection)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a63b019cbf7ac40c0c45d90bf53b2d10a" kindref="member">containerIp</ref><sp/>=<sp/>inspection[</highlight><highlight class="stringliteral">&apos;NetworkSettings&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;IPAddress&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>until<sp/>it<sp/>finishes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>docker-py<sp/>&lt;<sp/>3<sp/>the<sp/>.wait()<sp/>method<sp/>returns<sp/>the<sp/>exit<sp/>code<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>docker-py<sp/>&gt;=<sp/>3<sp/>the<sp/>.wait()<sp/>method<sp/>returns<sp/>a<sp/>dictionary<sp/>with<sp/>the<sp/>API<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>container.wait()</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(x,<sp/>dict)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;StatusCode&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a22d114ade14985f5e14e504fcaf39ef8" kindref="member">_exitCode</ref><sp/>=<sp/>x[</highlight><highlight class="stringliteral">&apos;StatusCode&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a22d114ade14985f5e14e504fcaf39ef8" kindref="member">_exitCode</ref><sp/>=<sp/>x</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Container<sp/>%s<sp/>finished<sp/>in<sp/>%.2f<sp/>[s]<sp/>with<sp/>exit<sp/>code<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>cId,<sp/>(end-start),<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a22d114ade14985f5e14e504fcaf39ef8" kindref="member">_exitCode</ref>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a22d114ade14985f5e14e504fcaf39ef8" kindref="member">_exitCode</ref><sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>logger.isEnabledFor(logging.DEBUG):</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdout<sp/>=<sp/>container.logs(stream=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>stdout=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>stderr=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stderr<sp/>=<sp/>container.logs(stream=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>stdout=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>stderr=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Container<sp/>%s<sp/>finished<sp/>successfully,<sp/>output<sp/>follows.\n==STDOUT==\n%s==STDERR==\n%s&quot;</highlight><highlight class="normal">,<sp/>cId,<sp/>stdout,<sp/>stderr)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a22d114ade14985f5e14e504fcaf39ef8" kindref="member">_exitCode</ref><sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdout<sp/>=<sp/>container.logs(stream=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>stdout=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>stderr=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stderr<sp/>=<sp/>container.logs(stream=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>stdout=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>stderr=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Container<sp/>%s<sp/>didn&apos;t<sp/>finish<sp/>successfully<sp/>(exit<sp/>code<sp/>%d)&quot;</highlight><highlight class="normal"><sp/>%<sp/>(cId,<sp/>self.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1a22d114ade14985f5e14e504fcaf39ef8" kindref="member">_exitCode</ref>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(msg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>output<sp/>follows.\n==STDOUT==\n%s==STDERR==\n%s&quot;</highlight><highlight class="normal">,<sp/>stdout,<sp/>stderr)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm(container)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(msg)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm(container)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.api.close()</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_get_client(cls):</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>docker.from_env(version=</highlight><highlight class="stringliteral">&apos;auto&apos;</highlight><highlight class="normal">,<sp/>**cls.<ref refid="classdlg_1_1apps_1_1dockerapp_1_1DockerApp_1abc7136a9f8c76a9b10cb7030987371e2" kindref="member">_kwargs_from_env</ref>())</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_kwargs_from_env(cls,<sp/>ssl_version=None,<sp/>assert_hostname=False):</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Look<sp/>for<sp/>parameters<sp/>to<sp/>make<sp/>Docker<sp/>work<sp/>under<sp/>OS<sp/>X</highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>ssl_version:<sp/><sp/><sp/><sp/><sp/>which<sp/>SSL<sp/>version</highlight></codeline>
<codeline lineno="401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>assert_hostname:<sp/>perform<sp/>hostname<sp/>checking</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_file_name<sp/>=<sp/>os.path.join(utils.getDlgDir(),<sp/></highlight><highlight class="stringliteral">&apos;dlg.settings&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(config_file_name):</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConfigObj(config_file_name)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
    </programlisting>
    <location file="daliuge-runtime/dlg/apps/dockerapp.py"/>
  </compounddef>
</doxygen>
