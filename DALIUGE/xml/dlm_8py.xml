<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dlm_8py" kind="file" language="Python">
    <compoundname>dlm.py</compoundname>
    <innerclass refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask" prot="public">dlg::lifecycle::dlm::DataLifecycleManagerBackgroundTask</innerclass>
    <innerclass refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPChecker" prot="public">dlg::lifecycle::dlm::DROPChecker</innerclass>
    <innerclass refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPGarbageCollector" prot="public">dlg::lifecycle::dlm::DROPGarbageCollector</innerclass>
    <innerclass refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPMover" prot="public">dlg::lifecycle::dlm::DROPMover</innerclass>
    <innerclass refid="classdlg_1_1lifecycle_1_1dlm_1_1DropEventListener" prot="public">dlg::lifecycle::dlm::DropEventListener</innerclass>
    <innerclass refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager" prot="public">dlg::lifecycle::dlm::DataLifecycleManager</innerclass>
    <innernamespace refid="namespacedlg_1_1lifecycle_1_1dlm">dlg::lifecycle::dlm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>ICRAR<sp/>-<sp/>International<sp/>Centre<sp/>for<sp/>Radio<sp/>Astronomy<sp/>Research</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>(c)<sp/>UWA<sp/>-<sp/>The<sp/>University<sp/>of<sp/>Western<sp/>Australia,<sp/>2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Copyright<sp/>by<sp/>UWA<sp/>(in<sp/>the<sp/>framework<sp/>of<sp/>the<sp/>ICRAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MA<sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">A<sp/>simple<sp/>implementation<sp/>of<sp/>the<sp/>data<sp/>lifecycle<sp/>manager<sp/>(DLM).</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">The<sp/>following<sp/>is<sp/>an<sp/>extract<sp/>of<sp/>PDR.02.02<sp/>&quot;DATA<sp/>Sub-element<sp/>design<sp/>report&quot;,</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">section<sp/>8<sp/>&quot;Data<sp/>Life<sp/>Cycle<sp/>Management&quot;,<sp/>where<sp/>the<sp/>DLM<sp/>is<sp/>defined:</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/>&quot;The<sp/>data<sp/>layer<sp/>needs<sp/>a<sp/>subsystem<sp/>that<sp/>automates<sp/>and<sp/>manages<sp/>the<sp/>migration<sp/>of</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/>DataObjects<sp/>through<sp/>the<sp/>various<sp/>life<sp/>cycle<sp/>states.<sp/>This<sp/>is<sp/>a<sp/>consequence<sp/>of</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/>the<sp/>sheer<sp/>number<sp/>of<sp/>parallel<sp/>tasks<sp/>when<sp/>dealing<sp/>with<sp/>the<sp/>very<sp/>high<sp/>data<sp/>rate</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/>and<sp/>volume.<sp/>The<sp/>goal<sp/>of<sp/>data<sp/>life-cycle<sp/>management<sp/>is<sp/>the<sp/>optimal<sp/>placement<sp/>of</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/>data<sp/>in<sp/>terms<sp/>of<sp/>cost<sp/>and<sp/>performance<sp/>and<sp/>employs<sp/>a<sp/>multi-tiered<sp/>storage</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/>system<sp/>to<sp/>do<sp/>so.<sp/>It<sp/>is<sp/>important<sp/>to<sp/>note<sp/>that<sp/>the<sp/>life-cycle<sp/>of<sp/>a<sp/>DataObject</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/>can<sp/>span<sp/>from<sp/>minutes<sp/>to<sp/>many<sp/>years<sp/>and<sp/>therefore<sp/>seamlessly<sp/>covers<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/>processing<sp/>as<sp/>well<sp/>as<sp/>the<sp/>long<sp/>term<sp/>storage<sp/>(science<sp/>archive)<sp/>domain.</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/>Data<sp/>life-cycle<sp/>management<sp/>has<sp/>to<sp/>support<sp/>a<sp/>number<sp/>of<sp/>requirements:</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/>1.<sp/>Migration<sp/>of<sp/>data<sp/>from<sp/>one<sp/>medium<sp/>to<sp/>another:<sp/>SKA1-SYS_REQ-2728</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/>2.<sp/>Aggregation<sp/>of<sp/>DataObjects<sp/>into<sp/>DataProducts<sp/>and<sp/>DataPackages:<sp/>this<sp/>is</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>non-trivial<sp/>because<sp/>of<sp/>concurrent<sp/>workflows,<sp/>SKA1-SYS_REQ-2128,</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>SDP_REQ-252,<sp/>and<sp/>the<sp/>need<sp/>for<sp/>data<sp/>tracing,<sp/>provenance<sp/>and<sp/>access<sp/>control,</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>SKA1-SYS_REQ-2821,<sp/>SDP_REQ-255</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/>3.<sp/>Migration<sp/>between<sp/>storage<sp/>layers,<sp/>includes<sp/>SDP_REQ-263</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/>4.<sp/>Replication/distribution<sp/>including<sp/>resilience<sp/>(preciousness)<sp/>support,</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>incl.<sp/>SKA1-SYS_REQ-2350,<sp/>SDP_REQ-260<sp/>-<sp/>262</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/>5.<sp/>Retirement<sp/>of<sp/>expired<sp/>(temporary)<sp/>data,<sp/>incl.<sp/>SDP_REQ-256.&quot;</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral">The<sp/>requirements<sp/>referenced<sp/>by<sp/>the<sp/>above<sp/>documentation<sp/>read<sp/>(taken<sp/>from<sp/>PDR03</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral">&quot;Requirement<sp/>analysis&quot;):</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/>*<sp/>SKA1-SYS_REQ-2728<sp/>&quot;Data<sp/>migration<sp/>design&quot;</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/>The<sp/>archive<sp/>design<sp/>shall<sp/>support<sp/>and<sp/>facilitate<sp/>migration<sp/>from<sp/>one<sp/>medium<sp/>to</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/>another</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/>*<sp/>SKA1-SYS_REQ-2128<sp/>&quot;Continuum<sp/>and<sp/>spectral<sp/>line<sp/>imaging<sp/>mode&quot;</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/>All<sp/>three<sp/>SKA1<sp/>telescopes<sp/>shall<sp/>be<sp/>capable<sp/>of<sp/>operating<sp/>in<sp/>a<sp/>Continuum<sp/>and</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/>Spectral-line<sp/>imaging<sp/>mode<sp/>concurrently.</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/>*<sp/>SDP_REQ-252<sp/>&quot;Concurrent<sp/>Workflows&quot;</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/>The<sp/>data<sp/>layer<sp/>manager<sp/>shall<sp/>concurrently<sp/>generate<sp/>data<sp/>products<sp/>for<sp/>multiple</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/>observing<sp/>programs.<sp/>It<sp/>shall<sp/>also<sp/>support<sp/>a<sp/>single<sp/>observing<sp/>program</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/>concurrently<sp/>generating<sp/>multiple<sp/>data<sp/>products<sp/>as<sp/>well<sp/>as<sp/>a<sp/>mix<sp/>of<sp/>both</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/>scenarios.</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/>*<sp/>SKA1-SYS_REQ-2821<sp/>&quot;Archive&quot;</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/>There<sp/>shall<sp/>be<sp/>an<sp/>archive<sp/>for<sp/>each<sp/>telescope,<sp/>located<sp/>in<sp/>the<sp/>Science</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/>Processing<sp/>Centre,<sp/>for<sp/>storing<sp/>selected<sp/>science<sp/>data<sp/>products<sp/>for<sp/>subsequent</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/>access<sp/>by<sp/>users<sp/>according<sp/>to<sp/>science<sp/>data<sp/>access<sp/>policy.</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/>*<sp/>SDP_REQ-255<sp/>&quot;Tracing<sp/>Data&quot;</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/>It<sp/>shall<sp/>be<sp/>possible<sp/>to<sp/>trace<sp/>each<sp/>data<sp/>product<sp/>in<sp/>the<sp/>archive<sp/>back<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/>scheduling<sp/>block<sp/>and<sp/>an<sp/>observing<sp/>program.<sp/>Reversely,<sp/>it<sp/>shall<sp/>be<sp/>possible<sp/>to</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/>either<sp/>search<sp/>by<sp/>observing<sp/>program<sp/>or<sp/>scheduling<sp/>block<sp/>and<sp/>to<sp/>subsequently</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/>retrieve<sp/>all<sp/>or<sp/>part<sp/>of<sp/>the<sp/>associated<sp/>archived<sp/>data.<sp/>This<sp/>includes<sp/>relevant</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/>logging<sp/>and<sp/>monitoring<sp/>information<sp/>as<sp/>well<sp/>as<sp/>quality<sp/>assessment<sp/>data</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/>collected<sp/>during<sp/>the<sp/>observations<sp/>and<sp/>the<sp/>standard<sp/>processing.</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/>*<sp/>SDP_REQ-263:<sp/>&quot;The<sp/>data<sp/>layer<sp/>manager<sp/>shall<sp/>contain<sp/>a<sp/>data<sp/>life<sp/>cycle</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/>management<sp/>subsystem<sp/>which<sp/>shall<sp/>incorporate<sp/>mechanisms<sp/>for<sp/>copying,<sp/>moving</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/>and<sp/>retiring<sp/>whole<sp/>physical<sp/>volumes<sp/>or<sp/>storage<sp/>units.&quot;</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/>*<sp/>SKA1-SYS_REQ-2350<sp/>&quot;Mirror<sp/>sites&quot;</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/>All<sp/>data<sp/>within<sp/>Science<sp/>Archives<sp/>shall<sp/>have<sp/>a<sp/>secondary<sp/>copy<sp/>located<sp/>offsite</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/>in<sp/>a<sp/>secure<sp/>location</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/>*<sp/>SDP_REQ-260<sp/>&quot;Archive<sp/>Backup&quot;</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>data<sp/>loss<sp/>from<sp/>the<sp/>Science<sp/>Archive<sp/>it<sp/>shall<sp/>be<sp/>possible<sp/>to<sp/>restore</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/>the<sp/>lost<sp/>data<sp/>items.<sp/>Individual<sp/>data<sp/>products<sp/>shall<sp/>be<sp/>retrievable<sp/>from<sp/>a</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/>backup<sp/>copy<sp/>within<sp/>24<sp/>hours.<sp/>The<sp/>backup<sp/>mechanism<sp/>shall<sp/>support<sp/>scheduled,<sp/>as</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/>well<sp/>as<sp/>incremental<sp/>and<sp/>full<sp/>backup<sp/>options.</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/>*<sp/>SDP_REQ-261<sp/>&quot;Restoring<sp/>Archive<sp/>Operations<sp/>of<sp/>a<sp/>failed<sp/>site&quot;</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/>There<sp/>shall<sp/>be<sp/>a<sp/>mechanism<sp/>to<sp/>operate<sp/>the<sp/>archive<sp/>from<sp/>a<sp/>backup<sp/>copy<sp/>to<sp/>meet</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/>a<sp/>recovery<sp/>time<sp/>limit<sp/>of<sp/>1<sp/>week,<sp/>independent<sp/>of<sp/>the<sp/>total<sp/>size<sp/>of<sp/>the<sp/>archive.</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/>*<sp/>SDP_REQ-262<sp/>&quot;Data<sp/>Layer<sp/>Product<sp/>Distribution&quot;</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/>The<sp/>SDP<sp/>shall<sp/>provide<sp/>an<sp/>internal<sp/>interface<sp/>to<sp/>allow<sp/>access<sp/>to<sp/>bulk<sp/>data<sp/>and</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/>data<sp/>contained<sp/>in<sp/>databases<sp/>(from<sp/>the<sp/>science<sp/>archive)<sp/>in<sp/>order<sp/>to<sp/>deliver</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/>data<sp/>products.</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/>*<sp/>SDP_REQ-256<sp/>&quot;Discard<sp/>Scheduling<sp/>Block&quot;</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/>The<sp/>system<sp/>shall<sp/>provide<sp/>a<sp/>mechanism<sp/>for<sp/>discarding<sp/>the<sp/>results<sp/>and</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/>associated<sp/>data<sp/>artefacts<sp/>from<sp/>a<sp/>given<sp/>active<sp/>scheduling<sp/>while<sp/>it<sp/>is<sp/>still</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/>processed<sp/>and<sp/>before<sp/>the<sp/>next<sp/>scheduling<sp/>block<sp/>starts.</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral">Regarding<sp/>point<sp/>#5,<sp/>although<sp/>it&apos;s<sp/>not<sp/>totally<sp/>clear<sp/>WHEN<sp/>expired<sp/>DROPs<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral">deleted,<sp/>PDR02-02-01<sp/>&quot;Data<sp/>Layer<sp/>Data<sp/>Challenges&quot;<sp/>states<sp/>in<sp/>section<sp/>7.2,</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral">&quot;DataObject<sp/>State<sp/>Model&quot;:</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/>&quot;[...]<sp/>the<sp/>actual<sp/>physical<sp/>deletion<sp/>could<sp/>be<sp/>driven<sp/>by<sp/>an<sp/>explicit<sp/>cleanup</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/>mechanism<sp/>[...]&quot;</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral">We<sp/>are<sp/>implementing<sp/>this<sp/>mechanism<sp/>in<sp/>the<sp/>DLM<sp/>as<sp/>well,<sp/>as<sp/>part<sp/>of<sp/>the<sp/>background</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral">periodical<sp/>checks<sp/>it<sp/>performs.<sp/>After<sp/>discussing<sp/>this<sp/>with<sp/>Chen,<sp/>it<sp/>also<sp/>became</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral">apparent<sp/>that<sp/>external<sp/>users<sp/>such<sp/>as<sp/>the<sp/>dataflow<sp/>manager<sp/>could<sp/>probably<sp/>also</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral">request<sp/>an<sp/>explicit<sp/>cleanup,<sp/>maybe<sp/>even<sp/>bypassing<sp/>the<sp/>expiration<sp/>date<sp/>of<sp/>DROPs.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral">A<sp/>simpler<sp/>definition<sp/>of<sp/>the<sp/>DLM<sp/>is<sp/>also<sp/>given<sp/>in<sp/>PDR03<sp/>&quot;Requirement<sp/>analysis&quot;,</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral">section<sp/>2.C.3.2,<sp/>&quot;Data<sp/>Life<sp/>Cycle<sp/>Manager&quot;:</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/>&quot;Software<sp/>component<sp/>that<sp/>implements<sp/>a<sp/>rule<sp/>driven<sp/>system<sp/>for<sp/>data<sp/>movement,</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/>persistence<sp/>and<sp/>release<sp/>based<sp/>on<sp/>hardware<sp/>parameters<sp/>and<sp/>policies&quot;</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral">Other<sp/>parts<sp/>of<sp/>the<sp/>documentation<sp/>also<sp/>mention<sp/>that<sp/>the<sp/>DLM<sp/>is<sp/>configured<sp/>by<sp/>a</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral">Data<sp/>Lifecycle<sp/>Configurator<sp/>Manager,<sp/>but<sp/>for<sp/>the<sp/>prototyping<sp/>we<sp/>can<sp/>use<sp/>a<sp/>self-</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral">configured<sp/>(and/or<sp/>hardcoded)<sp/>DLM</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral">@author:<sp/>rtobar</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>string</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threading</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>registry</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.hsm<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>manager</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>droputils</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..ddap_protocol<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DROPStates,<sp/>DROPPhases,<sp/>AppDROPStates</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..drop<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ContainerDROP</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask" kindref="compound">DataLifecycleManagerBackgroundTask</ref>(threading.Thread):</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>thread<sp/>that<sp/>periodically<sp/>runs<sp/>some<sp/>of<sp/>the<sp/>methods<sp/>on<sp/>the<sp/>given<sp/>DLM<sp/>until</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>signaled<sp/>to<sp/>stop</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>dlm,<sp/>period,<sp/>finishedEvent):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading.Thread.__init__(self,<sp/>name=</highlight><highlight class="stringliteral">&quot;DLMBackgroundTask&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask_1a69d651346ae867adda0a17991366820f" kindref="member">_dlm</ref><sp/>=<sp/>dlm</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask_1afedc765bb7575892190826e57d980332" kindref="member">_period</ref><sp/>=<sp/>period</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask_1a2113cdbc45c434219a9f24c671d70748" kindref="member">_finishedEvent</ref><sp/>=<sp/>finishedEvent</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run(self):</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev<sp/>=<sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask_1a2113cdbc45c434219a9f24c671d70748" kindref="member">_finishedEvent</ref></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlm<sp/>=<sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask_1a69d651346ae867adda0a17991366820f" kindref="member">_dlm</ref></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask_1afedc765bb7575892190826e57d980332" kindref="member">_period</ref></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ev.wait(p):</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.doTask(dlm)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPChecker" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPChecker" kindref="compound">DROPChecker</ref>(<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask" kindref="compound">DataLifecycleManagerBackgroundTask</ref>):</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>thread<sp/>that<sp/>performs<sp/>several<sp/>checks<sp/>on<sp/>existing<sp/>DROPs</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">doTask(self,<sp/>dlm):</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Expire<sp/>DROPs<sp/>that<sp/>are<sp/>already<sp/>too<sp/>old</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlm.expireCompletedDrops()</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>that<sp/>DROPs<sp/>still<sp/>exist,<sp/>and<sp/>mark<sp/>them<sp/>as<sp/>lost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>they<sp/>are<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlm.deleteLostDrops()</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPGarbageCollector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPGarbageCollector" kindref="compound">DROPGarbageCollector</ref>(<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask" kindref="compound">DataLifecycleManagerBackgroundTask</ref>):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>thread<sp/>that<sp/>performs<sp/>&quot;garbage<sp/>collection&quot;<sp/>of<sp/>DROPs;<sp/>that<sp/>is,<sp/>it<sp/>physically</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>deleted<sp/>DROPs<sp/>that<sp/>are<sp/>marked<sp/>as<sp/>EXPIRED</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">doTask(self,<sp/>dlm):</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>names<sp/>says<sp/>it<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlm.deleteExpiredDrops()</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPMover" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPMover" kindref="compound">DROPMover</ref>(<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManagerBackgroundTask" kindref="compound">DataLifecycleManagerBackgroundTask</ref>):</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>thread<sp/>that<sp/>automatically<sp/>moves<sp/>DROPs<sp/>between<sp/>layers<sp/>of<sp/>the<sp/>HSM.</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>based<sp/>on<sp/>rules<sp/>and<sp/>configuration<sp/>parameters<sp/>which<sp/>we</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>still<sp/>don&apos;t<sp/>consider<sp/>here.<sp/>The<sp/>driving<sp/>rule<sp/>we<sp/>currently<sp/>use<sp/>is<sp/>how</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>frequently<sp/>is<sp/>the<sp/>DROP<sp/>accessed.</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">doTask(self,<sp/>dlm):</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlm.moveDropsAround()</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="classdlg_1_1lifecycle_1_1dlm_1_1DropEventListener" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DropEventListener" kindref="compound">DropEventListener</ref>(object):</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>dlm):</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DropEventListener_1a87521f125dc0200116d687e9a5f49535" kindref="member">_dlm</ref><sp/>=<sp/>dlm</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">handleEvent(self,<sp/>event):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>event.type<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;open&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._dlm.handleOpenedDrop(event.oid,<sp/>event.uid)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>event.type<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;status&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>event.status<sp/>==<sp/>DROPStates.COMPLETED:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._dlm.handleCompletedDrop(event.uid)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager" kindref="compound">DataLifecycleManager</ref>(object):</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a0574f58bc227d6bf9e3d5e38ad46cfce" kindref="member">_hsm</ref><sp/>=<sp/>manager.HierarchicalStorageManager()</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a30ef48cc0f0b639050257f2cdfaead73" kindref="member">_reg</ref><sp/>=<sp/><ref refid="classdlg_1_1lifecycle_1_1registry_1_1InMemoryRegistry" kindref="compound">registry.InMemoryRegistry</ref>()</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a38b3a3a96a882fa59fcb47281dc0a6b2" kindref="member">_listener</ref><sp/>=<sp/><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DropEventListener" kindref="compound">DropEventListener</ref>(self)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>When<sp/>iteration<sp/>over<sp/>the<sp/>values<sp/>of<sp/>_drops<sp/>we<sp/>always<sp/>do<sp/>_drops.values()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>instead<sp/>of<sp/>_drops.itervalues()<sp/>to<sp/>get<sp/>a<sp/>full,<sp/>thread-safe<sp/>copy<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dictionary<sp/>values.<sp/>Maybe<sp/>there&apos;s<sp/>a<sp/>better<sp/>approach<sp/>for<sp/>thread-safety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a173e6e5402040b1ffe555fa03393ef87" kindref="member">_drops</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1aae78f275e390a3b416f2fb864d1419e9" kindref="member">_checkPeriod</ref><sp/>=<sp/>10</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;checkPeriod&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1aae78f275e390a3b416f2fb864d1419e9" kindref="member">_checkPeriod</ref><sp/>=<sp/>float(kwargs[</highlight><highlight class="stringliteral">&apos;checkPeriod&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1ad24fe5d0b01d78cbe7fa29c5ff1a684f" kindref="member">_cleanupPeriod</ref><sp/>=<sp/>10*self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1aae78f275e390a3b416f2fb864d1419e9" kindref="member">_checkPeriod</ref></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;cleanupPeriod&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1ad24fe5d0b01d78cbe7fa29c5ff1a684f" kindref="member">_cleanupPeriod</ref><sp/>=<sp/>float(kwargs[</highlight><highlight class="stringliteral">&apos;cleanupPeriod&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">startup(self):</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Spawn<sp/>the<sp/>background<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finishedEvent<sp/>=<sp/>threading.Event()</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dropChecker<sp/>=<sp/><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPChecker" kindref="compound">DROPChecker</ref>(self,<sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1aae78f275e390a3b416f2fb864d1419e9" kindref="member">_checkPeriod</ref>,<sp/>finishedEvent)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dropChecker.start()</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dropGarbageCollector<sp/>=<sp/><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DROPGarbageCollector" kindref="compound">DROPGarbageCollector</ref>(self,<sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1ad24fe5d0b01d78cbe7fa29c5ff1a684f" kindref="member">_cleanupPeriod</ref>,<sp/>finishedEvent)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dropGarbageCollector.start()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1ab6ea12c89343257cfc783d69794f993c" kindref="member">_dropChecker</ref><sp/>=<sp/>dropChecker</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a1672250903c70164d051d6056af941ad" kindref="member">_dropGarbageCollector</ref><sp/>=<sp/>dropGarbageCollector</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a1466cdfdf14bed65d6fbbf2d725f8c14" kindref="member">_finishedEvent</ref><sp/>=<sp/>finishedEvent</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">cleanup(self):</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Cleaning<sp/>up<sp/>the<sp/>DLM&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Join<sp/>the<sp/>background<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._finishedEvent.set()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._dropChecker.join()</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._dropGarbageCollector.join()</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Unsubscribe<sp/>to<sp/>all<sp/>events<sp/>coming<sp/>from<sp/>the<sp/>DROPs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>drop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._drops.values():</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop.unsubscribe(self)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Support<sp/>for<sp/>&apos;with&apos;<sp/>keyword</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__enter__(self):</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1ad8cda770aa1c47c65473f0590beff756" kindref="member">startup</ref>()</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__exit__(self,<sp/>typ,<sp/>value,<sp/>traceback):</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a95e5445a368285885e66e2a1b4715022" kindref="member">cleanup</ref>()</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_deleteDrop(self,<sp/>drop):</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Deleting<sp/>DROP<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>drop)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop.delete()</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop.status<sp/>=<sp/>DROPStates.DELETED</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">deleteExpiredDrops(self):</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>drop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self._drops.values()):</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>drop.status<sp/>==<sp/>DROPStates.EXPIRED:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a646c910e1bb72ab38bc55242245f11b7" kindref="member">_deleteDrop</ref>(drop)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">expireCompletedDrops(self):</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>drop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._drops.values():</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>drop.status<sp/>!=<sp/>DROPStates.COMPLETED:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Expire-after-use:<sp/>mark<sp/>as<sp/>expired<sp/>if<sp/>all<sp/>consumers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>are<sp/>finished<sp/>using<sp/>this<sp/>DROP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>drop.expireAfterUse:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allDone<sp/>=<sp/>all([c.execStatus<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[AppDROPStates.FINISHED,<sp/>AppDROPStates.ERROR]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>drop.consumers])</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>allDone:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Otherwise,<sp/>we<sp/>check<sp/>the<sp/>expiration<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(if<sp/>no<sp/>lifespan<sp/>was<sp/>specified<sp/>for<sp/>the<sp/>DROP,<sp/>its<sp/>expiration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>date<sp/>will<sp/>be<sp/>-1<sp/>and<sp/>it<sp/>will<sp/>be<sp/>skipped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>drop.expirationDate<sp/>==<sp/>-1<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>&lt;=<sp/>drop.expirationDate:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>drop.isBeingRead():</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;%r<sp/>has<sp/>expired<sp/>but<sp/>is<sp/>currently<sp/>being<sp/>read,<sp/>&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;will<sp/>skip<sp/>expiration<sp/>for<sp/>the<sp/>time<sp/>being&quot;</highlight><highlight class="normal">,<sp/>drop)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Finally!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Marking<sp/>%r<sp/>as<sp/>EXPIRED&apos;</highlight><highlight class="normal">,<sp/>drop)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop.status<sp/>=<sp/>DROPStates.EXPIRED</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_disappeared(self,<sp/>drop):</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>drop.status<sp/>!=<sp/>DROPStates.DELETED<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>drop.exists()</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">deleteLostDrops(self):</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toRemove<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>drop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._drops.values():</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>only<sp/>care<sp/>about<sp/>disappeared<sp/>drops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a1a8d731e0be216625866250fa97d431b" kindref="member">_disappeared</ref>(drop):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toRemove.append(drop.uid)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&apos;%r<sp/>has<sp/>disappeared&apos;</highlight><highlight class="normal">,<sp/>drop)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>it&apos;s<sp/>replicated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uids<sp/>=<sp/>self._reg.getDropUids(drop)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>definitelyLost<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>uids:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>definitelyLost<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Replicas<sp/>haven&apos;t<sp/>disappeared<sp/>as<sp/>well,<sp/>right?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replicas<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>uids:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>uid<sp/>==<sp/>drop.uid:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>siblingDrop<sp/>=<sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a173e6e5402040b1ffe555fa03393ef87" kindref="member">_drops</ref>[uid]</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a1a8d731e0be216625866250fa97d431b" kindref="member">_disappeared</ref>(siblingDrop):</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replicas.append(siblingDrop)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&apos;%r<sp/>(replicated<sp/>from<sp/>%r)<sp/>has<sp/>disappeared&apos;</highlight><highlight class="normal">,<sp/>siblingDrop,<sp/>drop)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toRemove.append(siblingDrop.uid)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(replicas)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;%r<sp/>has<sp/>still<sp/>more<sp/>than<sp/>one<sp/>replica,<sp/>no<sp/>action<sp/>needed&quot;</highlight><highlight class="normal">,<sp/>drop)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>len(replicas)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Only<sp/>one<sp/>replica<sp/>left<sp/>for<sp/>DROP<sp/>%r,<sp/>will<sp/>create<sp/>a<sp/>new<sp/>one&quot;</highlight><highlight class="normal">,<sp/>drop)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a7338ebbbef1cd5df456eaf678e5a3dc8" kindref="member">replicateDrop</ref>(replicas[0])</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>definitelyLost<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>definitelyLost:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(</highlight><highlight class="stringliteral">&quot;No<sp/>available<sp/>replica<sp/>found<sp/>for<sp/>DROP<sp/>%s/%s,<sp/>the<sp/>data<sp/>is<sp/>DEFINITELY<sp/>LOST&quot;</highlight><highlight class="normal">,<sp/>drop.oid,<sp/>drop.uid)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop.phase<sp/>=<sp/>DROPPhases.LOST</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._reg.setDropPhase(drop,<sp/>drop.phase)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>All<sp/>those<sp/>objects<sp/>identified<sp/>as<sp/>lost<sp/>have<sp/>to<sp/>go<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>toRemove:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a173e6e5402040b1ffe555fa03393ef87" kindref="member">_drops</ref>[uid]</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a8da06042b46eee0f68b609ae385a12d7" kindref="member">moveDropsAround</ref>(self):</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Moves<sp/>DROPs<sp/>to<sp/>different<sp/>layers<sp/>of<sp/>the<sp/>HSM<sp/>if<sp/>necessary,<sp/>currently<sp/>based</highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>on<sp/>the<sp/>access<sp/>times</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Big<sp/>questions<sp/>here<sp/>that<sp/>need<sp/>some<sp/>answers/experimentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>1<sp/>&quot;Migrating&quot;<sp/>implies<sp/>that<sp/>the<sp/>data<sp/>is<sp/>no<sp/>longer<sp/>in<sp/>its<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>location,<sp/>but<sp/>has<sp/>been<sp/>moved<sp/>rather<sp/>than<sp/>copied<sp/>to<sp/>a<sp/>new<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>2<sp/>That<sp/>means<sp/>that<sp/>the<sp/>DROP<sp/>doesn&apos;t<sp/>represent<sp/>actually<sp/>the<sp/>same<sp/>data,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>at<sp/>least<sp/>not<sp/>in<sp/>the<sp/>same<sp/>physical<sp/>location.<sp/>The<sp/>question<sp/>is<sp/>thus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>whether<sp/>a<sp/>new<sp/>DROP<sp/>would<sp/>be<sp/>required<sp/>for<sp/>this<sp/>migrated<sp/>DROP,<sp/>or<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>the<sp/>currently<sp/>existing<sp/>one<sp/>should<sp/>be<sp/>modified?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>3<sp/>If<sp/>a<sp/>new<sp/>one<sp/>is<sp/>required,<sp/>then<sp/>the<sp/>original,<sp/>and<sp/>users<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>original<sp/>have<sp/>to<sp/>be<sp/>notified<sp/>that<sp/>a<sp/>change<sp/>has<sp/>occurred.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>4<sp/>Or<sp/>not?<sp/>Who<sp/>is<sp/>actually<sp/>accessing<sp/>DROPs<sp/>and<sp/>how<sp/>drop<sp/>they<sp/>get<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>references?<sp/>Maybe<sp/>it&apos;s<sp/>the<sp/>DLM<sp/>who<sp/>delivers<sp/>the<sp/>references</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>(there<sp/>is<sp/>an<sp/>&quot;Open<sp/>DataObject&quot;<sp/>Activity<sp/>Diagram<sp/>drawn,<sp/>but<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>clarify<sp/>who<sp/>is<sp/>performing<sp/>the<sp/>actions<sp/>and<sp/>where<sp/>are<sp/>they<sp/>taking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>place),<sp/>and<sp/>references<sp/>can<sp/>be<sp/>considered<sp/>as<sp/>invalid,<sp/>in<sp/>which<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>a<sp/>new<sp/>reference<sp/>must<sp/>be<sp/>retrieved<sp/>via<sp/>the<sp/>DLM.<sp/>This<sp/>would<sp/>probably</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>make<sp/>sense<sp/>since<sp/>the<sp/>DLM<sp/>is<sp/>managing<sp/>the<sp/>lifecycle<sp/>of<sp/>the<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>DROP<sp/>instances,<sp/>and<sp/>knows<sp/>where<sp/>they<sp/>actually<sp/>are.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>5<sp/>If<sp/>somebody<sp/>is<sp/>currently<sp/>reading<sp/>from<sp/>a<sp/>DROP<sp/>that<sp/>is<sp/>meant<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>moved<sp/>we<sp/>have<sp/>to<sp/>not<sp/>move<sp/>it.<sp/>This<sp/>would<sp/>probably<sp/>not<sp/>happen<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>since<sp/>we&apos;re<sp/>using<sp/>the<sp/>access<sp/>times<sp/>to<sp/>decide<sp/>which<sp/>DROPs<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>moved<sp/>to<sp/>what<sp/>storage<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>6<sp/>The<sp/>other<sp/>alternative<sp/>(to<sp/>the<sp/>question<sp/>posed<sp/>in<sp/>2)<sp/>is<sp/>to<sp/>modify<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>current<sp/>DROP.<sp/>This<sp/>doesn&apos;t<sp/>sound<sp/>like<sp/>a<sp/>good<sp/>idea,<sp/>since<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>effectively<sp/>creating<sp/>a<sp/>new<sp/>instance<sp/>of<sp/>the<sp/>data<sp/>but<sp/>in<sp/>a<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>media<sp/>(plus<sp/>the<sp/>relative<sp/>complexity<sp/>of<sp/>actually<sp/>implementing<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>flexibility).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Answering<sp/>#4<sp/>is<sp/>probably<sp/>the<sp/>key<sp/>to<sp/>clarify<sp/>the<sp/>entire<sp/>situation.<sp/>For</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>time<sp/>being,<sp/>we<sp/>simply<sp/>&quot;pass&quot;...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>PS:<sp/>The<sp/>Open<sp/>DataObject<sp/>Activity<sp/>is<sp/>actually<sp/>used<sp/>as<sp/>part<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>&quot;Data<sp/>Object<sp/>Lifecycle<sp/>(nominal)&quot;<sp/>State<sp/>Diagram,<sp/>used<sp/>as<sp/>the<sp/>activity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>that<sp/>should<sp/>be<sp/>executed<sp/>when<sp/>entering<sp/>the<sp/>&quot;Read&quot;<sp/>state<sp/>of<sp/>DROPs.<sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>confusing<sp/>because<sp/>the<sp/>&quot;Open<sp/>DataObject&quot;<sp/>activity<sp/>includes<sp/>actions<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>&quot;Locate<sp/>DataObject&quot;<sp/>and<sp/>&quot;Resolve<sp/>Location&quot;,<sp/>although<sp/>it&apos;s<sp/>the<sp/>DROP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>that<sp/>is<sp/>opening<sp/>itself,<sp/>and<sp/>thus<sp/>opening<sp/>it<sp/>should<sp/>mean<sp/>simply<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>underlying<sp/>media.<sp/>Moreover,<sp/>in<sp/>the<sp/>same<sp/>activity<sp/>diagram<sp/>one<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>see<sp/>the<sp/>&quot;DataLifecycleDb&quot;,<sp/>which<sp/>would<sp/>correspond<sp/>to<sp/>the<sp/>DLM.<sp/>If<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>activity<sp/>is<sp/>really<sp/>run<sp/>from<sp/>DROPs<sp/>it<sp/>would<sp/>mean<sp/>that<sp/>DROPs<sp/>depend<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>DLM,<sp/>while<sp/>the<sp/>DLM<sp/>manages<sp/>DROPs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>drop<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._drops.values:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Don&apos;t<sp/>touch<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>drop.isBeingRead():</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>EXPIRED<sp/>DROPs<sp/>will<sp/>soon<sp/>be<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>DELETED<sp/>DROPs<sp/>drop<sp/>not<sp/>exist<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>drop.status<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(DROPStates.DELETED,<sp/>DROPStates.EXPIRED):</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1.<sp/>Data<sp/>that<sp/>is<sp/>not<sp/>being<sp/>used<sp/>anymore<sp/>should<sp/>be<sp/>moved<sp/>down<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>hierarchy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastAccess<sp/>=<sp/>self._reg.getLastAccess(drop.oid)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeUnread<sp/>=<sp/>time.time()<sp/>-<sp/>lastAccess</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lastAccess<sp/>!=<sp/>-1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>timeUnread<sp/>&gt;<sp/>10:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.moveDropDown(drop)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addDrop(self,<sp/>drop):</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Keep<sp/>track<sp/>of<sp/>the<sp/>DROP<sp/>and<sp/>subscribe<sp/>to<sp/>the<sp/>events<sp/>it<sp/>generates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a173e6e5402040b1ffe555fa03393ef87" kindref="member">_drops</ref>[drop.uid]<sp/>=<sp/>drop</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop.phase<sp/>=<sp/>DROPPhases.GAS</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop.subscribe(self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a38b3a3a96a882fa59fcb47281dc0a6b2" kindref="member">_listener</ref>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._reg.addDrop(drop)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>We<sp/>currently<sp/>use<sp/>a<sp/>background<sp/>thread<sp/>that<sp/>scans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>DROPs<sp/>for<sp/>their<sp/>status<sp/>and<sp/>compares<sp/>its<sp/>expiration<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>current<sp/>time<sp/>in<sp/>order<sp/>to<sp/>determine<sp/>which<sp/>DROPs<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>moved<sp/>to<sp/>EXPIRED.<sp/>We<sp/>might<sp/>want<sp/>to<sp/>explore<sp/>other<sp/>alternatives<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>perform<sp/>this<sp/>task,<sp/>like<sp/>using<sp/>threading.Timers<sp/>(probably<sp/>not)<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>any<sp/>other<sp/>that<sp/>doesn&apos;t<sp/>mean<sp/>looping<sp/>over<sp/>all<sp/>DROPs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">handleOpenedDrop(self,<sp/>oid,<sp/>uid):</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop<sp/>=<sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a173e6e5402040b1ffe555fa03393ef87" kindref="member">_drops</ref>[uid]</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>drop.status<sp/>==<sp/>DROPStates.COMPLETED:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._reg.recordNewAccess(oid)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1ad07cc071d786ced960f0861254f2115b" kindref="member">handleCompletedDrop</ref>(self,<sp/>uid):</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="435"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>string<sp/>uid:</highlight></codeline>
<codeline lineno="436"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>the<sp/>kind<sp/>of<sp/>storage<sp/>used<sp/>by<sp/>this<sp/>DROP.<sp/>If<sp/>it&apos;s<sp/>already<sp/>persisted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>in<sp/>a<sp/>persistent<sp/>storage<sp/>media<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>save<sp/>it<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop<sp/>=<sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a173e6e5402040b1ffe555fa03393ef87" kindref="member">_drops</ref>[uid]</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>drop.precious<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a4905e311bb6e90855a4b55753baa059e" kindref="member">isReplicable</ref>(drop):</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Replicating<sp/>%r<sp/>because<sp/>it&apos;s<sp/>precious&quot;</highlight><highlight class="normal">,<sp/>drop)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a7338ebbbef1cd5df456eaf678e5a3dc8" kindref="member">replicateDrop</ref>(drop)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.exception(</highlight><highlight class="stringliteral">&quot;Problem<sp/>while<sp/>replicating<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>drop)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">isReplicable(self,<sp/>drop):</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(drop,<sp/>ContainerDROP)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a7338ebbbef1cd5df456eaf678e5a3dc8" kindref="member">replicateDrop</ref>(self,<sp/>drop):</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>dlg.drop.AbstractDROP<sp/>drop:</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>that<sp/>the<sp/>DROP<sp/>is<sp/>complete<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>drop.status<sp/>!=<sp/>DROPStates.COMPLETED:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;%r<sp/>not<sp/>in<sp/>COMPLETED<sp/>state&quot;</highlight><highlight class="normal"><sp/>%<sp/>(drop,))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>the<sp/>size<sp/>of<sp/>the<sp/>DROP.<sp/>This<sp/>cannot<sp/>currently<sp/>be<sp/>done<sp/>in<sp/>some<sp/>of<sp/>them,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>like<sp/>in<sp/>the<sp/>AbstractDROP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>drop.size</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>size<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>which<sp/>layer<sp/>of<sp/>the<sp/>hsm<sp/>should<sp/>host<sp/>the<sp/>replicated<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store<sp/>=<sp/>self._hsm.getSlowestStore()</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availableSpace<sp/>=<sp/>store.getAvailableSpace()</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>size<sp/>&gt;<sp/>availableSpace:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>replicate<sp/>DROP<sp/>to<sp/>store<sp/>%s:<sp/>not<sp/>enough<sp/>space<sp/>left&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>new<sp/>DROP<sp/>and<sp/>write<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>original<sp/>into<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>In<sp/>a<sp/>real<sp/>world<sp/>application<sp/>this<sp/>will<sp/>probably<sp/>happen<sp/>in<sp/>a<sp/>separate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>worker<sp/>thread<sp/>with<sp/>a<sp/>working<sp/>queue,<sp/>or<sp/>in<sp/>separate<sp/>threads,<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>each<sp/>replication<sp/>task<sp/>(or<sp/>a<sp/>mix<sp/>of<sp/>the<sp/>two)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newDrop,<sp/>newUid<sp/>=<sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a1c5496bc819169f6de37a9443db42a0a" kindref="member">_replicate</ref>(drop,<sp/>store)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>DROPs<sp/>(both)<sp/>should<sp/>now<sp/>be<sp/>tagged<sp/>as<sp/>SOLID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newDrop.phase<sp/>=<sp/>DROPPhases.SOLID</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop.phase<sp/>=<sp/>DROPPhases.SOLID</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Update<sp/>our<sp/>own<sp/>registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1lifecycle_1_1dlm_1_1DataLifecycleManager_1a173e6e5402040b1ffe555fa03393ef87" kindref="member">_drops</ref>[newUid]<sp/>=<sp/>newDrop</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._reg.addDropInstance(newDrop)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._reg.setDropPhase(drop,<sp/>DROPPhases.SOLID)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getDropUids(self,<sp/>drop):</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._reg.getDropUids(drop)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_replicate(self,<sp/>drop,<sp/>store):</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Dummy,<sp/>but<sp/>safe,<sp/>new<sp/>UID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newUid<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;uid:&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">.join([random.SystemRandom().choice(string.ascii_letters<sp/>+<sp/>string.digits)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(10)])</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Creating<sp/>new<sp/>DROP<sp/>with<sp/>uid<sp/>%s<sp/>from<sp/>%r&apos;</highlight><highlight class="normal">,<sp/>newUid,<sp/>drop)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>the<sp/>time<sp/>being<sp/>we<sp/>manually<sp/>copy<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>current<sp/>DROP<sp/>into<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newDrop<sp/>=<sp/>store.createDrop(drop.oid,<sp/>newUid,<sp/>expectedSize=drop.size,<sp/>precious=drop.precious)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>droputils.copyDropContents(drop,<sp/>newDrop)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;%r<sp/>successfully<sp/>replicated<sp/>to<sp/>%r&apos;</highlight><highlight class="normal">,<sp/>drop,<sp/>newDrop)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newDrop,<sp/>newUid</highlight></codeline>
    </programlisting>
    <location file="daliuge-runtime/dlg/lifecycle/dlm.py"/>
  </compounddef>
</doxygen>
