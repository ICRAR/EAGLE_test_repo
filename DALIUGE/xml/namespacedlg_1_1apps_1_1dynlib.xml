<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacedlg_1_1apps_1_1dynlib" kind="namespace" language="Python">
    <compoundname>dlg::apps::dynlib</compoundname>
    <innerclass refid="classdlg_1_1apps_1_1dynlib_1_1CDlgApp" prot="public">dlg::apps::dynlib::CDlgApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1dynlib_1_1CDlgInput" prot="public">dlg::apps::dynlib::CDlgInput</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1dynlib_1_1CDlgOutput" prot="public">dlg::apps::dynlib::CDlgOutput</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1dynlib_1_1CDlgStreamingInput" prot="public">dlg::apps::dynlib::CDlgStreamingInput</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1dynlib_1_1DynlibApp" prot="public">dlg::apps::dynlib::DynlibApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1dynlib_1_1DynlibAppBase" prot="public">dlg::apps::dynlib::DynlibAppBase</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1dynlib_1_1DynlibProcApp" prot="public">dlg::apps::dynlib::DynlibProcApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1dynlib_1_1DynlibStreamApp" prot="public">dlg::apps::dynlib::DynlibStreamApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1dynlib_1_1FinishSubprocess" prot="public">dlg::apps::dynlib::FinishSubprocess</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1dynlib_1_1InvalidLibrary" prot="public">dlg::apps::dynlib::InvalidLibrary</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dynlib_8py_1a77f2b21c088084691d7b43c49f7124bf" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::apps::dynlib.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= logging.getLogger(__name__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="38" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dynlib_8py_1a4a63edcc0e72016817c47f4dde33f984" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dlg::apps::dynlib._read_cb_type</definition>
        <argsstring></argsstring>
        <name>_read_cb_type</name>
        <initializer>= ctypes.CFUNCTYPE(
    ctypes.c_size_t, ctypes.POINTER(ctypes.c_char), ctypes.c_size_t
)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="40" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dynlib_8py_1a727a90f41442bcf9b0478fc65d1d177a" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dlg::apps::dynlib._write_cb_type</definition>
        <argsstring></argsstring>
        <name>_write_cb_type</name>
        <initializer>= ctypes.CFUNCTYPE(
    ctypes.c_size_t, ctypes.POINTER(ctypes.c_char), ctypes.c_size_t
)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="44" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dynlib_8py_1adb81555e31f7f3ea5a6651271b93f258" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dlg::apps::dynlib._app_running_cb_type</definition>
        <argsstring></argsstring>
        <name>_app_running_cb_type</name>
        <initializer>= ctypes.CFUNCTYPE(None)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="48" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dynlib_8py_1ad8e17fc6759d968528b8627519caf63e" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dlg::apps::dynlib._app_done_cb_type</definition>
        <argsstring></argsstring>
        <name>_app_done_cb_type</name>
        <initializer>= ctypes.CFUNCTYPE(None, ctypes.c_int)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="50" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dynlib_8py_1a51b1bee9693bd90e37f04a50f4be4e23" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.dynlib._to_c_input</definition>
        <argsstring>(i)</argsstring>
        <name>_to_c_input</name>
        <param>
          <type>i</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Convert an input drop into its corresponding C structure
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="99" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="99" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="dynlib_8py_1a2724cf9259ae406dbdc1041e1d0bdf0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.dynlib._to_c_output</definition>
        <argsstring>(o)</argsstring>
        <name>_to_c_output</name>
        <param>
          <type>o</type>
          <defname>o</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Convert an output drop into its corresponding C structure
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="117" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="117" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="dynlib_8py_1a7a8b33cb69c76f1415a26b4893049c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.dynlib.prepare_c_inputs</definition>
        <argsstring>(c_app, inputs)</argsstring>
        <name>prepare_c_inputs</name>
        <param>
          <type>c_app</type>
          <defname>c_app</defname>
        </param>
        <param>
          <type>inputs</type>
          <defname>inputs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Converts all inputs to its C equivalents and sets them into `c_app`
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="129" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="129" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="dynlib_8py_1a3d73b28eff0b982c23adcecd9202d483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.dynlib.prepare_c_outputs</definition>
        <argsstring>(c_app, outputs)</argsstring>
        <name>prepare_c_outputs</name>
        <param>
          <type>c_app</type>
          <defname>c_app</defname>
        </param>
        <param>
          <type>outputs</type>
          <defname>outputs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Converts all outputs to its C equivalents and sets them into `c_app`
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="145" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="dynlib_8py_1a32feef31a731f6f57666a02d57e9b93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.dynlib.prepare_c_ranks</definition>
        <argsstring>(c_app, ranks)</argsstring>
        <name>prepare_c_ranks</name>
        <param>
          <type>c_app</type>
          <defname>c_app</defname>
        </param>
        <param>
          <type>ranks</type>
          <defname>ranks</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Convert the ranks list into its C equivalent and sets them to `c_app`
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="155" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="155" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="dynlib_8py_1a0ecad638f4540e680e800bb11246b5a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.dynlib.run</definition>
        <argsstring>(lib, c_app, input_closers)</argsstring>
        <name>run</name>
        <param>
          <type>lib</type>
          <defname>lib</defname>
        </param>
        <param>
          <type>c_app</type>
          <defname>c_app</defname>
        </param>
        <param>
          <type>input_closers</type>
          <defname>input_closers</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Invokes the `run` method on `lib` with the given `c_app`. After completion,
all opened file descriptors are closed.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="167" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="167" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="dynlib_8py_1acdc0f4c8a4c708c17ffe71c96e3fff4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.dynlib.load_and_init</definition>
        <argsstring>(libname, oid, uid, params)</argsstring>
        <name>load_and_init</name>
        <param>
          <type>libname</type>
          <defname>libname</defname>
        </param>
        <param>
          <type>oid</type>
          <defname>oid</defname>
        </param>
        <param>
          <type>uid</type>
          <defname>uid</defname>
        </param>
        <param>
          <type>params</type>
          <defname>params</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Loads and initializes `libname` with the given parameters, prepares the
corresponding C application structure, and returns both objects
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="194" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="194" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="dynlib_8py_1a8f1817de836c45bf48d0bb8f5393c1b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.dynlib._run_in_proc</definition>
        <argsstring>(args)</argsstring>
        <name>_run_in_proc</name>
        <param>
          <type>args</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="354" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="354" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="dynlib_8py_1a5f5f1e84967337014dd5d0b7577b9aa3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.dynlib._do_run_in_proc</definition>
        <argsstring>(queue, libname, oid, uid, params, inputs, outputs)</argsstring>
        <name>_do_run_in_proc</name>
        <param>
          <type>queue</type>
          <defname>queue</defname>
        </param>
        <param>
          <type>libname</type>
          <defname>libname</defname>
        </param>
        <param>
          <type>oid</type>
          <defname>oid</defname>
        </param>
        <param>
          <type>uid</type>
          <defname>uid</defname>
        </param>
        <param>
          <type>params</type>
          <defname>params</defname>
        </param>
        <param>
          <type>inputs</type>
          <defname>inputs</defname>
        </param>
        <param>
          <type>outputs</type>
          <defname>outputs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="361" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="361" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="dynlib_8py_1a0bdca1164405d7cca1b0342a0c60fd15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.dynlib.get_from_subprocess</definition>
        <argsstring>(proc, q)</argsstring>
        <name>get_from_subprocess</name>
        <param>
          <type>proc</type>
          <defname>proc</defname>
        </param>
        <param>
          <type>q</type>
          <defname>q</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Gets elements from the queue, checking that the process is still alive</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/apps/dynlib.py" line="397" column="1" bodyfile="daliuge-runtime/dlg/apps/dynlib.py" bodystart="397" bodyend="406"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="daliuge-runtime/dlg/apps/dynlib.py" line="1" column="1"/>
  </compounddef>
</doxygen>
