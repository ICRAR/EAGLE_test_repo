<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi" kind="class" language="Python" prot="public">
    <compoundname>translator_client::api::default_api::DefaultApi</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a6beb284bf281357bec398153bb2868fc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>translator_client.api.default_api.DefaultApi::api_client</definition>
        <argsstring></argsstring>
        <name>api_client</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" line="37" column="1" bodyfile="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1aa67a1eae0ce01640d840051608a90eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def translator_client.api.default_api.DefaultApi.__init__</definition>
        <argsstring>(self, api_client=None)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>api_client</type>
          <defname>api_client</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" line="34" column="1" bodyfile="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a6de94993181ef654458887ed078732d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def translator_client.api.default_api.DefaultApi.gen_pg</definition>
        <argsstring>(self, kwargs)</argsstring>
        <name>gen_pg</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>kwargs</type>
          <defname>kwargs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Your GET endpoint  # noqa: E501

Generates a Physical Graph and submits it for execution to a DALiuGE runtime  # noqa: E501
This method makes a synchronous HTTP request by default. To make an
asynchronous HTTP request, please pass async_req=True

&gt;&gt;&gt; thread = api.gen_pg(async_req=True)
&gt;&gt;&gt; result = thread.get()

:param pgt_id:
:type pgt_id: str
:param dlg_mgr_host:
:type dlg_mgr_host: str
:param dlg_mgr_port:
:type dlg_mgr_port: int
:param async_req: Whether to execute the request asynchronously.
:type async_req: bool, optional
:param _preload_content: if False, the urllib3.HTTPResponse object will
                 be returned without reading/decoding response
                 data. Default is True.
:type _preload_content: bool, optional
:param _request_timeout: timeout setting for this request. If one
                 number provided, it will be total request
                 timeout. It can also be a pair (tuple) of
                 (connection, read) timeouts.
:return: Returns the result object.
 If the method is called asynchronously,
 returns the request thread.
:rtype: None
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" line="39" column="1" bodyfile="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" bodystart="39" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a58915a7ff04b9e095692bbf73b9039b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def translator_client.api.default_api.DefaultApi.gen_pg_with_http_info</definition>
        <argsstring>(self, kwargs)</argsstring>
        <name>gen_pg_with_http_info</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>kwargs</type>
          <defname>kwargs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Your GET endpoint  # noqa: E501

Generates a Physical Graph and submits it for execution to a DALiuGE runtime  # noqa: E501
This method makes a synchronous HTTP request by default. To make an
asynchronous HTTP request, please pass async_req=True

&gt;&gt;&gt; thread = api.gen_pg_with_http_info(async_req=True)
&gt;&gt;&gt; result = thread.get()

:param pgt_id:
:type pgt_id: str
:param dlg_mgr_host:
:type dlg_mgr_host: str
:param dlg_mgr_port:
:type dlg_mgr_port: int
:param async_req: Whether to execute the request asynchronously.
:type async_req: bool, optional
:param _return_http_data_only: response data without head status code
                       and headers
:type _return_http_data_only: bool, optional
:param _preload_content: if False, the urllib3.HTTPResponse object will
                 be returned without reading/decoding response
                 data. Default is True.
:type _preload_content: bool, optional
:param _request_timeout: timeout setting for this request. If one
                 number provided, it will be total request
                 timeout. It can also be a pair (tuple) of
                 (connection, read) timeouts.
:param _request_auth: set to override the auth_settings for an a single
              request; this effectively ignores the authentication
              in the spec for a single request.
:type _request_auth: dict, optional
:return: Returns the result object.
 If the method is called asynchronously,
 returns the request thread.
:rtype: None
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" line="73" column="1" bodyfile="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" bodystart="73" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a67987cc7a244c89ec1220999aed8d33a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def translator_client.api.default_api.DefaultApi.gen_pgt</definition>
        <argsstring>(self, lg_name, json_data, algo, kwargs)</argsstring>
        <name>gen_pgt</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lg_name</type>
          <defname>lg_name</defname>
        </param>
        <param>
          <type>json_data</type>
          <defname>json_data</defname>
        </param>
        <param>
          <type>algo</type>
          <defname>algo</defname>
        </param>
        <param>
          <type>kwargs</type>
          <defname>kwargs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>gen_pgt  # noqa: E501

Translates a Logical Graph into Physical Graph Template and returns an HTML view of the latter  # noqa: E501
This method makes a synchronous HTTP request by default. To make an
asynchronous HTTP request, please pass async_req=True

&gt;&gt;&gt; thread = api.gen_pgt(lg_name, json_data, algo, async_req=True)
&gt;&gt;&gt; result = thread.get()

:param lg_name: (required)
:type lg_name: str
:param json_data: (required)
:type json_data: str
:param algo: (required)
:type algo: str
:param num_par:
:type num_par: int
:param num_islands:
:type num_islands: int
:param par_label:
:type par_label: str
:param min_goal:
:type min_goal: int
:param ptype:
:type ptype: int
:param max_load_imb:
:type max_load_imb: int
:param max_cpu:
:type max_cpu: int
:param time_greedy:
:type time_greedy: float
:param deadline:
:type deadline: int
:param swarm_size:
:type swarm_size: int
:param max_mem:
:type max_mem: int
:param async_req: Whether to execute the request asynchronously.
:type async_req: bool, optional
:param _preload_content: if False, the urllib3.HTTPResponse object will
                 be returned without reading/decoding response
                 data. Default is True.
:type _preload_content: bool, optional
:param _request_timeout: timeout setting for this request. If one
                 number provided, it will be total request
                 timeout. It can also be a pair (tuple) of
                 (connection, read) timeouts.
:return: Returns the result object.
 If the method is called asynchronously,
 returns the request thread.
:rtype: object
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" line="176" column="1" bodyfile="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" bodystart="176" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a1309865d2984e3c134103fb9ac0dff13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def translator_client.api.default_api.DefaultApi.gen_pgt_with_http_info</definition>
        <argsstring>(self, lg_name, json_data, algo, kwargs)</argsstring>
        <name>gen_pgt_with_http_info</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lg_name</type>
          <defname>lg_name</defname>
        </param>
        <param>
          <type>json_data</type>
          <defname>json_data</defname>
        </param>
        <param>
          <type>algo</type>
          <defname>algo</defname>
        </param>
        <param>
          <type>kwargs</type>
          <defname>kwargs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>gen_pgt  # noqa: E501

Translates a Logical Graph into Physical Graph Template and returns an HTML view of the latter  # noqa: E501
This method makes a synchronous HTTP request by default. To make an
asynchronous HTTP request, please pass async_req=True

&gt;&gt;&gt; thread = api.gen_pgt_with_http_info(lg_name, json_data, algo, async_req=True)
&gt;&gt;&gt; result = thread.get()

:param lg_name: (required)
:type lg_name: str
:param json_data: (required)
:type json_data: str
:param algo: (required)
:type algo: str
:param num_par:
:type num_par: int
:param num_islands:
:type num_islands: int
:param par_label:
:type par_label: str
:param min_goal:
:type min_goal: int
:param ptype:
:type ptype: int
:param max_load_imb:
:type max_load_imb: int
:param max_cpu:
:type max_cpu: int
:param time_greedy:
:type time_greedy: float
:param deadline:
:type deadline: int
:param swarm_size:
:type swarm_size: int
:param max_mem:
:type max_mem: int
:param async_req: Whether to execute the request asynchronously.
:type async_req: bool, optional
:param _return_http_data_only: response data without head status code
                       and headers
:type _return_http_data_only: bool, optional
:param _preload_content: if False, the urllib3.HTTPResponse object will
                 be returned without reading/decoding response
                 data. Default is True.
:type _preload_content: bool, optional
:param _request_timeout: timeout setting for this request. If one
                 number provided, it will be total request
                 timeout. It can also be a pair (tuple) of
                 (connection, read) timeouts.
:param _request_auth: set to override the auth_settings for an a single
              request; this effectively ignores the authentication
              in the spec for a single request.
:type _request_auth: dict, optional
:return: Returns the result object.
 If the method is called asynchronously,
 returns the request thread.
:rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" line="232" column="1" bodyfile="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" bodystart="232" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1aa67a1eae0ce01640d840051608a90eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def translator_client.api.default_api.DefaultApi.__init__</definition>
        <argsstring>(self, api_client=None)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>api_client</type>
          <defname>api_client</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/translator_client/translator_client/api/default_api.py" line="34" column="1" bodyfile="OpenAPI/tests/translator_client/translator_client/api/default_api.py" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a6de94993181ef654458887ed078732d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def translator_client.api.default_api.DefaultApi.gen_pg</definition>
        <argsstring>(self, kwargs)</argsstring>
        <name>gen_pg</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>kwargs</type>
          <defname>kwargs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Your GET endpoint  # noqa: E501

Generates a Physical Graph and submits it for execution to a DALiuGE runtime  # noqa: E501
This method makes a synchronous HTTP request by default. To make an
asynchronous HTTP request, please pass async_req=True

&gt;&gt;&gt; thread = api.gen_pg(async_req=True)
&gt;&gt;&gt; result = thread.get()

:param pgt_id:
:type pgt_id: str
:param dlg_mgr_host:
:type dlg_mgr_host: str
:param dlg_mgr_port:
:type dlg_mgr_port: int
:param async_req: Whether to execute the request asynchronously.
:type async_req: bool, optional
:param _preload_content: if False, the urllib3.HTTPResponse object will
                 be returned without reading/decoding response
                 data. Default is True.
:type _preload_content: bool, optional
:param _request_timeout: timeout setting for this request. If one
                 number provided, it will be total request
                 timeout. It can also be a pair (tuple) of
                 (connection, read) timeouts.
:return: Returns the result object.
 If the method is called asynchronously,
 returns the request thread.
:rtype: None
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/translator_client/translator_client/api/default_api.py" line="39" column="1" bodyfile="OpenAPI/tests/translator_client/translator_client/api/default_api.py" bodystart="39" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a58915a7ff04b9e095692bbf73b9039b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def translator_client.api.default_api.DefaultApi.gen_pg_with_http_info</definition>
        <argsstring>(self, kwargs)</argsstring>
        <name>gen_pg_with_http_info</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>kwargs</type>
          <defname>kwargs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Your GET endpoint  # noqa: E501

Generates a Physical Graph and submits it for execution to a DALiuGE runtime  # noqa: E501
This method makes a synchronous HTTP request by default. To make an
asynchronous HTTP request, please pass async_req=True

&gt;&gt;&gt; thread = api.gen_pg_with_http_info(async_req=True)
&gt;&gt;&gt; result = thread.get()

:param pgt_id:
:type pgt_id: str
:param dlg_mgr_host:
:type dlg_mgr_host: str
:param dlg_mgr_port:
:type dlg_mgr_port: int
:param async_req: Whether to execute the request asynchronously.
:type async_req: bool, optional
:param _return_http_data_only: response data without head status code
                       and headers
:type _return_http_data_only: bool, optional
:param _preload_content: if False, the urllib3.HTTPResponse object will
                 be returned without reading/decoding response
                 data. Default is True.
:type _preload_content: bool, optional
:param _request_timeout: timeout setting for this request. If one
                 number provided, it will be total request
                 timeout. It can also be a pair (tuple) of
                 (connection, read) timeouts.
:param _request_auth: set to override the auth_settings for an a single
              request; this effectively ignores the authentication
              in the spec for a single request.
:type _request_auth: dict, optional
:return: Returns the result object.
 If the method is called asynchronously,
 returns the request thread.
:rtype: None
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/translator_client/translator_client/api/default_api.py" line="73" column="1" bodyfile="OpenAPI/tests/translator_client/translator_client/api/default_api.py" bodystart="73" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a67987cc7a244c89ec1220999aed8d33a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def translator_client.api.default_api.DefaultApi.gen_pgt</definition>
        <argsstring>(self, lg_name, json_data, algo, kwargs)</argsstring>
        <name>gen_pgt</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lg_name</type>
          <defname>lg_name</defname>
        </param>
        <param>
          <type>json_data</type>
          <defname>json_data</defname>
        </param>
        <param>
          <type>algo</type>
          <defname>algo</defname>
        </param>
        <param>
          <type>kwargs</type>
          <defname>kwargs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>gen_pgt  # noqa: E501

Translates a Logical Graph into Physical Graph Template and returns an HTML view of the latter  # noqa: E501
This method makes a synchronous HTTP request by default. To make an
asynchronous HTTP request, please pass async_req=True

&gt;&gt;&gt; thread = api.gen_pgt(lg_name, json_data, algo, async_req=True)
&gt;&gt;&gt; result = thread.get()

:param lg_name: (required)
:type lg_name: str
:param json_data: (required)
:type json_data: str
:param algo: (required)
:type algo: str
:param num_par:
:type num_par: int
:param num_islands:
:type num_islands: int
:param par_label:
:type par_label: str
:param min_goal:
:type min_goal: int
:param ptype:
:type ptype: int
:param max_load_imb:
:type max_load_imb: int
:param max_cpu:
:type max_cpu: int
:param time_greedy:
:type time_greedy: float
:param deadline:
:type deadline: int
:param swarm_size:
:type swarm_size: int
:param max_mem:
:type max_mem: int
:param async_req: Whether to execute the request asynchronously.
:type async_req: bool, optional
:param _preload_content: if False, the urllib3.HTTPResponse object will
                 be returned without reading/decoding response
                 data. Default is True.
:type _preload_content: bool, optional
:param _request_timeout: timeout setting for this request. If one
                 number provided, it will be total request
                 timeout. It can also be a pair (tuple) of
                 (connection, read) timeouts.
:return: Returns the result object.
 If the method is called asynchronously,
 returns the request thread.
:rtype: object
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/translator_client/translator_client/api/default_api.py" line="176" column="1" bodyfile="OpenAPI/tests/translator_client/translator_client/api/default_api.py" bodystart="176" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a1309865d2984e3c134103fb9ac0dff13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def translator_client.api.default_api.DefaultApi.gen_pgt_with_http_info</definition>
        <argsstring>(self, lg_name, json_data, algo, kwargs)</argsstring>
        <name>gen_pgt_with_http_info</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lg_name</type>
          <defname>lg_name</defname>
        </param>
        <param>
          <type>json_data</type>
          <defname>json_data</defname>
        </param>
        <param>
          <type>algo</type>
          <defname>algo</defname>
        </param>
        <param>
          <type>kwargs</type>
          <defname>kwargs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>gen_pgt  # noqa: E501

Translates a Logical Graph into Physical Graph Template and returns an HTML view of the latter  # noqa: E501
This method makes a synchronous HTTP request by default. To make an
asynchronous HTTP request, please pass async_req=True

&gt;&gt;&gt; thread = api.gen_pgt_with_http_info(lg_name, json_data, algo, async_req=True)
&gt;&gt;&gt; result = thread.get()

:param lg_name: (required)
:type lg_name: str
:param json_data: (required)
:type json_data: str
:param algo: (required)
:type algo: str
:param num_par:
:type num_par: int
:param num_islands:
:type num_islands: int
:param par_label:
:type par_label: str
:param min_goal:
:type min_goal: int
:param ptype:
:type ptype: int
:param max_load_imb:
:type max_load_imb: int
:param max_cpu:
:type max_cpu: int
:param time_greedy:
:type time_greedy: float
:param deadline:
:type deadline: int
:param swarm_size:
:type swarm_size: int
:param max_mem:
:type max_mem: int
:param async_req: Whether to execute the request asynchronously.
:type async_req: bool, optional
:param _return_http_data_only: response data without head status code
                       and headers
:type _return_http_data_only: bool, optional
:param _preload_content: if False, the urllib3.HTTPResponse object will
                 be returned without reading/decoding response
                 data. Default is True.
:type _preload_content: bool, optional
:param _request_timeout: timeout setting for this request. If one
                 number provided, it will be total request
                 timeout. It can also be a pair (tuple) of
                 (connection, read) timeouts.
:param _request_auth: set to override the auth_settings for an a single
              request; this effectively ignores the authentication
              in the spec for a single request.
:type _request_auth: dict, optional
:return: Returns the result object.
 If the method is called asynchronously,
 returns the request thread.
:rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="OpenAPI/tests/translator_client/translator_client/api/default_api.py" line="232" column="1" bodyfile="OpenAPI/tests/translator_client/translator_client/api/default_api.py" bodystart="232" bodyend="409"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>NOTE: This class is auto generated by OpenAPI Generator
Ref: https://openapi-generator.tech

Do not edit the class manually.
</verbatim> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2348">
        <label>object</label>
      </node>
      <node id="2347">
        <label>translator_client.api.default_api.DefaultApi</label>
        <link refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi"/>
        <childnode refid="2348" relation="public-inheritance">
        </childnode>
        <childnode refid="2348" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2350">
        <label>object</label>
      </node>
      <node id="2349">
        <label>translator_client.api.default_api.DefaultApi</label>
        <link refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi"/>
        <childnode refid="2350" relation="public-inheritance">
        </childnode>
        <childnode refid="2350" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" line="27" column="1" bodyfile="OpenAPI/tests/editable_copies/translator_client/translator_client/api/default_api.py" bodystart="27" bodyend="409"/>
    <listofallmembers>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1aa67a1eae0ce01640d840051608a90eb0" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>__init__</name></member>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1aa67a1eae0ce01640d840051608a90eb0" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>__init__</name></member>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a6beb284bf281357bec398153bb2868fc" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>api_client</name></member>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a6de94993181ef654458887ed078732d2" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>gen_pg</name></member>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a6de94993181ef654458887ed078732d2" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>gen_pg</name></member>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a58915a7ff04b9e095692bbf73b9039b5" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>gen_pg_with_http_info</name></member>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a58915a7ff04b9e095692bbf73b9039b5" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>gen_pg_with_http_info</name></member>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a67987cc7a244c89ec1220999aed8d33a" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>gen_pgt</name></member>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a67987cc7a244c89ec1220999aed8d33a" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>gen_pgt</name></member>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a1309865d2984e3c134103fb9ac0dff13" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>gen_pgt_with_http_info</name></member>
      <member refid="classtranslator__client_1_1api_1_1default__api_1_1DefaultApi_1a1309865d2984e3c134103fb9ac0dff13" prot="public" virt="non-virtual"><scope>translator_client::api::default_api::DefaultApi</scope><name>gen_pgt_with_http_info</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
