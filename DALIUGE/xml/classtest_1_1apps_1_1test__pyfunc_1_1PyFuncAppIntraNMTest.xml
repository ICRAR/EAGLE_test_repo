<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest" kind="class" language="Python" prot="public">
    <compoundname>test::apps::test_pyfunc::PyFuncAppIntraNMTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">NMTestsMixIn</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">TestCase</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest_1a54426f113e9d26e94290781e636eb43e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_pyfunc.PyFuncAppIntraNMTest.test_input_in_remote_nm</definition>
        <argsstring>(self)</argsstring>
        <name>test_input_in_remote_nm</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>A test similar in spirit to TestDM.test_runGraphOneDOPerDom, but where
application B is a PyFuncApp. This makes sure that PyFuncApp work fine
across Node Managers.

NM #1      NM #2
=======    =============
| A --|----|-&gt; B --&gt; C |
=======    =============
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_pyfunc.py" line="240" column="1" bodyfile="daliuge-runtime/test/apps/test_pyfunc.py" bodystart="240" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest_1a5a64f2443a1fc66c6c02c1930063d4e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_pyfunc.PyFuncAppIntraNMTest.test_output_in_remote_nm</definition>
        <argsstring>(self)</argsstring>
        <name>test_output_in_remote_nm</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Like the above, but with this graph. In this case the output (instead of
the input) is in a remote Node Manager.

NM #1            NM #2
=============    =======
| A --&gt; B --|----|-&gt; C |
=============    =======
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_pyfunc.py" line="259" column="1" bodyfile="daliuge-runtime/test/apps/test_pyfunc.py" bodystart="259" bodyend="275"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2677">
        <label>test.apps.test_pyfunc.PyFuncAppIntraNMTest</label>
        <link refid="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest"/>
        <childnode refid="2678" relation="public-inheritance">
        </childnode>
        <childnode refid="2679" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2679">
        <label>TestCase</label>
      </node>
      <node id="2678">
        <label>test_dm::NMTestsMixIn</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2680">
        <label>test.apps.test_pyfunc.PyFuncAppIntraNMTest</label>
        <link refid="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest"/>
        <childnode refid="2681" relation="public-inheritance">
        </childnode>
        <childnode refid="2682" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2682">
        <label>TestCase</label>
      </node>
      <node id="2681">
        <label>test_dm::NMTestsMixIn</label>
      </node>
    </collaborationgraph>
    <location file="daliuge-runtime/test/apps/test_pyfunc.py" line="238" column="1" bodyfile="daliuge-runtime/test/apps/test_pyfunc.py" bodystart="238" bodyend="275"/>
    <listofallmembers>
      <member refid="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest_1a54426f113e9d26e94290781e636eb43e" prot="public" virt="non-virtual"><scope>test::apps::test_pyfunc::PyFuncAppIntraNMTest</scope><name>test_input_in_remote_nm</name></member>
      <member refid="classtest_1_1apps_1_1test__pyfunc_1_1PyFuncAppIntraNMTest_1a5a64f2443a1fc66c6c02c1930063d4e6" prot="public" virt="non-virtual"><scope>test::apps::test_pyfunc::PyFuncAppIntraNMTest</scope><name>test_output_in_remote_nm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
