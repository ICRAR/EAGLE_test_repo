<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="drop_8py" kind="file" language="Python">
    <compoundname>drop.py</compoundname>
    <innerclass refid="classdlg_1_1drop_1_1ListAsDict" prot="public">dlg::drop::ListAsDict</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1AbstractDROP" prot="public">dlg::drop::AbstractDROP</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1PathBasedDrop" prot="public">dlg::drop::PathBasedDrop</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1FileDROP" prot="public">dlg::drop::FileDROP</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1NgasDROP" prot="public">dlg::drop::NgasDROP</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1InMemoryDROP" prot="public">dlg::drop::InMemoryDROP</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1NullDROP" prot="public">dlg::drop::NullDROP</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1RDBMSDrop" prot="public">dlg::drop::RDBMSDrop</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1ContainerDROP" prot="public">dlg::drop::ContainerDROP</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1DirectoryContainer" prot="public">dlg::drop::DirectoryContainer</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1AppDROP" prot="public">dlg::drop::AppDROP</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1InputFiredAppDROP" prot="public">dlg::drop::InputFiredAppDROP</innerclass>
    <innerclass refid="classdlg_1_1drop_1_1BarrierAppDROP" prot="public">dlg::drop::BarrierAppDROP</innerclass>
    <innernamespace refid="namespacedlg_1_1drop">dlg::drop</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>ICRAR<sp/>-<sp/>International<sp/>Centre<sp/>for<sp/>Radio<sp/>Astronomy<sp/>Research</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>(c)<sp/>UWA<sp/>-<sp/>The<sp/>University<sp/>of<sp/>Western<sp/>Australia,<sp/>2014</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Copyright<sp/>by<sp/>UWA<sp/>(in<sp/>the<sp/>framework<sp/>of<sp/>the<sp/>ICRAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MA<sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">Module<sp/>containing<sp/>the<sp/>core<sp/>DROP<sp/>classes.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>abc<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ABCMeta,<sp/>abstractmethod</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>base64</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>collections</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>contextlib</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>errno</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>heapq</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>importlib</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>shutil</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threading</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>inspect</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>six</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>six<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>BytesIO</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.ddap_protocol<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ExecutionMode,<sp/>ChecksumTypes,<sp/>AppDROPStates,<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType,<sp/>DROPPhases,<sp/>DROPStates,<sp/>DROPRel</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.event<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>EventFirer</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.exceptions<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>InvalidDropException,<sp/>InvalidRelationshipException</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OpenMode,<sp/>FileIO,<sp/>MemoryIO,<sp/>NgasIO,<sp/>ErrorIO,<sp/>NullIO</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>prepare_sql,<sp/>createDirIfMissing,<sp/>isabs,<sp/>object_tracking</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.meta<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dlg_float_param,<sp/>dlg_int_param,<sp/>dlg_list_param,<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_string_param,<sp/>dlg_bool_param,<sp/>dlg_dict_param</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Opt<sp/>into<sp/>using<sp/>per-drop<sp/>checksum<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">checksum_disabled<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;DLG_DISABLE_CHECKSUM&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.environ</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>crc32c<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>crc32<sp/><sp/></highlight><highlight class="comment">#<sp/>@UnusedImport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>_checksumType<sp/>=<sp/>ChecksumTypes.CRC_32C</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>binascii<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>crc32<sp/><sp/></highlight><highlight class="comment">#<sp/>@Reimport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>_checksumType<sp/>=<sp/>ChecksumTypes.CRC_32</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classdlg_1_1drop_1_1ListAsDict" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1ListAsDict" kindref="compound">ListAsDict</ref>(list):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>list<sp/>that<sp/>adds<sp/>drop<sp/>UIDs<sp/>to<sp/>a<sp/>set<sp/>as<sp/>they<sp/>get<sp/>appended<sp/>to<sp/>the<sp/>list&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>my_set):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1ListAsDict_1ad8475370bd09386da86fc3d6c01e6ef7" kindref="member">set</ref><sp/>=<sp/>my_set</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">append(self,<sp/>drop):</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(ListAsDict,<sp/>self).append(drop)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.set.add(drop.uid)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">track_current_drop<sp/>=<sp/>object_tracking(</highlight><highlight class="stringliteral">&apos;drop&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">#===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DROP<sp/>classes<sp/>follow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">#===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classdlg_1_1drop_1_1AbstractDROP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP" kindref="compound">AbstractDROP</ref>(EventFirer):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Base<sp/>class<sp/>for<sp/>all<sp/>DROP<sp/>implementations.</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>DROP<sp/>is<sp/>a<sp/>representation<sp/>of<sp/>a<sp/>piece<sp/>of<sp/>data.<sp/>DROPs<sp/>are<sp/>created,</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>written<sp/>once,<sp/>potentially<sp/>read<sp/>many<sp/>times,<sp/>and<sp/>they<sp/>finally<sp/>potentially</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>expire<sp/>and<sp/>get<sp/>deleted.<sp/>Subclasses<sp/>implement<sp/>different<sp/>storage<sp/>mechanisms</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>hold<sp/>the<sp/>data<sp/>represented<sp/>by<sp/>the<sp/>DROP.</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>data<sp/>represented<sp/>by<sp/>this<sp/>DROP<sp/>is<sp/>written<sp/>*through*<sp/>this<sp/>object</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(i.e.,<sp/>calling<sp/>the<sp/>``write``<sp/>method),<sp/>this<sp/>DROP<sp/>will<sp/>keep<sp/>track<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>data&apos;s<sp/>size<sp/>and<sp/>checksum.<sp/>If<sp/>the<sp/>data<sp/>is<sp/>written<sp/>externally,<sp/>the<sp/>size<sp/>and</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>checksum<sp/>can<sp/>be<sp/>fed<sp/>into<sp/>this<sp/>object<sp/>for<sp/>future<sp/>reference.</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DROPs<sp/>can<sp/>have<sp/>consumers<sp/>attached<sp/>to<sp/>them.<sp/>&apos;Normal&apos;<sp/>consumers<sp/>will</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>wait<sp/>until<sp/>the<sp/>DROP<sp/>they<sp/>&apos;consume&apos;<sp/>(their<sp/>&apos;input&apos;)<sp/>moves<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>COMPLETED<sp/>state<sp/>and<sp/>then<sp/>will<sp/>consume<sp/>it,<sp/>most<sp/>typically<sp/>by<sp/>opening<sp/>it</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>reading<sp/>its<sp/>contents,<sp/>but<sp/>any<sp/>other<sp/>operation<sp/>could<sp/>also<sp/>be<sp/>performed.</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>How<sp/>the<sp/>consumption<sp/>is<sp/>triggered<sp/>depends<sp/>on<sp/>the<sp/>producer&apos;s<sp/>`executionMode`</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>flag,<sp/>which<sp/>dictates<sp/>whether<sp/>it<sp/>should<sp/>trigger<sp/>the<sp/>consumption<sp/>itself<sp/>or</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>it<sp/>should<sp/>be<sp/>manually<sp/>triggered<sp/>by<sp/>an<sp/>external<sp/>entity.<sp/>On<sp/>the<sp/>other<sp/>hand,</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>streaming<sp/>consumers<sp/>receive<sp/>the<sp/>data<sp/>that<sp/>is<sp/>written<sp/>into<sp/>its<sp/>input</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*as<sp/>it<sp/>gets<sp/>written*.<sp/>This<sp/>mechanism<sp/>is<sp/>driven<sp/>always<sp/>by<sp/>the<sp/>DROP<sp/>that</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>acts<sp/>as<sp/>a<sp/>streaming<sp/>input.<sp/>Apart<sp/>from<sp/>receiving<sp/>the<sp/>data<sp/>as<sp/>it<sp/>gets</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>written<sp/>into<sp/>the<sp/>DROP,<sp/>streaming<sp/>consumers<sp/>are<sp/>also<sp/>notified<sp/>when<sp/>the</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DROPs<sp/>moves<sp/>to<sp/>the<sp/>COMPLETED<sp/>state,<sp/>at<sp/>which<sp/>point<sp/>no<sp/>more<sp/>data<sp/>should</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>be<sp/>expected<sp/>to<sp/>arrive<sp/>at<sp/>the<sp/>consumer<sp/>side.</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DROPs&apos;<sp/>data<sp/>can<sp/>be<sp/>expired<sp/>automatically<sp/>by<sp/>the<sp/>system<sp/>after<sp/>the<sp/>DROP<sp/>has</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>transitioned<sp/>to<sp/>the<sp/>COMPLETED<sp/>state<sp/>if<sp/>they<sp/>are<sp/>created<sp/>by<sp/>a<sp/>DROP<sp/>Manager.</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Expiration<sp/>can<sp/>either<sp/>be<sp/>triggered<sp/>by<sp/>an<sp/>interval<sp/>relative<sp/>to<sp/>the<sp/>creation</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>time<sp/>of<sp/>the<sp/>DROP<sp/>(via<sp/>the<sp/>`lifespan`<sp/>keyword),<sp/>or<sp/>by<sp/>specifying<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DROP<sp/>should<sp/>be<sp/>expired<sp/>after<sp/>all<sp/>its<sp/>consumers<sp/>have<sp/>finished<sp/>(via<sp/>the</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>`expireAfterUse`<sp/>keyword).<sp/>These<sp/>two<sp/>methods<sp/>are<sp/>mutually<sp/>exclusive.<sp/>If<sp/>none</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>is<sp/>specified<sp/>no<sp/>expiration<sp/>occurs.</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>ensures<sp/>that:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>-<sp/>This<sp/>class<sp/>cannot<sp/>be<sp/>instantiated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>-<sp/>Subclasses<sp/>implement<sp/>methods<sp/>decorated<sp/>with<sp/>@abstractmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>__metaclass__<sp/>=<sp/>ABCMeta</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a2c5c04e9015451140f980cea9966018b" kindref="member">__init__</ref>(self,<sp/>oid,<sp/>uid,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Creates<sp/>a<sp/>DROP.<sp/>The<sp/>only<sp/>mandatory<sp/>argument<sp/>are<sp/>the<sp/>Object<sp/>ID</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(`oid`)<sp/>and<sp/>the<sp/>Unique<sp/>ID<sp/>(`uid`)<sp/>of<sp/>the<sp/>new<sp/>object<sp/>(see<sp/>the<sp/>`self.oid`</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>`self.uid`<sp/>methods<sp/>for<sp/>more<sp/>information).<sp/>Any<sp/>extra<sp/>arguments<sp/>must</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>keyed,<sp/>and<sp/>will<sp/>be<sp/>processed<sp/>either<sp/>by<sp/>this<sp/>method,<sp/>or<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`initialize`<sp/>method.</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>should<sp/>not<sp/>be<sp/>overwritten<sp/>by<sp/>subclasses.<sp/>For<sp/>any<sp/>specific</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialization<sp/>logic,<sp/>the<sp/>`initialize`<sp/>method<sp/>should<sp/>be<sp/>overwritten</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instead.<sp/>This<sp/>allows<sp/>us<sp/>to<sp/>move<sp/>to<sp/>the<sp/>INITIALIZED<sp/>state<sp/>only<sp/>after<sp/>any</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specific<sp/>initialization<sp/>has<sp/>occurred<sp/>in<sp/>the<sp/>subclasses.</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(AbstractDROP,<sp/>self).<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a2c5c04e9015451140f980cea9966018b" kindref="member">__init__</ref>()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a56402b25936f5b70be65dbb35b06e16e" kindref="member">_extract_attributes</ref>(**kwargs)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Copy<sp/>it<sp/>since<sp/>we&apos;re<sp/>going<sp/>to<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs<sp/>=<sp/>dict(kwargs)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>So<sp/>far<sp/>only<sp/>these<sp/>three<sp/>are<sp/>mandatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a88bb7a6962a22ecbfce4a2b695678e9d" kindref="member">_oid</ref><sp/>=<sp/>str(oid)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ae947898f9b5e33478edce71be5cdfa8f" kindref="member">_uid</ref><sp/>=<sp/>str(uid)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>Session<sp/>owning<sp/>this<sp/>drop,<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>most<sp/>real-world<sp/>situations<sp/>this<sp/>attribute<sp/>will<sp/>be<sp/>set,<sp/>but<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>general<sp/>it<sp/>cannot<sp/>be<sp/>assumed<sp/>it<sp/>will<sp/>(e.g.,<sp/>unit<sp/>tests<sp/>create<sp/>drops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>directly<sp/>outside<sp/>the<sp/>context<sp/>of<sp/>a<sp/>session).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a014683765e9895b0fc0b8e8b29d737a3" kindref="member">_dlg_session</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a59f272d5e11df81e1884d442d1490c88" kindref="member">_getArg</ref>(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;dlg_session&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>simple<sp/>name<sp/>that<sp/>the<sp/>Drop<sp/>might<sp/>receive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>usually<sp/>set<sp/>in<sp/>the<sp/>Logical<sp/>Graph<sp/>Editor,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>but<sp/>is<sp/>not<sp/>necessarily<sp/>always<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a81f53a83ca94210f4b41613ab15f9ba7" kindref="member">name</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a59f272d5e11df81e1884d442d1490c88" kindref="member">_getArg</ref>(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;nm&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>key<sp/>of<sp/>this<sp/>drop<sp/>in<sp/>the<sp/>original<sp/>Logical<sp/>Graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>information<sp/>might<sp/>or<sp/>might<sp/>not<sp/>be<sp/>present<sp/>depending<sp/>on<sp/>how<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>physical<sp/>graph<sp/>was<sp/>generated<sp/>(or<sp/>if<sp/>this<sp/>drop<sp/>is<sp/>being<sp/>created<sp/>as<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>of<sp/>a<sp/>graph,<sp/>to<sp/>begin<sp/>with),<sp/>so<sp/>we<sp/>default<sp/>it<sp/>to<sp/>an<sp/>empty<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a60b7a1acfce6a9495fd4e248bfc0d128" kindref="member">lg_key</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a59f272d5e11df81e1884d442d1490c88" kindref="member">_getArg</ref>(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;lg_key&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1-to-N<sp/>relationship:<sp/>one<sp/>DROP<sp/>may<sp/>have<sp/>many<sp/>consumers<sp/>and<sp/>producers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>potential<sp/>consumers<sp/>and<sp/>producers<sp/>are<sp/>always<sp/>AppDROPs<sp/>instances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>keep<sp/>the<sp/>UIDs<sp/>in<sp/>a<sp/>set<sp/>for<sp/>O(1)<sp/>&quot;x<sp/>in<sp/>set&quot;<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obviously<sp/>the<sp/>normal<sp/>way<sp/>of<sp/>doing<sp/>this<sp/>is<sp/>using<sp/>a<sp/>dictionary,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>the<sp/>time<sp/>being<sp/>and<sp/>while<sp/>testing<sp/>the<sp/>integration<sp/>with<sp/>TBU&apos;s<sp/>ceda</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>library<sp/>we<sp/>need<sp/>to<sp/>expose<sp/>a<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a628517811dd5e02a426ccf7ddf049254" kindref="member">_consumers_uids</ref><sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ae7910fbb8f3f5d77f6b992429abc4315" kindref="member">_consumers</ref><sp/>=<sp/><ref refid="classdlg_1_1drop_1_1ListAsDict" kindref="compound">ListAsDict</ref>(self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a628517811dd5e02a426ccf7ddf049254" kindref="member">_consumers_uids</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1acc3d49146938ef20a31ccd95571f4ee3" kindref="member">_producers_uids</ref><sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ad57566013d66df995dd4028c659cfffb" kindref="member">_producers</ref><sp/>=<sp/><ref refid="classdlg_1_1drop_1_1ListAsDict" kindref="compound">ListAsDict</ref>(self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1acc3d49146938ef20a31ccd95571f4ee3" kindref="member">_producers_uids</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>holding<sp/>the<sp/>state<sp/>of<sp/>the<sp/>producers<sp/>that<sp/>have<sp/>finished<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>execution.<sp/>Once<sp/>all<sp/>producers<sp/>have<sp/>finished,<sp/>this<sp/>DROP<sp/>moves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>itself<sp/>to<sp/>the<sp/>COMPLETED<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a9f4ebd8584b4a46b1c8b315212029602" kindref="member">_finishedProducers</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ace84e0b7849c49a32d74c46081d4ca27" kindref="member">_finishedProducersLock</ref><sp/>=<sp/>threading.Lock()</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Streaming<sp/>consumers<sp/>are<sp/>objects<sp/>that<sp/>consume<sp/>the<sp/>data<sp/>written<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>DROP<sp/>*as<sp/>it<sp/>gets<sp/>written*,<sp/>and<sp/>therefore<sp/>don&apos;t<sp/>have<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>wait<sp/>until<sp/>this<sp/>DROP<sp/>has<sp/>moved<sp/>to<sp/>COMPLETED.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>An<sp/>object<sp/>cannot<sp/>be<sp/>a<sp/>streaming<sp/>consumers<sp/>and<sp/>a<sp/>&apos;normal&apos;<sp/>consumer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>at<sp/>the<sp/>same<sp/>time,<sp/>although<sp/>this<sp/>rule<sp/>is<sp/>imposed<sp/>simply<sp/>to<sp/>enforce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>efficiency<sp/>(why<sp/>would<sp/>a<sp/>consumer<sp/>want<sp/>to<sp/>consume<sp/>the<sp/>data<sp/>twice?)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>not<sp/>because<sp/>it&apos;s<sp/>technically<sp/>impossible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>See<sp/>comment<sp/>above<sp/>in<sp/>self._consumers/self._producers<sp/>for<sp/>separate<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>with<sp/>uids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a267e1a8a90fe2cfb4f67ee95c0328926" kindref="member">_streamingConsumers_uids</ref><sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1aad932d8c7f4cc50ca7c8003e8f579f9f" kindref="member">_streamingConsumers</ref><sp/>=<sp/><ref refid="classdlg_1_1drop_1_1ListAsDict" kindref="compound">ListAsDict</ref>(self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a267e1a8a90fe2cfb4f67ee95c0328926" kindref="member">_streamingConsumers_uids</ref>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a64013d5622b1a9de1c35b8e4a7e9caf5" kindref="member">_refCount</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a2737c958e0a32ca04c9c5288eb055512" kindref="member">_refLock</ref><sp/><sp/>=<sp/>threading.Lock()</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1aec78ddb79aa79e4332bb4eb487bf9cac" kindref="member">_location</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1afa83aeb1065af5788508e8ce472de629" kindref="member">_parent</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ae85b0c9f2c44941479d99a249e879aba" kindref="member">_status</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1af7fdf20fd4e18ee6243d0568d7b196d0" kindref="member">_statusLock</ref><sp/>=<sp/>threading.RLock()</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Current<sp/>and<sp/>target<sp/>phases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Phases<sp/>represent<sp/>the<sp/>resiliency<sp/>of<sp/>data.<sp/>An<sp/>initial<sp/>phase<sp/>of<sp/>PLASMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>is<sp/>set<sp/>on<sp/>each<sp/>DROP<sp/>representing<sp/>its<sp/>lack<sp/>of<sp/>non-transient<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>support.<sp/>A<sp/>target<sp/>phase<sp/>is<sp/>also<sp/>set<sp/>to<sp/>hint<sp/>the<sp/>Data<sp/>Lifecycle<sp/>Manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>about<sp/>the<sp/>level<sp/>of<sp/>resilience<sp/>that<sp/>this<sp/>DROP<sp/>should<sp/>achieve.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a48ab2d851204e9ce7460fd6d91fc2bf0" kindref="member">_phase</ref><sp/>=<sp/>DROPPhases.PLASMA</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a22ce4213ff54ddadd6c89dbfa1c9b86f" kindref="member">_targetPhase</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a59f272d5e11df81e1884d442d1490c88" kindref="member">_getArg</ref>(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;targetPhase&apos;</highlight><highlight class="normal">,<sp/>DROPPhases.GAS)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculating<sp/>the<sp/>checksum<sp/>and<sp/>maintaining<sp/>the<sp/>data<sp/>size<sp/>internally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>implies<sp/>that<sp/>the<sp/>data<sp/>represented<sp/>by<sp/>this<sp/>DROP<sp/>is<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>*through*<sp/>this<sp/>DROP.<sp/>This<sp/>might<sp/>not<sp/>always<sp/>be<sp/>the<sp/>case<sp/>though,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>since<sp/>data<sp/>could<sp/>be<sp/>written<sp/>externally<sp/>and<sp/>the<sp/>DROP<sp/>simply<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>moved<sp/>to<sp/>COMPLETED<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>process.<sp/>In<sp/>this<sp/>case<sp/>we<sp/>return<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>None<sp/>checksum<sp/>and<sp/>size<sp/>(when<sp/>requested),<sp/>signaling<sp/>that<sp/>we<sp/>don&apos;t<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note<sp/>also<sp/>that<sp/>the<sp/>setters<sp/>of<sp/>these<sp/>two<sp/>properties<sp/>also<sp/>allow<sp/>to<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>a<sp/>value<sp/>on<sp/>them,<sp/>but<sp/>only<sp/>if<sp/>they<sp/>are<sp/>None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ade1324ea9ccd816c3abd4ec6e46ec287" kindref="member">_checksum</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a04db8f1ab5e67729f17be9b5cbfda221" kindref="member">_checksumType</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a638c96950271cdb14e467d3c530ff3f7" kindref="member">_size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>DataIO<sp/>instance<sp/>we<sp/>use<sp/>in<sp/>our<sp/>write<sp/>method.<sp/>It&apos;s<sp/>initialized<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>None<sp/>because<sp/>it&apos;s<sp/>lazily<sp/>initialized<sp/>in<sp/>the<sp/>write<sp/>method,<sp/>since<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>might<sp/>be<sp/>written<sp/>externally<sp/>and<sp/>not<sp/>through<sp/>this<sp/>DROP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a3d56a5056176152acccb98b9679804f5" kindref="member">_wio</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>DataIO<sp/>objects<sp/>used<sp/>for<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Instead<sp/>of<sp/>passing<sp/>file<sp/>objects<sp/>or<sp/>more<sp/>complex<sp/>data<sp/>types<sp/>in<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>open/read/close<sp/>calls<sp/>we<sp/>use<sp/>integers,<sp/>mainly<sp/>because<sp/>Pyro<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>handle<sp/>file<sp/>types<sp/>and<sp/>other<sp/>classes<sp/>(like<sp/>StringIO)<sp/>well,<sp/>but<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>because<sp/>it<sp/>requires<sp/>less<sp/>transport.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Make<sp/>these<sp/>threadsafe,<sp/>no<sp/>lock<sp/>around<sp/>them<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a3e25802713ad3c29ec414d3aa66f32f8" kindref="member">_rios</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>execution<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>When<sp/>set<sp/>to<sp/>DROP<sp/>(the<sp/>default)<sp/>the<sp/>graph<sp/>execution<sp/>will<sp/>be<sp/>driven<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>DROPs<sp/>themselves<sp/>by<sp/>firing<sp/>and<sp/>listening<sp/>to<sp/>events,<sp/>and<sp/>reacting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>accordingly<sp/>by<sp/>executing<sp/>themselves<sp/>or<sp/>moving<sp/>to<sp/>the<sp/>COMPLETED<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>When<sp/>set<sp/>to<sp/>EXTERNAL,<sp/>DROPs<sp/>do<sp/>no<sp/>react<sp/>to<sp/>these<sp/>events,<sp/>and<sp/>remain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>in<sp/>the<sp/>state<sp/>they<sp/>currently<sp/>are.<sp/>In<sp/>this<sp/>case<sp/>an<sp/>external<sp/>entity<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>listen<sp/>to<sp/>the<sp/>events<sp/>and<sp/>decide<sp/>when<sp/>to<sp/>trigger<sp/>the<sp/>execution<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>applications.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a684737e4bfe1229241671122dd8640fd" kindref="member">_executionMode</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a59f272d5e11df81e1884d442d1490c88" kindref="member">_getArg</ref>(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;executionMode&apos;</highlight><highlight class="normal">,<sp/>ExecutionMode.DROP)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>physical<sp/>node<sp/>where<sp/>this<sp/>DROP<sp/>resides.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>piece<sp/>of<sp/>information<sp/>is<sp/>mandatory<sp/>when<sp/>submitting<sp/>the<sp/>physical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>graph<sp/>via<sp/>the<sp/>DataIslandManager,<sp/>but<sp/>in<sp/>simpler<sp/>scenarios<sp/>such<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>tests<sp/>or<sp/>graph<sp/>submissions<sp/>via<sp/>the<sp/>NodeManager<sp/>it<sp/>might<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>missing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a0627995f523c66c929d8560a821e2477" kindref="member">_node</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a59f272d5e11df81e1884d442d1490c88" kindref="member">_getArg</ref>(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>host<sp/>representing<sp/>the<sp/>Data<sp/>Island<sp/>where<sp/>this<sp/>DROP<sp/>resides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>piece<sp/>of<sp/>information<sp/>is<sp/>mandatory<sp/>when<sp/>submitting<sp/>the<sp/>physical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>graph<sp/>via<sp/>the<sp/>MasterManager,<sp/>but<sp/>in<sp/>simpler<sp/>scenarios<sp/>such<sp/>as<sp/>tests<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>graphs<sp/>submissions<sp/>via<sp/>the<sp/>DataIslandManager<sp/>or<sp/>NodeManager<sp/>it<sp/>might</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>missing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1af321e810033b5f89036f8c66dbea5e83" kindref="member">_dataIsland</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a59f272d5e11df81e1884d442d1490c88" kindref="member">_getArg</ref>(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;island&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>DROP<sp/>expiration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Expiration<sp/>can<sp/>be<sp/>time-driven<sp/>or<sp/>usage-driven,<sp/>which<sp/>are<sp/>mutually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>exclusive<sp/>methods.<sp/>If<sp/>time-driven,<sp/>a<sp/>relative<sp/>lifespan<sp/>is<sp/>assigned<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>DROP.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Expected<sp/>lifespan<sp/>for<sp/>this<sp/>object,<sp/>used<sp/>by<sp/>to<sp/>expire<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;lifespan&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;expireAfterUse&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&quot;%r<sp/>specifies<sp/>both<sp/>`lifespan`<sp/>and<sp/>`expireAfterUse`&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;but<sp/>they<sp/>are<sp/>mutually<sp/>exclusive&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self,))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1aedd2b78d6bdb6227000dfc2c5cbf1dbd" kindref="member">_expireAfterUse</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a59f272d5e11df81e1884d442d1490c88" kindref="member">_getArg</ref>(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;expireAfterUse&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ac8c2d7b1a613144f5d5b147641a90dc8" kindref="member">_expirationDate</ref><sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1aedd2b78d6bdb6227000dfc2c5cbf1dbd" kindref="member">_expireAfterUse</ref>:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lifespan<sp/>=<sp/>float(self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a59f272d5e11df81e1884d442d1490c88" kindref="member">_getArg</ref>(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;lifespan&apos;</highlight><highlight class="normal">,<sp/>-1))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lifespan<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ac8c2d7b1a613144f5d5b147641a90dc8" kindref="member">_expirationDate</ref><sp/>=<sp/>time.time()<sp/>+<sp/>lifespan</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Expected<sp/>data<sp/>size,<sp/>used<sp/>to<sp/>automatically<sp/>move<sp/>the<sp/>DROP<sp/>to<sp/>COMPLETED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>after<sp/>successive<sp/>calls<sp/>to<sp/>write()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a81fac4e863554f714c08b77fc277cba8" kindref="member">_expectedSize</ref><sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;expectedSize&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;expectedSize&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a81fac4e863554f714c08b77fc277cba8" kindref="member">_expectedSize</ref><sp/>=<sp/>int(kwargs.pop(</highlight><highlight class="stringliteral">&apos;expectedSize&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>All<sp/>DROPs<sp/>are<sp/>precious<sp/>unless<sp/>stated<sp/>otherwise;<sp/>used<sp/>for<sp/>replication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ab12c7f92a91a8847c8cac47963f2e10b" kindref="member">_precious</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a59f272d5e11df81e1884d442d1490c88" kindref="member">_getArg</ref>(kwargs,<sp/></highlight><highlight class="stringliteral">&apos;precious&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sub-class<sp/>initialization;<sp/>mark<sp/>ourselves<sp/>as<sp/>INITIALIZED<sp/>after<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a4a967df19a64a5cfcfc6dcf7e166ef9b" kindref="member">initialize</ref>(**kwargs)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ae85b0c9f2c44941479d99a249e879aba" kindref="member">_status</ref><sp/>=<sp/>DROPStates.INITIALIZED<sp/></highlight><highlight class="comment">#<sp/>no<sp/>need<sp/>to<sp/>use<sp/>synchronised<sp/>self.status<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_extract_attributes(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getmembers(object,<sp/>predicate=None):</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cls<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>object.__class__.__mro__[:-1]:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vars(cls).items():</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>predicate<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>predicate(v):</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>k,<sp/>v</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Take<sp/>a<sp/>class<sp/>dlg<sp/>defined<sp/>parameter<sp/>class<sp/>attribute<sp/>and<sp/>create<sp/>an<sp/>instanced<sp/>attribute<sp/>on<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>attr_name,<sp/>obj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>getmembers(self,<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>a:<sp/>not(inspect.isfunction(a)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>isinstance(a,<sp/>property))):</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(obj,<sp/>dlg_float_param):</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>kwargs.get(attr_name,<sp/>obj.default_value)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>float(value)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(obj,<sp/>dlg_bool_param):</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>kwargs.get(attr_name,<sp/>obj.default_value)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>bool(value)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(obj,<sp/>dlg_int_param):</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>kwargs.get(attr_name,<sp/>obj.default_value)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>int(value)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(obj,<sp/>dlg_string_param):</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>kwargs.get(attr_name,<sp/>obj.default_value)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>str(value)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(obj,<sp/>dlg_list_param):</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>kwargs.get(attr_name,<sp/>obj.default_value)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(value,<sp/>list):</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;dlg_list_param<sp/>{}<sp/>is<sp/>not<sp/>a<sp/>list.<sp/>It<sp/>is<sp/>a<sp/>{}&quot;</highlight><highlight class="normal">.format(attr_name,<sp/>type(value)))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(obj,<sp/>dlg_dict_param):</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>kwargs.get(attr_name,<sp/>obj.default_value)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(value,<sp/>dict):</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;dlg_dict_param<sp/>{}<sp/>is<sp/>not<sp/>a<sp/>dict.<sp/>It<sp/>is<sp/>a<sp/>{}&quot;</highlight><highlight class="normal">.format(attr_name,<sp/>type(value)))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,<sp/>attr_name,<sp/>value)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_getArg(self,<sp/>kwargs,<sp/>key,<sp/>default):</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>default</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>kwargs.pop(key)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>logger.isEnabledFor(logging.DEBUG):</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Defaulting<sp/>%s<sp/>to<sp/>%s<sp/>in<sp/>%r&quot;</highlight><highlight class="normal"><sp/>%<sp/>(key,<sp/>str(val),<sp/>self))</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__hash__(self):</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash(self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ae947898f9b5e33478edce71be5cdfa8f" kindref="member">_uid</ref>)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__repr__(self):</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&lt;%s<sp/>oid=%s,<sp/>uid=%s&gt;&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.__class__.__name__,<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a634670a85a0b978d3327edca73590c92" kindref="member">oid</ref>,<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a52f23b12db48660c44e6c052b9367d67" kindref="member">uid</ref>)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a4a967df19a64a5cfcfc6dcf7e166ef9b" kindref="member">initialize</ref>(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Performs<sp/>any<sp/>specific<sp/>subclass<sp/>initialization.</highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`kwargs`<sp/>contains<sp/>all<sp/>the<sp/>keyword<sp/>arguments<sp/>given<sp/>at<sp/>construction<sp/>time,</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>those<sp/>used<sp/>by<sp/>the<sp/>constructor<sp/>itself.<sp/>Implementations<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method<sp/>should<sp/>make<sp/>sure<sp/>that<sp/>arguments<sp/>in<sp/>the<sp/>`kwargs`<sp/>dictionary<sp/>are</highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removed<sp/>once<sp/>they<sp/>are<sp/>interpreted<sp/>so<sp/>they<sp/>are<sp/>not<sp/>interpreted<sp/>by</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accident<sp/>by<sp/>another<sp/>method<sp/>implementations<sp/>that<sp/>might<sp/>reside<sp/>in<sp/>the<sp/>call</highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hierarchy<sp/>(in<sp/>the<sp/>case<sp/>that<sp/>a<sp/>subclass<sp/>implementation<sp/>calls<sp/>the<sp/>parent</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method<sp/>implementation,<sp/>which<sp/>is<sp/>usually<sp/>the<sp/>case).</highlight></codeline>
<codeline lineno="354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a16df3fee6a86cf4f43c9aa0dc9c72d01" kindref="member">incrRefCount</ref>(self):</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Increments<sp/>the<sp/>reference<sp/>count<sp/>of<sp/>this<sp/>DROP<sp/>by<sp/>one<sp/>atomically.</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self._refLock:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._refCount<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1af586122ecbe9f5ee3861adfb5d4bb949" kindref="member">decrRefCount</ref>(self):</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="365"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Decrements<sp/>the<sp/>reference<sp/>count<sp/>of<sp/>this<sp/>DROP<sp/>by<sp/>one<sp/>atomically.</highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self._refLock:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._refCount<sp/>-=<sp/>1</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1acdcf1ab8f9f681cf6b92124b12de5cfd" kindref="member">open</ref>(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Opens<sp/>the<sp/>DROP<sp/>for<sp/>reading,<sp/>and<sp/>returns<sp/>a<sp/>&quot;DROP<sp/>descriptor&quot;</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>must<sp/>be<sp/>used<sp/>when<sp/>invoking<sp/>the<sp/>read()<sp/>and<sp/>close()<sp/>methods.</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROPs<sp/>maintain<sp/>a<sp/>internal<sp/>reference<sp/>count<sp/>based<sp/>on<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>times<sp/>they<sp/>are<sp/>opened<sp/>for<sp/>reading;<sp/>because<sp/>of<sp/>that<sp/>after<sp/>a<sp/>successful</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call<sp/>to<sp/>this<sp/>method<sp/>the<sp/>corresponding<sp/>close()<sp/>method<sp/>must<sp/>eventually<sp/>be</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invoked.<sp/>Failing<sp/>to<sp/>do<sp/>so<sp/>will<sp/>result<sp/>in<sp/>DROPs<sp/>not<sp/>expiring<sp/>and</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getting<sp/>deleted.</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.status<sp/>!=<sp/>DROPStates.COMPLETED:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;%r<sp/>is<sp/>in<sp/>state<sp/>%s<sp/>(!=COMPLETED),<sp/>cannot<sp/>be<sp/>opened<sp/>for<sp/>reading&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self,<sp/>self.status,))</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io<sp/>=<sp/>self.getIO()</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.open(OpenMode.OPEN_READ,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Save<sp/>the<sp/>IO<sp/>object<sp/>in<sp/>the<sp/>dictionary<sp/>and<sp/>return<sp/>its<sp/>descriptor<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptor<sp/>=<sp/>random.SystemRandom().randint(-six.MAXSIZE<sp/>-<sp/>1,<sp/>six.MAXSIZE)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>descriptor<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._rios:</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._rios[descriptor]<sp/>=<sp/>io</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>occurs<sp/>only<sp/>after<sp/>a<sp/>successful<sp/>opening</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.incrRefCount()</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._fire(</highlight><highlight class="stringliteral">&apos;open&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>descriptor</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a494ab1ae0b6d8346d869c9b93bb7a225" kindref="member">close</ref>(self,<sp/>descriptor,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Closes<sp/>the<sp/>given<sp/>DROP<sp/>descriptor,<sp/>decreasing<sp/>the<sp/>DROP&apos;s</highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal<sp/>reference<sp/>count<sp/>and<sp/>releasing<sp/>the<sp/>underlying<sp/>resources</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>associated<sp/>to<sp/>the<sp/>descriptor.</highlight></codeline>
<codeline lineno="406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._checkStateAndDescriptor(descriptor)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Decrement<sp/>counter<sp/>and<sp/>then<sp/>actually<sp/>close</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.decrRefCount()</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io<sp/>=<sp/>self._rios.pop(descriptor)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.close(**kwargs)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_closeWriters(self):</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="416"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Close<sp/>our<sp/>writing<sp/>IO<sp/>instance.</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>written<sp/>externally,<sp/>self._wio<sp/>will<sp/>have<sp/>remained<sp/>None</highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._wio:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._wio.close()</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._wio<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a3319962613a02690f67a92c911bc695f" kindref="member">read</ref>(self,<sp/>descriptor,<sp/>count=4096,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="425"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reads<sp/>`count`<sp/>bytes<sp/>from<sp/>the<sp/>given<sp/>DROP<sp/>`descriptor`.</highlight></codeline>
<codeline lineno="426"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._checkStateAndDescriptor(descriptor)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io<sp/>=<sp/>self._rios[descriptor]</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>io.read(count,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_checkStateAndDescriptor(self,<sp/>descriptor):</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.status<sp/>!=<sp/>DROPStates.COMPLETED:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;%r<sp/>is<sp/>in<sp/>state<sp/>%s<sp/>(!=COMPLETED),<sp/>cannot<sp/>be<sp/>read&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.status,))</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>descriptor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Illegal<sp/>empty<sp/>descriptor<sp/>given&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>descriptor<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._rios:</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Illegal<sp/>descriptor<sp/>%d<sp/>given,<sp/>remember<sp/>to<sp/>open()<sp/>first&quot;</highlight><highlight class="normal"><sp/>%<sp/>(descriptor))</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a5550127a42944b64cd691f87c4dc3abe" kindref="member">isBeingRead</ref>(self):</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="441"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>`True`<sp/>if<sp/>the<sp/>DROP<sp/>is<sp/>currently<sp/>being<sp/>read;<sp/>`False`</highlight></codeline>
<codeline lineno="442"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise</highlight></codeline>
<codeline lineno="443"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self._refLock:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._refCount<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a876b9794001307e140c95f133372efce" kindref="member">write</ref>(self,<sp/>data,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Writes<sp/>the<sp/>given<sp/>`data`<sp/>into<sp/>this<sp/>DROP.<sp/>This<sp/>method<sp/>is<sp/>only<sp/>meant</highlight></codeline>
<codeline lineno="451"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>be<sp/>called<sp/>while<sp/>the<sp/>DROP<sp/>is<sp/>in<sp/>INITIALIZED<sp/>or<sp/>WRITING<sp/>state;</highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>once<sp/>the<sp/>DROP<sp/>is<sp/>COMPLETE<sp/>or<sp/>beyond<sp/>only<sp/>reading<sp/>is<sp/>allowed.</highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>underlying<sp/>storage<sp/>mechanism<sp/>is<sp/>responsible<sp/>for<sp/>implementing<sp/>the</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final<sp/>writing<sp/>logic<sp/>via<sp/>the<sp/>`self.writeMeta()`<sp/>method.</highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.status<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[DROPStates.INITIALIZED,<sp/>DROPStates.WRITING]:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;No<sp/>more<sp/>writing<sp/>expected&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(data,<sp/>six.binary_type):</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Data<sp/>type<sp/>not<sp/>of<sp/>binary<sp/>type:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>type(data).__name__)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>lazily<sp/>initialize<sp/>our<sp/>writing<sp/>IO<sp/>instance<sp/>because<sp/>the<sp/>data<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>DROP<sp/>might<sp/>not<sp/>be<sp/>written<sp/>through<sp/>this<sp/>DROP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self._wio:</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._wio<sp/>=<sp/>self.getIO()</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._wio.open(OpenMode.OPEN_WRITE)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbytes<sp/>=<sp/>self._wio.write(data)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>len(data)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nbytes<sp/>!=<sp/>dataLen:</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Maybe<sp/>this<sp/>should<sp/>be<sp/>an<sp/>actual<sp/>error?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&apos;Not<sp/>all<sp/>data<sp/>was<sp/>correctly<sp/>written<sp/>by<sp/>%s<sp/>(%d/%d<sp/>bytes<sp/>written)&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self,<sp/>nbytes,<sp/>dataLen))</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>see<sp/>__init__<sp/>for<sp/>the<sp/>initialization<sp/>to<sp/>None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._size<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._size<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._size<sp/>+=<sp/>nbytes</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Trigger<sp/>our<sp/>streaming<sp/>consumers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._streamingConsumers:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>streamingConsumer<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._streamingConsumers:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamingConsumer.dataWritten(self.uid,<sp/>data)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Update<sp/>our<sp/>internal<sp/>checksum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>checksum_disabled:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._updateChecksum(data)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>we<sp/>know<sp/>how<sp/>much<sp/>data<sp/>we&apos;ll<sp/>receive,<sp/>keep<sp/>track<sp/>of<sp/>it<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>automatically<sp/>switch<sp/>to<sp/>COMPLETED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._expectedSize<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining<sp/>=<sp/>self._expectedSize<sp/>-<sp/>self._size</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>remaining<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.status<sp/>=<sp/>DROPStates.WRITING</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>remaining<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&quot;Received<sp/>and<sp/>wrote<sp/>more<sp/>bytes<sp/>than<sp/>expected:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(-remaining))</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Automatically<sp/>moving<sp/>%r<sp/>to<sp/>COMPLETED,<sp/>all<sp/>expected<sp/>data<sp/>arrived&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self,))</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.setCompleted()</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.status<sp/>=<sp/>DROPStates.WRITING</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nbytes</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>@abstractmethod</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a9fd58d68334df539f1487ee7331776a4" kindref="member">getIO</ref>(self):</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="508"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>an<sp/>instance<sp/>of<sp/>one<sp/>of<sp/>the<sp/>`dlg.io.DataIO`<sp/>instances<sp/>that</highlight></codeline>
<codeline lineno="509"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handles<sp/>the<sp/>data<sp/>contents<sp/>of<sp/>this<sp/>DROP.</highlight></codeline>
<codeline lineno="510"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1ac855c9cb1b64dcb466b6164862c7b236" kindref="member">delete</ref>(self):</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="514"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deletes<sp/>the<sp/>data<sp/>represented<sp/>by<sp/>this<sp/>DROP.</highlight></codeline>
<codeline lineno="515"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.getIO().<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ac855c9cb1b64dcb466b6164862c7b236" kindref="member">delete</ref>()</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1ad945395440af71a3da4edc5827ddea81" kindref="member">exists</ref>(self):</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="520"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>`True`<sp/>if<sp/>the<sp/>data<sp/>represented<sp/>by<sp/>this<sp/>DROP<sp/>exists<sp/>indeed</highlight></codeline>
<codeline lineno="521"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>underlying<sp/>storage<sp/>mechanism</highlight></codeline>
<codeline lineno="522"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.getIO().<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ad945395440af71a3da4edc5827ddea81" kindref="member">exists</ref>()</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>@abstractmethod</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a7be415cbcbcf01f3fb17c09a457a6c76" kindref="member">dataURL</ref>(self):</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="528"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>URL<sp/>that<sp/>points<sp/>to<sp/>the<sp/>data<sp/>referenced<sp/>by<sp/>this<sp/>DROP.<sp/>Different</highlight></codeline>
<codeline lineno="529"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROP<sp/>implementations<sp/>will<sp/>use<sp/>different<sp/>URI<sp/>schemes.</highlight></codeline>
<codeline lineno="530"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_updateChecksum(self,<sp/>chunk):</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>see<sp/>__init__<sp/>for<sp/>the<sp/>initialization<sp/>to<sp/>None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._checksum<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._checksum<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._checksumType<sp/>=<sp/>_checksumType</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._checksum<sp/>=<sp/>crc32(chunk,<sp/>self._checksum)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1ae042549a6196547aae18ffcaa614c4bc" kindref="member">checksum</ref>(self):</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="542"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>checksum<sp/>value<sp/>for<sp/>the<sp/>data<sp/>represented<sp/>by<sp/>this<sp/>DROP.<sp/>Its</highlight></codeline>
<codeline lineno="543"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>is<sp/>automatically<sp/>calculated<sp/>if<sp/>the<sp/>data<sp/>was<sp/>actually<sp/>written</highlight></codeline>
<codeline lineno="544"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>through<sp/>this<sp/>DROP<sp/>(using<sp/>the<sp/>`self.write()`<sp/>method<sp/>directly<sp/>or</highlight></codeline>
<codeline lineno="545"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indirectly).<sp/>In<sp/>the<sp/>case<sp/>that<sp/>the<sp/>data<sp/>has<sp/>been<sp/>externally<sp/>written,<sp/>the</highlight></codeline>
<codeline lineno="546"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checksum<sp/>can<sp/>be<sp/>set<sp/>externally<sp/>after<sp/>the<sp/>DROP<sp/>has<sp/>been<sp/>moved<sp/>to</highlight></codeline>
<codeline lineno="547"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPLETED<sp/>or<sp/>beyond.</highlight></codeline>
<codeline lineno="548"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="549"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:see:<sp/>`self.checksumType`</highlight></codeline>
<codeline lineno="550"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._checksum</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>@checksum.setter</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1ae042549a6196547aae18ffcaa614c4bc" kindref="member">checksum</ref>(self,<sp/>value):</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._checksum<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;The<sp/>checksum<sp/>for<sp/>DROP<sp/>%s<sp/>is<sp/>already<sp/>calculated,<sp/>cannot<sp/>overwrite<sp/>with<sp/>new<sp/>value&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self))</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.status<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[DROPStates.INITIALIZED,<sp/>DROPStates.WRITING]:</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;DROP<sp/>%s<sp/>is<sp/>still<sp/>not<sp/>fully<sp/>written,<sp/>cannot<sp/>manually<sp/>set<sp/>a<sp/>checksum<sp/>yet&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self))</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._checksum<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a98da5f14a2f7771d720d3e3ada76301b" kindref="member">checksumType</ref>(self):</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="564"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>algorithm<sp/>used<sp/>to<sp/>compute<sp/>this<sp/>DROP&apos;s<sp/>data<sp/>checksum.<sp/>Its<sp/>value</highlight></codeline>
<codeline lineno="565"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>automatically<sp/>set<sp/>if<sp/>the<sp/>data<sp/>was<sp/>actually<sp/>written<sp/>through<sp/>this</highlight></codeline>
<codeline lineno="566"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROP<sp/>(using<sp/>the<sp/>`self.write()`<sp/>method<sp/>directly<sp/>or<sp/>indirectly).<sp/>In</highlight></codeline>
<codeline lineno="567"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>case<sp/>that<sp/>the<sp/>data<sp/>has<sp/>been<sp/>externally<sp/>written,<sp/>the<sp/>checksum<sp/>type</highlight></codeline>
<codeline lineno="568"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>set<sp/>externally<sp/>after<sp/>the<sp/>DROP<sp/>has<sp/>been<sp/>moved<sp/>to<sp/>COMPLETED</highlight></codeline>
<codeline lineno="569"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>beyond.</highlight></codeline>
<codeline lineno="570"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="571"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:see:<sp/>`self.checksum`</highlight></codeline>
<codeline lineno="572"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._checksumType</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>@checksumType.setter</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a98da5f14a2f7771d720d3e3ada76301b" kindref="member">checksumType</ref>(self,<sp/>value):</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._checksumType<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;The<sp/>checksum<sp/>type<sp/>for<sp/>DROP<sp/>%s<sp/>is<sp/>already<sp/>set,<sp/>cannot<sp/>overwrite<sp/>with<sp/>new<sp/>value&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self))</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.status<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[DROPStates.INITIALIZED,<sp/>DROPStates.WRITING]:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;DROP<sp/>%s<sp/>is<sp/>still<sp/>not<sp/>fully<sp/>written,<sp/>cannot<sp/>manually<sp/>set<sp/>a<sp/>checksum<sp/>type<sp/>yet&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self))</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._checksumType<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a634670a85a0b978d3327edca73590c92" kindref="member">oid</ref>(self):</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="586"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>DROP&apos;s<sp/>Object<sp/>ID<sp/>(OID).<sp/>OIDs<sp/>are<sp/>unique<sp/>identifiers<sp/>given<sp/>to</highlight></codeline>
<codeline lineno="587"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semantically<sp/>different<sp/>DROPs<sp/>(and<sp/>by<sp/>consequence<sp/>the<sp/>data<sp/>they</highlight></codeline>
<codeline lineno="588"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>represent).<sp/>This<sp/>means<sp/>that<sp/>different<sp/>DROPs<sp/>that<sp/>point<sp/>to<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="589"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>semantically<sp/>speaking,<sp/>either<sp/>in<sp/>the<sp/>same<sp/>or<sp/>in<sp/>a<sp/>different</highlight></codeline>
<codeline lineno="590"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage,<sp/>will<sp/>share<sp/>the<sp/>same<sp/>OID.</highlight></codeline>
<codeline lineno="591"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._oid</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a52f23b12db48660c44e6c052b9367d67" kindref="member">uid</ref>(self):</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="597"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>DROP&apos;s<sp/>Unique<sp/>ID<sp/>(UID).<sp/>Unlike<sp/>the<sp/>OID,<sp/>the<sp/>UID<sp/>is<sp/>globally</highlight></codeline>
<codeline lineno="598"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>different<sp/>for<sp/>all<sp/>DROP<sp/>instances,<sp/>regardless<sp/>of<sp/>the<sp/>data<sp/>they</highlight></codeline>
<codeline lineno="599"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point<sp/>to.</highlight></codeline>
<codeline lineno="600"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._uid</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">executionMode(self):</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="606"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>execution<sp/>mode<sp/>of<sp/>this<sp/>DROP.<sp/>If<sp/>`ExecutionMode.DROP`<sp/>it<sp/>means</highlight></codeline>
<codeline lineno="607"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>this<sp/>DROP<sp/>will<sp/>automatically<sp/>trigger<sp/>the<sp/>execution<sp/>of<sp/>all<sp/>its</highlight></codeline>
<codeline lineno="608"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consumers.<sp/>If<sp/>`ExecutionMode.EXTERNAL`<sp/>it<sp/>means<sp/>that<sp/>this<sp/>DROP</highlight></codeline>
<codeline lineno="609"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>*not*<sp/>trigger<sp/>its<sp/>consumers,<sp/>and<sp/>therefore<sp/>an<sp/>external<sp/>entity<sp/>will</highlight></codeline>
<codeline lineno="610"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>to<sp/>do<sp/>it.</highlight></codeline>
<codeline lineno="611"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._executionMode</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1aac36c5636a45018179efda69ccf79d2f" kindref="member">handleInterest</ref>(self,<sp/>drop):</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="616"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Main<sp/>mechanism<sp/>through<sp/>which<sp/>a<sp/>DROP<sp/>handles<sp/>its<sp/>interest<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="617"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second<sp/>DROP<sp/>it<sp/>isn&apos;t<sp/>directly<sp/>related<sp/>to.</highlight></codeline>
<codeline lineno="618"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="619"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>call<sp/>to<sp/>this<sp/>method<sp/>should<sp/>be<sp/>expected<sp/>for<sp/>each<sp/>DROP<sp/>this</highlight></codeline>
<codeline lineno="620"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROP<sp/>is<sp/>interested<sp/>in.<sp/>The<sp/>default<sp/>implementation<sp/>does<sp/>nothing,</highlight></codeline>
<codeline lineno="621"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>implementations<sp/>are<sp/>free<sp/>to<sp/>perform<sp/>any<sp/>action,<sp/>such<sp/>as<sp/>subscribing</highlight></codeline>
<codeline lineno="622"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>events<sp/>or<sp/>storing<sp/>information.</highlight></codeline>
<codeline lineno="623"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="624"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>At<sp/>this<sp/>layer<sp/>only<sp/>the<sp/>handling<sp/>of<sp/>such<sp/>an<sp/>interest<sp/>exists.<sp/>The</highlight></codeline>
<codeline lineno="625"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expression<sp/>of<sp/>such<sp/>interest,<sp/>and<sp/>the<sp/>invocation<sp/>of<sp/>this<sp/>method<sp/>wherever</highlight></codeline>
<codeline lineno="626"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>necessary,<sp/>is<sp/>currently<sp/>left<sp/>as<sp/>a<sp/>responsibility<sp/>of<sp/>the<sp/>entity<sp/>creating</highlight></codeline>
<codeline lineno="627"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>DROPs.<sp/>In<sp/>the<sp/>case<sp/>of<sp/>a<sp/>Session<sp/>in<sp/>a<sp/>DROPManager<sp/>for</highlight></codeline>
<codeline lineno="628"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>example<sp/>this<sp/>step<sp/>would<sp/>be<sp/>performed<sp/>using<sp/>deployment-time<sp/>information</highlight></codeline>
<codeline lineno="629"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained<sp/>in<sp/>the<sp/>dropspec<sp/>dictionaries<sp/>held<sp/>in<sp/>the<sp/>session.</highlight></codeline>
<codeline lineno="630"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_fire(self,<sp/>eventType,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="634"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Delivers<sp/>an<sp/>event<sp/>of<sp/>`eventType`<sp/>to<sp/>all<sp/>interested<sp/>listeners.</highlight></codeline>
<codeline lineno="635"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="636"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>the<sp/>key-value<sp/>pairs<sp/>contained<sp/>in<sp/>`attrs`<sp/>are<sp/>set<sp/>as<sp/>attributes<sp/>of</highlight></codeline>
<codeline lineno="637"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>event<sp/>being<sp/>sent.<sp/>On<sp/>top<sp/>of<sp/>that,<sp/>the<sp/>`uid`<sp/>and<sp/>`oid`<sp/>attributes<sp/>are</highlight></codeline>
<codeline lineno="638"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>also<sp/>added,<sp/>carrying<sp/>the<sp/>uid<sp/>and<sp/>oid<sp/>of<sp/>the<sp/>current<sp/>DROP,<sp/>respectively.</highlight></codeline>
<codeline lineno="639"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.oid</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;uid&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.uid</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;session_id&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self._dlg_session.sessionId<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._dlg_session<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.name</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;lg_key&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.lg_key</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._fireEvent(eventType,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1afd126d88466822cfcb91491957f97a94" kindref="member">phase</ref>(self):</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="650"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>DROP&apos;s<sp/>phase.<sp/>The<sp/>phase<sp/>indicates<sp/>the<sp/>resilience<sp/>of<sp/>a<sp/>DROP.</highlight></codeline>
<codeline lineno="651"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._phase</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>@phase.setter</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1afd126d88466822cfcb91491957f97a94" kindref="member">phase</ref>(self,<sp/>phase):</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._phase<sp/>=<sp/>phase</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">targetPhase(self):</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._targetPhase</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">expirationDate(self):</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._expirationDate</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">expireAfterUse(self):</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._expireAfterUse</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a73ca5367803a078c6bd188b12a807e30" kindref="member">size</ref>(self):</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="673"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>size<sp/>of<sp/>the<sp/>data<sp/>pointed<sp/>by<sp/>this<sp/>DROP.<sp/>Its<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="674"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>automatically<sp/>calculated<sp/>if<sp/>the<sp/>data<sp/>was<sp/>actually<sp/>written<sp/>through<sp/>this</highlight></codeline>
<codeline lineno="675"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROP<sp/>(using<sp/>the<sp/>`self.write()`<sp/>method<sp/>directly<sp/>or<sp/>indirectly).<sp/>In</highlight></codeline>
<codeline lineno="676"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>case<sp/>that<sp/>the<sp/>data<sp/>has<sp/>been<sp/>externally<sp/>written,<sp/>the<sp/>size<sp/>can<sp/>be<sp/>set</highlight></codeline>
<codeline lineno="677"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>externally<sp/>after<sp/>the<sp/>DROP<sp/>has<sp/>been<sp/>moved<sp/>to<sp/>COMPLETED<sp/>or<sp/>beyond.</highlight></codeline>
<codeline lineno="678"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._size</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>@size.setter</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a73ca5367803a078c6bd188b12a807e30" kindref="member">size</ref>(self,<sp/>size):</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._size<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;The<sp/>size<sp/>of<sp/>DROP<sp/>%s<sp/>is<sp/>already<sp/>calculated,<sp/>cannot<sp/>overwrite<sp/>with<sp/>new<sp/>value&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self))</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.status<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[DROPStates.INITIALIZED,<sp/>DROPStates.WRITING]:</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;DROP<sp/>%s<sp/>is<sp/>still<sp/>not<sp/>fully<sp/>written,<sp/>cannot<sp/>manually<sp/>set<sp/>a<sp/>size<sp/>yet&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self))</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._size<sp/>=<sp/>size</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1aea745d71a1ec688ebd66594163b38f4a" kindref="member">precious</ref>(self):</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="692"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Whether<sp/>this<sp/>DROP<sp/>should<sp/>be<sp/>considered<sp/>as<sp/>&apos;precious&apos;<sp/>or<sp/>not</highlight></codeline>
<codeline lineno="693"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._precious</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">status(self):</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="699"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>current<sp/>status<sp/>of<sp/>this<sp/>DROP.</highlight></codeline>
<codeline lineno="700"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self._statusLock:</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._status</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>@status.setter</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">status(self,<sp/>value):</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self._statusLock:</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>we<sp/>are<sp/>already<sp/>in<sp/>the<sp/>state<sp/>that<sp/>is<sp/>requested<sp/>then<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value<sp/>==<sp/>self._status:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._status<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._fire(</highlight><highlight class="stringliteral">&apos;status&apos;</highlight><highlight class="normal">,<sp/>status<sp/>=<sp/>value)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1ad9d0bc15a81c68c012814e9f3ed2c72f" kindref="member">parent</ref>(self):</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="717"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>DROP<sp/>that<sp/>acts<sp/>as<sp/>the<sp/>parent<sp/>of<sp/>the<sp/>current<sp/>one.<sp/>This</highlight></codeline>
<codeline lineno="718"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent/child<sp/>relationship<sp/>is<sp/>created<sp/>by<sp/>ContainerDROPs,<sp/>which<sp/>are</highlight></codeline>
<codeline lineno="719"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>specific<sp/>kind<sp/>of<sp/>DROP.</highlight></codeline>
<codeline lineno="720"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._parent</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>@parent.setter</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1ad9d0bc15a81c68c012814e9f3ed2c72f" kindref="member">parent</ref>(self,<sp/>parent):</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._parent<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>parent:</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&quot;A<sp/>parent<sp/>is<sp/>already<sp/>set<sp/>in<sp/>%r,<sp/>overwriting<sp/>with<sp/>new<sp/>value&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self,))</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>parent:</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevParent<sp/>=<sp/>self._parent</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._parent<sp/>=<sp/>parent<sp/></highlight><highlight class="comment">#<sp/>a<sp/>parent<sp/>is<sp/>a<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(parent,<sp/></highlight><highlight class="stringliteral">&apos;addChild&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>parent.children:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.addChild(self)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._parent<sp/>=<sp/>prevParent</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1adff042449732940420c84ddecb3f6476" kindref="member">get_consumers_nodes</ref>(self):</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="739"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gets<sp/>the<sp/>physical<sp/>node<sp/>address(s)<sp/>of<sp/>the<sp/>consumer<sp/>of<sp/>this<sp/>drop.</highlight></codeline>
<codeline lineno="740"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[cons.node<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cons<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._consumers]<sp/>+\</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cons.node<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cons<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._streamingConsumers]</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1af33a4f83e7e131397f87dd883b02ef81" kindref="member">consumers</ref>(self):</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="747"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>of<sp/>&apos;normal&apos;<sp/>consumers<sp/>held<sp/>by<sp/>this<sp/>DROP.</highlight></codeline>
<codeline lineno="748"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="749"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:see:<sp/>`self.addConsumer()`</highlight></codeline>
<codeline lineno="750"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._consumers[:]</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a336a527084db32aa25df94d6bcc4b887" kindref="member">addConsumer</ref>(self,<sp/>consumer,<sp/>back=True):</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="756"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adds<sp/>a<sp/>consumer<sp/>to<sp/>this<sp/>DROP.</highlight></codeline>
<codeline lineno="757"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="758"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Consumers<sp/>are<sp/>normally<sp/>(but<sp/>not<sp/>necessarily)<sp/>AppDROPs<sp/>that<sp/>get</highlight></codeline>
<codeline lineno="759"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notified<sp/>when<sp/>this<sp/>DROP<sp/>moves<sp/>into<sp/>the<sp/>COMPLETED<sp/>or<sp/>ERROR<sp/>states.</highlight></codeline>
<codeline lineno="760"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>done<sp/>by<sp/>firing<sp/>an<sp/>event<sp/>of<sp/>type<sp/>`dropCompleted`<sp/>to<sp/>which<sp/>the</highlight></codeline>
<codeline lineno="761"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consumer<sp/>subscribes<sp/>to.</highlight></codeline>
<codeline lineno="762"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="763"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>one<sp/>of<sp/>the<sp/>key<sp/>mechanisms<sp/>by<sp/>which<sp/>the<sp/>DROP<sp/>graph<sp/>is</highlight></codeline>
<codeline lineno="764"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>executed<sp/>automatically.<sp/>If<sp/>AppDROP<sp/>B<sp/>consumes<sp/>DROP<sp/>A,<sp/>then</highlight></codeline>
<codeline lineno="765"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>soon<sp/>as<sp/>A<sp/>transitions<sp/>to<sp/>COMPLETED<sp/>B<sp/>will<sp/>be<sp/>notified<sp/>and<sp/>will</highlight></codeline>
<codeline lineno="766"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probably<sp/>start<sp/>its<sp/>execution.</highlight></codeline>
<codeline lineno="767"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>An<sp/>object<sp/>cannot<sp/>be<sp/>a<sp/>normal<sp/>and<sp/>streaming<sp/>consumer<sp/>at<sp/>the<sp/>same<sp/>time,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>see<sp/>the<sp/>comment<sp/>in<sp/>the<sp/>__init__<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cuid<sp/>=<sp/>consumer.uid</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cuid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._streamingConsumers_uids:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidRelationshipException(DROPRel(consumer,<sp/>DROPLinkType.CONSUMER,<sp/>self),</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Consumer<sp/>already<sp/>registered<sp/>as<sp/>a<sp/>streaming<sp/>consumer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>if<sp/>not<sp/>already<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>reverse<sp/>reference<sp/>too<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cuid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._consumers_uids:</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Adding<sp/>new<sp/>consumer<sp/>%r<sp/>to<sp/>%r&apos;</highlight><highlight class="normal">,<sp/>consumer,<sp/>self)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._consumers.append(consumer)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Subscribe<sp/>the<sp/>consumer<sp/>to<sp/>events<sp/>sent<sp/>when<sp/>this<sp/>DROP<sp/>moves<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>COMPLETED.<sp/>This<sp/>way<sp/>the<sp/>consumer<sp/>will<sp/>be<sp/>notified<sp/>that<sp/>its<sp/>input<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>finished.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>only<sp/>happens<sp/>if<sp/>this<sp/>DROP&apos;s<sp/>execution<sp/>mode<sp/>is<sp/>&apos;DROP&apos;;<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>an<sp/>external<sp/>entity<sp/>will<sp/>trigger<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>consumer<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>right<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.executionMode<sp/>==<sp/>ExecutionMode.DROP:</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.subscribe(consumer,<sp/></highlight><highlight class="stringliteral">&apos;dropCompleted&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Automatic<sp/>back-reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>back<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>hasattr(consumer,<sp/></highlight><highlight class="stringliteral">&apos;addInput&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Adding<sp/>back<sp/>%r<sp/>as<sp/>input<sp/>of<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>self,<sp/>consumer)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consumer.addInput(self,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a655348df5e0535ae636cd4a09ac8d106" kindref="member">producers</ref>(self):</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="800"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>of<sp/>producers<sp/>that<sp/>write<sp/>to<sp/>this<sp/>DROP</highlight></codeline>
<codeline lineno="801"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="802"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:see:<sp/>`self.addProducer()`</highlight></codeline>
<codeline lineno="803"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._producers[:]</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a7a56e877b44230134691f95a3721e07c" kindref="member">addProducer</ref>(self,<sp/>producer,<sp/>back=True):</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="809"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adds<sp/>a<sp/>producer<sp/>to<sp/>this<sp/>DROP.</highlight></codeline>
<codeline lineno="810"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="811"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Producers<sp/>are<sp/>AppDROPs<sp/>that<sp/>write<sp/>into<sp/>this<sp/>DROP;<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="812"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producers&apos;<sp/>point<sp/>of<sp/>view,<sp/>this<sp/>DROP<sp/>is<sp/>one<sp/>of<sp/>its<sp/>many<sp/>outputs.</highlight></codeline>
<codeline lineno="813"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="814"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>When<sp/>a<sp/>producer<sp/>has<sp/>finished<sp/>its<sp/>execution,<sp/>this<sp/>DROP<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="815"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notified<sp/>via<sp/>the<sp/>self.producerFinished()<sp/>method.</highlight></codeline>
<codeline lineno="816"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Don&apos;t<sp/>add<sp/>twice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puid<sp/>=<sp/>producer.uid</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>puid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._producers_uids:</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._producers.append(producer)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Automatic<sp/>back-reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>back<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>hasattr(producer,<sp/></highlight><highlight class="stringliteral">&apos;addOutput&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer.addOutput(self,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1ac051ffbbfc5a031337a50addb9d62be5" kindref="member">handleEvent</ref>(self,<sp/>e):</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="832"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles<sp/>the<sp/>arrival<sp/>of<sp/>a<sp/>new<sp/>event.<sp/>Events<sp/>are<sp/>delivered<sp/>from<sp/>those</highlight></codeline>
<codeline lineno="833"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects<sp/>this<sp/>DROP<sp/>is<sp/>subscribed<sp/>to.</highlight></codeline>
<codeline lineno="834"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>e.type<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;producerFinished&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.producerFinished(e.uid,<sp/>e.status)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a06960c31442c07efd862382078f8ac96" kindref="member">producerFinished</ref>(self,<sp/>uid,<sp/>drop_state):</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="841"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>called<sp/>each<sp/>time<sp/>one<sp/>of<sp/>the<sp/>producers<sp/>of<sp/>this<sp/>DROP<sp/>finishes</highlight></codeline>
<codeline lineno="842"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>its<sp/>execution.<sp/>Once<sp/>all<sp/>producers<sp/>have<sp/>finished<sp/>this<sp/>DROP<sp/>moves<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="843"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPLETED<sp/>state<sp/>(or<sp/>to<sp/>ERROR<sp/>if<sp/>one<sp/>of<sp/>the<sp/>producers<sp/>is<sp/>on<sp/>the<sp/>ERROR</highlight></codeline>
<codeline lineno="844"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state).</highlight></codeline>
<codeline lineno="845"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="846"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>one<sp/>of<sp/>the<sp/>key<sp/>mechanisms<sp/>through<sp/>which<sp/>the<sp/>execution<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="847"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROP<sp/>graph<sp/>is<sp/>accomplished.<sp/>If<sp/>AppDROP<sp/>A<sp/>produces<sp/>DROP</highlight></codeline>
<codeline lineno="848"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B,<sp/>as<sp/>soon<sp/>as<sp/>A<sp/>finishes<sp/>its<sp/>execution<sp/>B<sp/>will<sp/>be<sp/>notified<sp/>and<sp/>will<sp/>move</highlight></codeline>
<codeline lineno="849"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itself<sp/>to<sp/>COMPLETED.</highlight></codeline>
<codeline lineno="850"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finished<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self._finishedProducersLock:</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._finishedProducers.append(drop_state)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFinished<sp/>=<sp/>len(self._finishedProducers)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nProd<sp/>=<sp/>len(self._producers)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nFinished<sp/>&gt;<sp/>nProd:</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;More<sp/>producers<sp/>finished<sp/>that<sp/>registered<sp/>in<sp/>DROP<sp/>%r:<sp/>%d<sp/>&gt;<sp/>%d&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self,<sp/>nFinished,<sp/>nProd))</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>nFinished<sp/>==<sp/>nProd:</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finished<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>finished:</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;All<sp/>producers<sp/>finished<sp/>for<sp/>DROP<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>self)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>decided<sp/>that<sp/>if<sp/>any<sp/>producer<sp/>fails<sp/>then<sp/>fail<sp/>the<sp/>data<sp/>drop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>DROPStates.ERROR<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._finishedProducers:</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.setError()</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.setCompleted()</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a7da445287b1a0180d7f5e736087cfe4e" kindref="member">streamingConsumers</ref>(self):</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="875"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>of<sp/>&apos;streaming&apos;<sp/>consumers<sp/>held<sp/>by<sp/>this<sp/>DROP.</highlight></codeline>
<codeline lineno="876"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="877"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:see:<sp/>`self.addStreamingConsumer()`</highlight></codeline>
<codeline lineno="878"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._streamingConsumers[:]</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a88102924c2c5a1da2ccbaa80b322f57a" kindref="member">addStreamingConsumer</ref>(self,<sp/>streamingConsumer,<sp/>back=True):</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="884"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adds<sp/>a<sp/>streaming<sp/>consumer<sp/>to<sp/>this<sp/>DROP.</highlight></codeline>
<codeline lineno="885"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="886"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Streaming<sp/>consumers<sp/>are<sp/>AppDROPs<sp/>that<sp/>receive<sp/>the<sp/>data<sp/>written</highlight></codeline>
<codeline lineno="887"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>into<sp/>this<sp/>DROP<sp/>*as<sp/>it<sp/>gets<sp/>written*,<sp/>and<sp/>therefore<sp/>do<sp/>not<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="888"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait<sp/>until<sp/>this<sp/>DROP<sp/>has<sp/>been<sp/>moved<sp/>to<sp/>the<sp/>COMPLETED<sp/>state.</highlight></codeline>
<codeline lineno="889"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>An<sp/>object<sp/>cannot<sp/>be<sp/>a<sp/>normal<sp/>and<sp/>streaming<sp/>streamingConsumer<sp/>at<sp/>the<sp/>same<sp/>time,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>see<sp/>the<sp/>comment<sp/>in<sp/>the<sp/>__init__<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scuid<sp/>=<sp/>streamingConsumer.uid</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>scuid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._consumers_uids:</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidRelationshipException(DROPRel(streamingConsumer,<sp/>DROPLinkType.STREAMING_CONSUMER,<sp/>self),</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Consumer<sp/>is<sp/>already<sp/>registered<sp/>as<sp/>a<sp/>normal<sp/>consumer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>if<sp/>not<sp/>already<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>scuid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._streamingConsumers_uids:</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Adding<sp/>new<sp/>streaming<sp/>streaming<sp/>consumer<sp/>for<sp/>%r:<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%(self,<sp/>streamingConsumer))</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._streamingConsumers.append(streamingConsumer)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Automatic<sp/>back-reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>back<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>hasattr(streamingConsumer,<sp/></highlight><highlight class="stringliteral">&apos;addStreamingInput&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamingConsumer.addStreamingInput(self,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Subscribe<sp/>the<sp/>streaming<sp/>consumer<sp/>to<sp/>events<sp/>sent<sp/>when<sp/>this<sp/>DROP<sp/>moves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>COMPLETED.<sp/>This<sp/>way<sp/>the<sp/>streaming<sp/>consumer<sp/>will<sp/>be<sp/>notified<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>its<sp/>input<sp/>has<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>only<sp/>happens<sp/>if<sp/>this<sp/>DROP&apos;s<sp/>execution<sp/>mode<sp/>is<sp/>&apos;DROP&apos;;<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>an<sp/>external<sp/>entity<sp/>will<sp/>trigger<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>consumer<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>right<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.executionMode<sp/>==<sp/>ExecutionMode.DROP:</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.subscribe(streamingConsumer,<sp/></highlight><highlight class="stringliteral">&apos;dropCompleted&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a88a0294e80eed790697008c1d2698cdb" kindref="member">setError</ref>(self):</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="920"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Moves<sp/>this<sp/>DROP<sp/>to<sp/>the<sp/>ERROR<sp/>state.</highlight></codeline>
<codeline lineno="921"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.status<sp/>==<sp/>DROPStates.CANCELLED:</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._closeWriters()</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Moving<sp/>%r<sp/>to<sp/>ERROR&quot;</highlight><highlight class="normal">,<sp/>self)</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.status<sp/>=<sp/>DROPStates.ERROR</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Signal<sp/>our<sp/>subscribers<sp/>that<sp/>the<sp/>show<sp/>is<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._fire(</highlight><highlight class="stringliteral">&apos;dropCompleted&apos;</highlight><highlight class="normal">,<sp/>status=DROPStates.ERROR)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a03a21460c5a31316ae08aa9a860b6713" kindref="member">setCompleted</ref>(self):</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="937"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Moves<sp/>this<sp/>DROP<sp/>to<sp/>the<sp/>COMPLETED<sp/>state.<sp/>This<sp/>can<sp/>be<sp/>used<sp/>when<sp/>not<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="938"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/>data<sp/>has<sp/>arrived<sp/>for<sp/>a<sp/>given<sp/>DROP,<sp/>but<sp/>it<sp/>should<sp/>still<sp/>be<sp/>moved</highlight></codeline>
<codeline lineno="939"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>COMPLETED,<sp/>or<sp/>when<sp/>the<sp/>expected<sp/>amount<sp/>of<sp/>data<sp/>held<sp/>by<sp/>a<sp/>DROP</highlight></codeline>
<codeline lineno="940"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>not<sp/>known<sp/>in<sp/>advanced.</highlight></codeline>
<codeline lineno="941"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>self.status</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>status<sp/>==<sp/>DROPStates.CANCELLED:</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>status<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[DROPStates.INITIALIZED,<sp/>DROPStates.WRITING]:</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;%r<sp/>not<sp/>in<sp/>INITIALIZED<sp/>or<sp/>WRITING<sp/>state<sp/>(%s),<sp/>cannot<sp/>setComplete()&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self,<sp/>self.status))</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._closeWriters()</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Moving<sp/>%r<sp/>to<sp/>COMPLETED&quot;</highlight><highlight class="normal">,<sp/>self)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.status<sp/>=<sp/>DROPStates.COMPLETED</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Signal<sp/>our<sp/>subscribers<sp/>that<sp/>the<sp/>show<sp/>is<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._fire(</highlight><highlight class="stringliteral">&apos;dropCompleted&apos;</highlight><highlight class="normal">,<sp/>status=DROPStates.COMPLETED)</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1a7f63bfd98bd257ffe506d6f1baec5db5" kindref="member">isCompleted</ref>(self):</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="958"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Checks<sp/>whether<sp/>this<sp/>DROP<sp/>is<sp/>currently<sp/>in<sp/>the<sp/>COMPLETED<sp/>state<sp/>or<sp/>not</highlight></codeline>
<codeline lineno="959"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Mind<sp/>you<sp/>we&apos;re<sp/>not<sp/>accessing<sp/>_status,<sp/>but<sp/>status.<sp/>This<sp/>way<sp/>we<sp/>use<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>lock<sp/>in<sp/>status()<sp/>to<sp/>access<sp/>_status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(self.status<sp/>==<sp/>DROPStates.COMPLETED)</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AbstractDROP_1ab00c209f2107d23020fe73e7842e957c" kindref="member">cancel</ref>(self):</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Moves<sp/>this<sp/>drop<sp/>to<sp/>the<sp/>CANCELLED<sp/>state<sp/>closing<sp/>any<sp/>writers<sp/>we<sp/>opened&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._closeWriters()</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.status<sp/>=<sp/>DROPStates.CANCELLED</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">node(self):</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._node</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dataIsland(self):</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._dataIsland</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977" refid="classdlg_1_1drop_1_1PathBasedDrop" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1PathBasedDrop" kindref="compound">PathBasedDrop</ref>(object):</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Base<sp/>class<sp/>for<sp/>data<sp/>drops<sp/>that<sp/>handle<sp/>paths<sp/>(i.e.,<sp/>file<sp/>and<sp/>directory<sp/>drops)&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a45cab0abfd3332a13f87c8801cf85c55" kindref="member">_path</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathBasedDrop.initialize(self,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_dir(self,<sp/>dirname):</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isabs(dirname):</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dirname</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dirname<sp/>will<sp/>be<sp/>based<sp/>on<sp/>the<sp/>current<sp/>working<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>we<sp/>have<sp/>a<sp/>session,<sp/>it<sp/>goes<sp/>into<sp/>the<sp/>path<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(most<sp/>times<sp/>we<sp/>should<sp/>have<sp/>a<sp/>session<sp/>BTW,<sp/>we<sp/>should<sp/>expect<sp/>*not*<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>have<sp/>one<sp/>only<sp/>during<sp/>testing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._dlg_session:</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts.append(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts.append(self._dlg_session.sessionId)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts.append(</highlight><highlight class="stringliteral">&apos;/tmp/daliuge_tfiles&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dirname:</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts.append(dirname)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the_dir<sp/>=<sp/>os.path.abspath(os.path.normpath(os.path.join(*parts)))</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDirIfMissing(the_dir)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>the_dir</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">path(self):</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a45cab0abfd3332a13f87c8801cf85c55" kindref="member">_path</ref></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010" refid="classdlg_1_1drop_1_1FileDROP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1FileDROP" kindref="compound">FileDROP</ref>(<ref refid="classdlg_1_1drop_1_1AbstractDROP" kindref="compound">AbstractDROP</ref>,<sp/><ref refid="classdlg_1_1drop_1_1PathBasedDrop" kindref="compound">PathBasedDrop</ref>):</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1012"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>DROP<sp/>that<sp/>points<sp/>to<sp/>data<sp/>stored<sp/>in<sp/>a<sp/>mounted<sp/>filesystem.</highlight></codeline>
<codeline lineno="1013"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1014"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Users<sp/>can<sp/>(but<sp/>usually<sp/>don&apos;t<sp/>need<sp/>to)<sp/>specify<sp/>both<sp/>a<sp/>`filepath`<sp/>and<sp/>a</highlight></codeline>
<codeline lineno="1015"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>`dirname`<sp/>parameter<sp/>for<sp/>each<sp/>FileDrop.<sp/>The<sp/>combination<sp/>of<sp/>these<sp/>two<sp/>parameters</highlight></codeline>
<codeline lineno="1016"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>will<sp/>determine<sp/>the<sp/>final<sp/>location<sp/>of<sp/>the<sp/>file<sp/>backed<sp/>up<sp/>by<sp/>this<sp/>drop<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="1017"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>underlying<sp/>filesystem.<sp/>When<sp/>no<sp/>``filepath``<sp/>is<sp/>provided,<sp/>the<sp/>drop&apos;s<sp/>UID<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1018"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>used<sp/>as<sp/>a<sp/>filename.<sp/>When<sp/>a<sp/>relative<sp/>filepath<sp/>is<sp/>provided,<sp/>it<sp/>is<sp/>relative<sp/>to</highlight></codeline>
<codeline lineno="1019"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``dirname``.<sp/>When<sp/>an<sp/>absolute<sp/>``filepath``<sp/>is<sp/>given,<sp/>it<sp/>is<sp/>used<sp/>as-is.</highlight></codeline>
<codeline lineno="1020"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>When<sp/>a<sp/>relative<sp/>``dirname``<sp/>is<sp/>provided,<sp/>it<sp/>is<sp/>relative<sp/>to<sp/>the<sp/>base<sp/>directory</highlight></codeline>
<codeline lineno="1021"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>currently<sp/>running<sp/>session<sp/>(i.e.,<sp/>a<sp/>directory<sp/>with<sp/>the<sp/>session<sp/>ID<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="1022"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>name,<sp/>placed<sp/>within<sp/>the<sp/>currently<sp/>working<sp/>directory<sp/>of<sp/>the<sp/>Node<sp/>Manager</highlight></codeline>
<codeline lineno="1023"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>hosting<sp/>that<sp/>session).<sp/>If<sp/>``dirname``<sp/>is<sp/>absolute,<sp/>it<sp/>is<sp/>used<sp/>as-is.</highlight></codeline>
<codeline lineno="1024"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1025"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>some<sp/>cases<sp/>drops<sp/>are<sp/>created<sp/>**outside**<sp/>the<sp/>context<sp/>of<sp/>a<sp/>session,<sp/>most</highlight></codeline>
<codeline lineno="1026"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>notably<sp/>during<sp/>unit<sp/>tests.<sp/>In<sp/>these<sp/>cases<sp/>the<sp/>base<sp/>directory<sp/>is<sp/>a<sp/>fixed</highlight></codeline>
<codeline lineno="1027"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>location<sp/>under<sp/>``/tmp``.</highlight></codeline>
<codeline lineno="1028"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1029"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>following<sp/>table<sp/>summarizes<sp/>the<sp/>calculation<sp/>of<sp/>the<sp/>final<sp/>path<sp/>used<sp/>by</highlight></codeline>
<codeline lineno="1030"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>``FileDrop``<sp/>class<sp/>depending<sp/>on<sp/>its<sp/>parameters:</highlight></codeline>
<codeline lineno="1031"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1032"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>============<sp/>=====================<sp/>=====================<sp/>==========</highlight></codeline>
<codeline lineno="1033"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filepath</highlight></codeline>
<codeline lineno="1034"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>------------<sp/>------------------------------------------------------</highlight></codeline>
<codeline lineno="1035"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dirname<sp/><sp/><sp/><sp/><sp/><sp/>empty<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relative<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absolute</highlight></codeline>
<codeline lineno="1036"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>============<sp/>=====================<sp/>=====================<sp/>==========</highlight></codeline>
<codeline lineno="1037"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**empty**<sp/><sp/><sp/><sp/>/``$B``/``$u``<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/``$B``/``$f``<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/``$f``</highlight></codeline>
<codeline lineno="1038"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**relative**<sp/>/``$B``/``$d``/``$u``<sp/>/``$B``/``$d``/``$f``<sp/>**ERROR**</highlight></codeline>
<codeline lineno="1039"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**absolute**<sp/>/``$d``/``$u``<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/``$d``/``$f``<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**ERROR**</highlight></codeline>
<codeline lineno="1040"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>============<sp/>=====================<sp/>=====================<sp/>==========</highlight></codeline>
<codeline lineno="1041"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1042"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>the<sp/>table,<sp/>``$f``<sp/>is<sp/>the<sp/>value<sp/>of<sp/>``filepath``,<sp/>``$d``<sp/>is<sp/>the<sp/>value<sp/>of</highlight></codeline>
<codeline lineno="1043"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``dirname``,<sp/>``$u``<sp/>is<sp/>the<sp/>drop&apos;s<sp/>UID<sp/>and<sp/>``$B``<sp/>is<sp/>the<sp/>base<sp/>directory<sp/>for</highlight></codeline>
<codeline lineno="1044"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this<sp/>drop&apos;s<sp/>session,<sp/>namelly<sp/>``/the/cwd/$session_id``.</highlight></codeline>
<codeline lineno="1045"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>filepath<sp/>=<sp/>dlg_string_param(</highlight><highlight class="stringliteral">&apos;filepath&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>dirname<sp/>=<sp/>dlg_string_param(</highlight><highlight class="stringliteral">&apos;dirname&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>delete_parent_directory<sp/>=<sp/>dlg_bool_param(</highlight><highlight class="stringliteral">&apos;delete_parent_directory&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>check_filepath_exists<sp/>=<sp/>dlg_bool_param(</highlight><highlight class="stringliteral">&apos;check_filepath_exists&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">sanitize_paths(self,<sp/>filepath,<sp/>dirname):</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>filepath<sp/>has<sp/>been<sp/>given,<sp/>there&apos;s<sp/>nothing<sp/>to<sp/>sanitize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>filepath:</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filepath,<sp/>dirname</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>All<sp/>is<sp/>good,<sp/>return<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filepath_b<sp/>=<sp/>os.path.basename(filepath)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>filepath_b<sp/>==<sp/>filepath:</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filepath,<sp/>dirname</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>the<sp/>dirname<sp/>from<sp/>filepath<sp/>and<sp/>append<sp/>it<sp/>to<sp/>dirname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filepath_d<sp/>=<sp/>os.path.dirname(filepath)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dirname:</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filepath_d<sp/>=<sp/>os.path.join(dirname,<sp/>filepath_d)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filepath_b,<sp/>filepath_d</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>non_fname_chars<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&apos;:|%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>os.sep)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1FileDROP_1a1a756007df271f58bd356d574a8043fa" kindref="member">initialize</ref>(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1073"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FileDROP-specific<sp/>initialization.</highlight></codeline>
<codeline lineno="1074"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>filepath,<sp/>dirpath<sp/>the<sp/>two<sp/>pieces<sp/>of<sp/>information<sp/>we<sp/>offer<sp/>users<sp/>to<sp/>tweak</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>These<sp/>are<sp/>very<sp/>intermingled<sp/>but<sp/>are<sp/>not<sp/>exactly<sp/>the<sp/>same,<sp/>see<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Duh!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isabs(self.<ref refid="classdlg_1_1drop_1_1FileDROP_1a63e707a8cf08a3a9fe87c9ee69d72f33" kindref="member">filepath</ref>)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1FileDROP_1a6ff3ff0525af496c244e033e33112d98" kindref="member">dirname</ref>:</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&apos;An<sp/>absolute<sp/>filepath<sp/>does<sp/>not<sp/>allow<sp/>a<sp/>dirname<sp/>to<sp/>be<sp/>specified&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sanitize<sp/>filepath/dirname<sp/>into<sp/>proper<sp/>directories-only<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>filename-only<sp/>components<sp/>(e.g.,<sp/>dirname=&apos;lala&apos;<sp/>and<sp/>filename=&apos;1/2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>results<sp/>in<sp/>dirname=&apos;lala/1&apos;<sp/>and<sp/>filename=&apos;2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filepath,<sp/>dirname<sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1FileDROP_1ae03a8441b8a3d525236d8cf51c1aad1e" kindref="member">sanitize_paths</ref>(self.<ref refid="classdlg_1_1drop_1_1FileDROP_1a63e707a8cf08a3a9fe87c9ee69d72f33" kindref="member">filepath</ref>,<sp/>self.<ref refid="classdlg_1_1drop_1_1FileDROP_1a6ff3ff0525af496c244e033e33112d98" kindref="member">dirname</ref>)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>later<sp/>check<sp/>if<sp/>the<sp/>file<sp/>exists,<sp/>but<sp/>only<sp/>if<sp/>the<sp/>user<sp/>has<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>an<sp/>absolute<sp/>dirname/filepath<sp/>(otherwise<sp/>it<sp/>doesn&apos;t<sp/>make<sp/>sense,<sp/>since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>create<sp/>our<sp/>own<sp/>filenames/dirnames<sp/>dynamically<sp/>as<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isabs(dirname)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>filepath:</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check<sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1FileDROP_1a9e4ac6c3a9253729d4d361a542948ecb" kindref="member">check_filepath_exists</ref></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Default<sp/>filepath<sp/>to<sp/>drop<sp/>UID<sp/>and<sp/>dirname<sp/>to<sp/>per-session<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>filepath:</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filepath<sp/>=<sp/>self.non_fname_chars.sub(</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a52f23b12db48660c44e6c052b9367d67" kindref="member">uid</ref>)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirname<sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1af288584fab37b04a738576fc85f17d05" kindref="member">get_dir</ref>(dirname)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1FileDROP_1a8807dc587354ef6a4b4c31641caf7ba7" kindref="member">_root</ref><sp/>=<sp/>dirname</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a45cab0abfd3332a13f87c8801cf85c55" kindref="member">_path</ref><sp/>=<sp/>os.path.join(dirname,<sp/>filepath)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>check<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isfile(self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a45cab0abfd3332a13f87c8801cf85c55" kindref="member">_path</ref>):</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&apos;File<sp/>does<sp/>not<sp/>exist<sp/>or<sp/>is<sp/>not<sp/>a<sp/>file:<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a45cab0abfd3332a13f87c8801cf85c55" kindref="member">_path</ref>)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a3d56a5056176152acccb98b9679804f5" kindref="member">_wio</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getIO(self):</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FileIO(self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a45cab0abfd3332a13f87c8801cf85c55" kindref="member">_path</ref>)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">delete(self):</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AbstractDROP.delete(self)</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1FileDROP_1ab0f2ebd9c781e32ff3b778ed11bf0c7b" kindref="member">delete_parent_directory</ref>:</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.rmdir(self.<ref refid="classdlg_1_1drop_1_1FileDROP_1a8807dc587354ef6a4b4c31641caf7ba7" kindref="member">_root</ref>)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>OSError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Silently<sp/>ignore<sp/>&quot;Directory<sp/>not<sp/>empty&quot;<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>e.errno<sp/>!=<sp/>errno.ENOTEMPTY:</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dataURL(self):</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostname<sp/>=<sp/>os.uname()[1]<sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>change<sp/>when<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;file://&quot;</highlight><highlight class="normal"><sp/>+<sp/>hostname<sp/>+<sp/>self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a45cab0abfd3332a13f87c8801cf85c55" kindref="member">_path</ref></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125" refid="classdlg_1_1drop_1_1NgasDROP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1NgasDROP" kindref="compound">NgasDROP</ref>(<ref refid="classdlg_1_1drop_1_1AbstractDROP" kindref="compound">AbstractDROP</ref>):</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="1127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>DROP<sp/>that<sp/>points<sp/>to<sp/>data<sp/>stored<sp/>in<sp/>an<sp/>NGAS<sp/>server</highlight></codeline>
<codeline lineno="1128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>ngasSrv<sp/>=<sp/>dlg_string_param(</highlight><highlight class="stringliteral">&apos;ngasSrv&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;localhost&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>ngasPort<sp/>=<sp/>dlg_int_param(</highlight><highlight class="stringliteral">&apos;ngasPort&apos;</highlight><highlight class="normal">,<sp/>7777)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>ngasTimeout<sp/>=<sp/>dlg_int_param(</highlight><highlight class="stringliteral">&apos;ngasTimeout&apos;</highlight><highlight class="normal">,<sp/>2)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>ngasConnectTimeout<sp/>=<sp/>dlg_int_param(</highlight><highlight class="stringliteral">&apos;ngasConnectTimeout&apos;</highlight><highlight class="normal">,<sp/>2)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getIO(self):</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NgasIO(self.ngasSrv,<sp/>self.uid,<sp/>port=self.ngasPort,</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngasConnectTimeout=self.ngasConnectTimeout,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngasTimeout=self.ngasTimeout)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dataURL(self):</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ngas://%s:%d/%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.ngasSrv,<sp/>self.ngasPort,<sp/>self.uid)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147" refid="classdlg_1_1drop_1_1InMemoryDROP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1InMemoryDROP" kindref="compound">InMemoryDROP</ref>(<ref refid="classdlg_1_1drop_1_1AbstractDROP" kindref="compound">AbstractDROP</ref>):</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>DROP<sp/>that<sp/>points<sp/>data<sp/>stored<sp/>in<sp/>memory.</highlight></codeline>
<codeline lineno="1150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;pydata&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pydata<sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&apos;pydata&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(pydata,<sp/>six.string_types):</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pydata<sp/>=<sp/>six.b(pydata)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.append(base64.b64decode(pydata))</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1InMemoryDROP_1aa30f9a6056a140143a0d578f3b7c972e" kindref="member">_buf</ref><sp/>=<sp/>BytesIO(*args)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getIO(self):</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MemoryIO(self.<ref refid="classdlg_1_1drop_1_1InMemoryDROP_1aa30f9a6056a140143a0d578f3b7c972e" kindref="member">_buf</ref>)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dataURL(self):</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostname<sp/>=<sp/>os.uname()[1]</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;mem://%s/%d/%d&quot;</highlight><highlight class="normal"><sp/>%<sp/>(hostname,<sp/>os.getpid(),<sp/>id(self.<ref refid="classdlg_1_1drop_1_1InMemoryDROP_1aa30f9a6056a140143a0d578f3b7c972e" kindref="member">_buf</ref>))</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170" refid="classdlg_1_1drop_1_1NullDROP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1NullDROP" kindref="compound">NullDROP</ref>(<ref refid="classdlg_1_1drop_1_1AbstractDROP" kindref="compound">AbstractDROP</ref>):</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>DROP<sp/>that<sp/>doesn&apos;t<sp/>store<sp/>any<sp/>data.</highlight></codeline>
<codeline lineno="1173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getIO(self):</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NullIO()</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dataURL(self):</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;null://&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183" refid="classdlg_1_1drop_1_1RDBMSDrop" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1RDBMSDrop" kindref="compound">RDBMSDrop</ref>(<ref refid="classdlg_1_1drop_1_1AbstractDROP" kindref="compound">AbstractDROP</ref>):</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>Drop<sp/>that<sp/>stores<sp/>data<sp/>in<sp/>a<sp/>table<sp/>of<sp/>a<sp/>relational<sp/>database</highlight></codeline>
<codeline lineno="1186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>dbparams<sp/>=<sp/>dlg_dict_param(</highlight><highlight class="stringliteral">&apos;dbparams&apos;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AbstractDROP.initialize(self,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;dbmodule&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&apos;%r<sp/>needs<sp/>a<sp/>&quot;dbmodule&quot;<sp/>parameter&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self,))</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;dbtable&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&apos;%r<sp/>needs<sp/>a<sp/>&quot;dbtable&quot;<sp/>parameter&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self,))</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>DB-API<sp/>2.0<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbmodname<sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&apos;dbmodule&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1RDBMSDrop_1a5227aa45eb90194b11d1758c93463bb8" kindref="member">_db_drv</ref><sp/>=<sp/>importlib.import_module(dbmodname)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>table<sp/>this<sp/>Drop<sp/>points<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1RDBMSDrop_1aded023cda889f6e73bfb8f9b7addc2f0" kindref="member">_db_table</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&apos;dbtable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getIO(self):</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>Drop<sp/>cannot<sp/>be<sp/>accessed<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ErrorIO()</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_connection(self):</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contextlib.closing(self._db_drv.connect(**self.<ref refid="classdlg_1_1drop_1_1RDBMSDrop_1ad8eec1fc8e9745bdc246fcf22389f48d" kindref="member">dbparams</ref>))</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_cursor(self,<sp/>conn):</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contextlib.closing(conn.cursor())</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1RDBMSDrop_1a5344666c51e15f7416c9014c50be6772" kindref="member">insert</ref>(self,<sp/>vals):</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Inserts<sp/>the<sp/>values<sp/>contained<sp/>in<sp/>the<sp/>``vals``<sp/>dictionary<sp/>into<sp/>the</highlight></codeline>
<codeline lineno="1218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>underlying<sp/>table.<sp/>The<sp/>keys<sp/>of<sp/>``vals``<sp/>are<sp/>used<sp/>as<sp/>the<sp/>column<sp/>names.</highlight></codeline>
<codeline lineno="1219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.<ref refid="classdlg_1_1drop_1_1RDBMSDrop_1a41952a6fc123d389f3e78af2340661ea" kindref="member">_connection</ref>()<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>c:</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.<ref refid="classdlg_1_1drop_1_1RDBMSDrop_1acc7a8d84e37907f6451a0edd86b0735c" kindref="member">_cursor</ref>(c)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>cur:</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>vals<sp/>is<sp/>a<sp/>dictionary,<sp/>its<sp/>keys<sp/>are<sp/>the<sp/>column<sp/>names<sp/>and<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>values<sp/>are<sp/>the<sp/>values<sp/>to<sp/>insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>into<sp/>%s<sp/>(%s)<sp/>VALUES<sp/>(%s)&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classdlg_1_1drop_1_1RDBMSDrop_1aded023cda889f6e73bfb8f9b7addc2f0" kindref="member">_db_table</ref>,<sp/></highlight><highlight class="stringliteral">&apos;,&apos;</highlight><highlight class="normal">.join(vals.keys()),<sp/></highlight><highlight class="stringliteral">&apos;,&apos;</highlight><highlight class="normal">.join([</highlight><highlight class="stringliteral">&apos;{}&apos;</highlight><highlight class="normal">]*len(vals)))</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql,<sp/>vals<sp/>=<sp/>prepare_sql(sql,<sp/>self._db_drv.paramstyle,<sp/>list(vals.values()))</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Executing<sp/>SQL<sp/>with<sp/>parameters:<sp/>%s<sp/>/<sp/>%r&apos;</highlight><highlight class="normal">,<sp/>sql,<sp/>vals)</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur.execute(sql,<sp/>vals)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.commit()</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1RDBMSDrop_1a5c0f8528e3f6b33fdc1e686c93f07ca2" kindref="member">select</ref>(self,<sp/>columns=None,<sp/>condition=None,<sp/>vals=()):</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>selected<sp/>values<sp/>from<sp/>the<sp/>table.<sp/>Users<sp/>can<sp/>constrain<sp/>the</highlight></codeline>
<codeline lineno="1234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>set<sp/>by<sp/>specifying<sp/>a<sp/>list<sp/>of<sp/>``columns``<sp/>to<sp/>be<sp/>returned<sp/>(otherwise</highlight></codeline>
<codeline lineno="1235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>table<sp/>columns<sp/>are<sp/>returned)<sp/>and<sp/>a<sp/>``condition``<sp/>to<sp/>be<sp/>applied,</highlight></codeline>
<codeline lineno="1236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>which<sp/>case<sp/>a<sp/>list<sp/>of<sp/>``vals``<sp/>to<sp/>be<sp/>applied<sp/>as<sp/>query<sp/>parameters<sp/>can</highlight></codeline>
<codeline lineno="1237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>also<sp/>be<sp/>given.</highlight></codeline>
<codeline lineno="1238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.<ref refid="classdlg_1_1drop_1_1RDBMSDrop_1a41952a6fc123d389f3e78af2340661ea" kindref="member">_connection</ref>()<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>c:</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.<ref refid="classdlg_1_1drop_1_1RDBMSDrop_1acc7a8d84e37907f6451a0edd86b0735c" kindref="member">_cursor</ref>(c)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>cur:</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>up<sp/>SQL<sp/>with<sp/>optional<sp/>columns<sp/>and<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>columns<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;SELECT<sp/>%s<sp/>FROM<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(</highlight><highlight class="stringliteral">&apos;,&apos;</highlight><highlight class="normal">.join(columns),<sp/>self.<ref refid="classdlg_1_1drop_1_1RDBMSDrop_1aded023cda889f6e73bfb8f9b7addc2f0" kindref="member">_db_table</ref>,)]</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>condition:</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql.append(</highlight><highlight class="stringliteral">&quot;<sp/>WHERE<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql.append(condition)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Go,<sp/>go,<sp/>go!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql,<sp/>vals<sp/>=<sp/>prepare_sql(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">.join(sql),<sp/>self._db_drv.paramstyle,<sp/>vals)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Executing<sp/>SQL<sp/>with<sp/>parameters:<sp/>%s<sp/>/<sp/>%r&apos;</highlight><highlight class="normal">,<sp/>sql,<sp/>vals)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur.execute(sql,<sp/>vals)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cur.description:</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur.fetchall()</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dataURL(self):</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;rdbms://%s/%s/%r&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self._db_drv.__name__,<sp/>self.<ref refid="classdlg_1_1drop_1_1RDBMSDrop_1aded023cda889f6e73bfb8f9b7addc2f0" kindref="member">_db_table</ref>,<sp/>self._db_params)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262" refid="classdlg_1_1drop_1_1ContainerDROP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1ContainerDROP" kindref="compound">ContainerDROP</ref>(<ref refid="classdlg_1_1drop_1_1AbstractDROP" kindref="compound">AbstractDROP</ref>):</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>DROP<sp/>that<sp/>doesn&apos;t<sp/>directly<sp/>point<sp/>to<sp/>some<sp/>piece<sp/>of<sp/>data,<sp/>but<sp/>instead</highlight></codeline>
<codeline lineno="1265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>holds<sp/>references<sp/>to<sp/>other<sp/>DROPs<sp/>(its<sp/>children),<sp/>and<sp/>from<sp/>them<sp/>its<sp/>own</highlight></codeline>
<codeline lineno="1266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>internal<sp/>state<sp/>is<sp/>deduced.</highlight></codeline>
<codeline lineno="1267"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Because<sp/>of<sp/>its<sp/>nature,<sp/>ContainerDROPs<sp/>cannot<sp/>be<sp/>written<sp/>to<sp/>directly,</highlight></codeline>
<codeline lineno="1269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>likewise<sp/>they<sp/>cannot<sp/>be<sp/>read<sp/>from<sp/>directly.<sp/>One<sp/>instead<sp/>has<sp/>to<sp/>pay</highlight></codeline>
<codeline lineno="1270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>attention<sp/>to<sp/>its<sp/>&quot;children&quot;<sp/>DROPs<sp/>if<sp/>I/O<sp/>must<sp/>be<sp/>performed.</highlight></codeline>
<codeline lineno="1271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(ContainerDROP,<sp/>self).initialize(**kwargs)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1ContainerDROP_1ae146fbb1b9a2103886c7b2a703a0ad9a" kindref="member">_children</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>data-related<sp/>operations<sp/>should<sp/>actually<sp/>be<sp/>called<sp/>in<sp/>Container<sp/>DROPs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getIO(self):</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ErrorIO()</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dataURL(self):</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError()</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addChild(self,<sp/>child):</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Avoid<sp/>circular<sp/>dependencies<sp/>between<sp/>Containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>child<sp/>==<sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ad9d0bc15a81c68c012814e9f3ed2c72f" kindref="member">parent</ref>:</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidRelationshipException(DROPRel(child,<sp/>DROPLinkType.CHILD,<sp/>self),</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Circular<sp/>dependency<sp/>found&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Adding<sp/>new<sp/>child<sp/>for<sp/>%r:<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>self,<sp/>child)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._children.append(child)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child.parent<sp/>=<sp/>self</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">delete(self):</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>this<sp/>needs<sp/>more<sp/>thinking.<sp/>Probably<sp/>a<sp/>separate<sp/>method<sp/>to<sp/>perform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>recursive<sp/>deletion<sp/>will<sp/>be<sp/>needed,<sp/>while<sp/>this<sp/>delete<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>go<sp/>hand-to-hand<sp/>with<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>I/O<sp/>methods<sp/>above,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>are<sp/>currently<sp/>raise<sp/>a<sp/>NotImplementedError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1ContainerDROP_1ae146fbb1b9a2103886c7b2a703a0ad9a" kindref="member">_children</ref>:</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[c<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1ContainerDROP_1ae146fbb1b9a2103886c7b2a703a0ad9a" kindref="member">_children</ref><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c.exists()]:</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.delete()</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">expirationDate(self):</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1ContainerDROP_1ae146fbb1b9a2103886c7b2a703a0ad9a" kindref="member">_children</ref>:</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>heapq.nlargest(1,<sp/>[c.expirationDate<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1ContainerDROP_1ae146fbb1b9a2103886c7b2a703a0ad9a" kindref="member">_children</ref>])[0]</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1ac8c2d7b1a613144f5d5b147641a90dc8" kindref="member">_expirationDate</ref></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">children(self):</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1ContainerDROP_1ae146fbb1b9a2103886c7b2a703a0ad9a" kindref="member">_children</ref>[:]</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(self):</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1ContainerDROP_1ae146fbb1b9a2103886c7b2a703a0ad9a" kindref="member">_children</ref>:</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Or<sp/>should<sp/>it<sp/>be<sp/>all()?<sp/>Depends<sp/>on<sp/>what<sp/>the<sp/>exact<sp/>contract<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;exists&quot;<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>any([c.exists()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1ContainerDROP_1ae146fbb1b9a2103886c7b2a703a0ad9a" kindref="member">_children</ref>])</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325" refid="classdlg_1_1drop_1_1DirectoryContainer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1DirectoryContainer" kindref="compound">DirectoryContainer</ref>(<ref refid="classdlg_1_1drop_1_1PathBasedDrop" kindref="compound">PathBasedDrop</ref>,<sp/><ref refid="classdlg_1_1drop_1_1ContainerDROP" kindref="compound">ContainerDROP</ref>):</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>ContainerDROP<sp/>that<sp/>represents<sp/>a<sp/>filesystem<sp/>directory.<sp/>It<sp/>only<sp/>allows</highlight></codeline>
<codeline lineno="1328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>FileDROPs<sp/>and<sp/>DirectoryContainers<sp/>to<sp/>be<sp/>added<sp/>as<sp/>children.<sp/>Children</highlight></codeline>
<codeline lineno="1329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>can<sp/>only<sp/>be<sp/>added<sp/>if<sp/>they<sp/>are<sp/>placed<sp/>directly<sp/>within<sp/>the<sp/>directory</highlight></codeline>
<codeline lineno="1330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>represented<sp/>by<sp/>this<sp/>DirectoryContainer.</highlight></codeline>
<codeline lineno="1331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>check_exists<sp/>=<sp/>dlg_bool_param(</highlight><highlight class="stringliteral">&apos;check_exists&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContainerDROP.initialize(self,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;dirname&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&apos;DirectoryContainer<sp/>needs<sp/>a<sp/>&quot;dirname&quot;<sp/>parameter&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directory<sp/>=<sp/>kwargs[</highlight><highlight class="stringliteral">&apos;dirname&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1DirectoryContainer_1a12c4141cc52af1bdd7ffbe60fde3b17b" kindref="member">check_exists</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isdir(directory):</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&apos;%s<sp/>is<sp/>not<sp/>a<sp/>directory&apos;</highlight><highlight class="normal"><sp/>%<sp/>(directory))</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a45cab0abfd3332a13f87c8801cf85c55" kindref="member">_path</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1af288584fab37b04a738576fc85f17d05" kindref="member">get_dir</ref>(directory)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addChild(self,<sp/>child):</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(child,<sp/>(FileDROP,<sp/>DirectoryContainer)):</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>child.path</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.dirname(path)<sp/>!=<sp/>self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a7b13817eedf16551663b420eac31bf58" kindref="member">path</ref>:</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidRelationshipException(DROPRel(child,<sp/>DROPLinkType.CHILD,<sp/>self),</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Child<sp/>DROP<sp/>is<sp/>not<sp/>under<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a7b13817eedf16551663b420eac31bf58" kindref="member">path</ref>))</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContainerDROP.addChild(self,<sp/>child)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&apos;Child<sp/>DROP<sp/>is<sp/>not<sp/>of<sp/>type<sp/>FileDROP<sp/>or<sp/>DirectoryContainer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">delete(self):</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shutil.rmtree(self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a45cab0abfd3332a13f87c8801cf85c55" kindref="member">_path</ref>)</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(self):</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.isdir(self.<ref refid="classdlg_1_1drop_1_1PathBasedDrop_1a45cab0abfd3332a13f87c8801cf85c55" kindref="member">_path</ref>)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="comment">#===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="comment">#<sp/>AppDROP<sp/>classes<sp/>follow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="comment">#===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369" refid="classdlg_1_1drop_1_1AppDROP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AppDROP" kindref="compound">AppDROP</ref>(<ref refid="classdlg_1_1drop_1_1ContainerDROP" kindref="compound">ContainerDROP</ref>):</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="1372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>An<sp/>AppDROP<sp/>is<sp/>a<sp/>DROP<sp/>representing<sp/>an<sp/>application<sp/>that<sp/>reads<sp/>data</highlight></codeline>
<codeline lineno="1373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>from<sp/>one<sp/>or<sp/>more<sp/>DROPs<sp/>(its<sp/>inputs),<sp/>and<sp/>writes<sp/>data<sp/>onto<sp/>one<sp/>or<sp/>more</highlight></codeline>
<codeline lineno="1374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DROPs<sp/>(its<sp/>outputs).</highlight></codeline>
<codeline lineno="1375"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>AppDROPs<sp/>accept<sp/>two<sp/>different<sp/>kind<sp/>of<sp/>inputs:<sp/>&quot;normal&quot;<sp/>and<sp/>&quot;streaming&quot;</highlight></codeline>
<codeline lineno="1377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>inputs.<sp/>Normal<sp/>inputs<sp/>are<sp/>DROPs<sp/>that<sp/>must<sp/>be<sp/>on<sp/>the<sp/>COMPLETED<sp/>state</highlight></codeline>
<codeline lineno="1378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(and<sp/>therefore<sp/>their<sp/>data<sp/>must<sp/>be<sp/>fully<sp/>written)<sp/>before<sp/>this<sp/>application<sp/>is</highlight></codeline>
<codeline lineno="1379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>run,<sp/>while<sp/>streaming<sp/>inputs<sp/>are<sp/>DROPs<sp/>that<sp/>feed<sp/>chunks<sp/>of<sp/>data<sp/>into</highlight></codeline>
<codeline lineno="1380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this<sp/>application<sp/>as<sp/>the<sp/>data<sp/>gets<sp/>written<sp/>into<sp/>them.</highlight></codeline>
<codeline lineno="1381"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>contains<sp/>two<sp/>methods<sp/>that<sp/>should<sp/>be<sp/>overwritten<sp/>as<sp/>needed<sp/>by</highlight></codeline>
<codeline lineno="1383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>subclasses:<sp/>`dropCompleted`,<sp/>invoked<sp/>when<sp/>input<sp/>DROPs<sp/>move<sp/>to</highlight></codeline>
<codeline lineno="1384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>COMPLETED,<sp/>and<sp/>`dataWritten`,<sp/>invoked<sp/>with<sp/>the<sp/>data<sp/>coming<sp/>from<sp/>streaming</highlight></codeline>
<codeline lineno="1385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>inputs.</highlight></codeline>
<codeline lineno="1386"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>How<sp/>and<sp/>when<sp/>applications<sp/>are<sp/>executed<sp/>is<sp/>completely<sp/>up<sp/>to<sp/>the<sp/>user,<sp/>and<sp/>is</highlight></codeline>
<codeline lineno="1388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>not<sp/>enforced<sp/>by<sp/>this<sp/>base<sp/>class.<sp/>Some<sp/>applications<sp/>might<sp/>need<sp/>to<sp/>be<sp/>run<sp/>at</highlight></codeline>
<codeline lineno="1389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>`initialize`<sp/>time,<sp/>while<sp/>other<sp/>might<sp/>start<sp/>during<sp/>the<sp/>first<sp/>invocation<sp/>of</highlight></codeline>
<codeline lineno="1390"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>`dataWritten`.<sp/>A<sp/>common<sp/>scenario<sp/>anyway<sp/>is<sp/>to<sp/>start<sp/>an<sp/>application<sp/>only</highlight></codeline>
<codeline lineno="1391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>after<sp/>all<sp/>its<sp/>inputs<sp/>have<sp/>moved<sp/>to<sp/>COMPLETED<sp/>(implying<sp/>that<sp/>none<sp/>of<sp/>them<sp/>is</highlight></codeline>
<codeline lineno="1392"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>an<sp/>streaming<sp/>input);<sp/>for<sp/>these<sp/>cases<sp/>see<sp/>the<sp/>`BarrierAppDROP`.</highlight></codeline>
<codeline lineno="1393"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(AppDROP,<sp/>self).initialize(**kwargs)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Inputs<sp/>and<sp/>Outputs<sp/>are<sp/>the<sp/>DROPs<sp/>that<sp/>get<sp/>read<sp/>from<sp/>and<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>by<sp/>this<sp/>AppDROP,<sp/>respectively.<sp/>An<sp/>input<sp/>DROP<sp/>will<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>AppDROP<sp/>as<sp/>one<sp/>of<sp/>its<sp/>consumers,<sp/>while<sp/>an<sp/>output<sp/>DROP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>will<sp/>see<sp/>this<sp/>AppDROP<sp/>as<sp/>one<sp/>of<sp/>its<sp/>producers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Input<sp/>and<sp/>output<sp/>objects<sp/>are<sp/>later<sp/>referenced<sp/>by<sp/>their<sp/>*index*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(relative<sp/>to<sp/>the<sp/>order<sp/>in<sp/>which<sp/>they<sp/>were<sp/>added<sp/>to<sp/>this<sp/>object)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Therefore<sp/>we<sp/>use<sp/>an<sp/>ordered<sp/>dict<sp/>to<sp/>keep<sp/>the<sp/>insertion<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a49f1716d7ff5ef2e6897ec06d97ed075" kindref="member">_inputs</ref><sp/><sp/>=<sp/>collections.OrderedDict()</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a04b7cf283727b2eba84cdab48ebc35e7" kindref="member">_outputs</ref><sp/>=<sp/>collections.OrderedDict()</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Same<sp/>as<sp/>above,<sp/>only<sp/>that<sp/>these<sp/>correspond<sp/>to<sp/>the<sp/>&apos;streaming&apos;<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>of<sp/>the<sp/>consumers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a8d8258ba80685fba1fc41a71d0e5ebc3" kindref="member">_streamingInputs</ref><sp/><sp/>=<sp/>collections.OrderedDict()</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>An<sp/>AppDROP<sp/>has<sp/>a<sp/>second,<sp/>separate<sp/>state<sp/>machine<sp/>indicating<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>execution<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a7182feb3d22931bb9b604ab735054a31" kindref="member">_execStatus</ref><sp/>=<sp/>AppDROPStates.NOT_RUN</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addInput(self,<sp/>inputDrop,<sp/>back=True):</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>=<sp/>inputDrop.uid</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>uid<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a49f1716d7ff5ef2e6897ec06d97ed075" kindref="member">_inputs</ref>:</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a49f1716d7ff5ef2e6897ec06d97ed075" kindref="member">_inputs</ref>[uid]<sp/>=<sp/>inputDrop</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>back:</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputDrop.addConsumer(self,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AppDROP_1a4649d8e985d9bf54636d06b44237d1eb" kindref="member">inputs</ref>(self):</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1429"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>of<sp/>inputs<sp/>set<sp/>into<sp/>this<sp/>AppDROP</highlight></codeline>
<codeline lineno="1430"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list(self._inputs.values())</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addOutput(self,<sp/>outputDrop,<sp/>back=True):</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>outputDrop<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidRelationshipException(DROPRel(outputDrop,<sp/>DROPLinkType.OUTPUT,<sp/>self),</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Cannot<sp/>add<sp/>an<sp/>AppConsumer<sp/>as<sp/>its<sp/>own<sp/>output&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>=<sp/>outputDrop.uid</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>uid<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a04b7cf283727b2eba84cdab48ebc35e7" kindref="member">_outputs</ref>:</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a04b7cf283727b2eba84cdab48ebc35e7" kindref="member">_outputs</ref>[uid]<sp/>=<sp/>outputDrop</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>back:</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputDrop.addProducer(self,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Subscribe<sp/>the<sp/>output<sp/>DROP<sp/>to<sp/>events<sp/>sent<sp/>by<sp/>this<sp/>AppDROP<sp/>when<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>finishes<sp/>its<sp/>execution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.subscribe(outputDrop,<sp/></highlight><highlight class="stringliteral">&apos;producerFinished&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AppDROP_1a8c9786098dd9e31e83f8aff5598fe90a" kindref="member">outputs</ref>(self):</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1452"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>of<sp/>outputs<sp/>set<sp/>into<sp/>this<sp/>AppDROP</highlight></codeline>
<codeline lineno="1453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list(self._outputs.values())</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addStreamingInput(self,<sp/>streamingInputDrop,<sp/>back=True):</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>streamingInputDrop<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._streamingInputs.values():</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>=<sp/>streamingInputDrop.uid</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a8d8258ba80685fba1fc41a71d0e5ebc3" kindref="member">_streamingInputs</ref>[uid]<sp/>=<sp/>streamingInputDrop</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>back:</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamingInputDrop.addStreamingConsumer(self,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AppDROP_1a6d1706a7d03709c1a5eda8a6d6e29b7b" kindref="member">streamingInputs</ref>(self):</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1466"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>of<sp/>streaming<sp/>inputs<sp/>set<sp/>into<sp/>this<sp/>AppDROP</highlight></codeline>
<codeline lineno="1467"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list(self._streamingInputs.values())</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AppDROP_1aaa241d180524794218992367971b8ceb" kindref="member">handleEvent</ref>(self,<sp/>e):</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1472"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles<sp/>the<sp/>arrival<sp/>of<sp/>a<sp/>new<sp/>event.<sp/>Events<sp/>are<sp/>delivered<sp/>from<sp/>those</highlight></codeline>
<codeline lineno="1473"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects<sp/>this<sp/>DROP<sp/>is<sp/>subscribed<sp/>to.</highlight></codeline>
<codeline lineno="1474"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>e.type<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;dropCompleted&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a0d3096e50b966671f8fd544e886c9bb1" kindref="member">dropCompleted</ref>(e.uid,<sp/>e.status)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AppDROP_1a0d3096e50b966671f8fd544e886c9bb1" kindref="member">dropCompleted</ref>(self,<sp/>uid,<sp/>drop_state):</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1480"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Callback<sp/>invoked<sp/>when<sp/>the<sp/>DROP<sp/>with<sp/>UID<sp/>`uid`<sp/>(which<sp/>is<sp/>either<sp/>a</highlight></codeline>
<codeline lineno="1481"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal<sp/>or<sp/>a<sp/>streaming<sp/>input<sp/>of<sp/>this<sp/>AppDROP)<sp/>has<sp/>moved<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1482"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPLETED<sp/>or<sp/>ERROR<sp/>state.<sp/>By<sp/>default<sp/>no<sp/>action<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="1483"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AppDROP_1a341cc63d89d78c2ab0d82187e73f4e25" kindref="member">dataWritten</ref>(self,<sp/>uid,<sp/>data):</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1487"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Callback<sp/>invoked<sp/>when<sp/>`data`<sp/>has<sp/>been<sp/>written<sp/>into<sp/>the<sp/>DROP<sp/>with</highlight></codeline>
<codeline lineno="1488"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UID<sp/>`uid`<sp/>(which<sp/>is<sp/>one<sp/>of<sp/>the<sp/>streaming<sp/>inputs<sp/>of<sp/>this<sp/>AppDROP).</highlight></codeline>
<codeline lineno="1489"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>By<sp/>default<sp/>no<sp/>action<sp/>is<sp/>performed</highlight></codeline>
<codeline lineno="1490"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">execStatus(self):</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1495"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>execution<sp/>status<sp/>of<sp/>this<sp/>AppDROP</highlight></codeline>
<codeline lineno="1496"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._execStatus</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>@execStatus.setter</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">execStatus(self,<sp/>execStatus):</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._execStatus<sp/>==<sp/>execStatus:</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._execStatus<sp/>=<sp/>execStatus</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._fire(</highlight><highlight class="stringliteral">&apos;execStatus&apos;</highlight><highlight class="normal">,<sp/>execStatus=execStatus)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_notifyAppIsFinished(self):</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1508"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>invoked<sp/>by<sp/>subclasses<sp/>when<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>application<sp/>is</highlight></codeline>
<codeline lineno="1509"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>over.<sp/>Subclasses<sp/>must<sp/>make<sp/>sure<sp/>that<sp/>both<sp/>the<sp/>status<sp/>and<sp/>execStatus</highlight></codeline>
<codeline lineno="1510"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties<sp/>are<sp/>set<sp/>to<sp/>their<sp/>correct<sp/>values<sp/>correctly<sp/>before<sp/>invoking</highlight></codeline>
<codeline lineno="1511"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>method.</highlight></codeline>
<codeline lineno="1512"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_error<sp/>=<sp/>self._execStatus<sp/>==<sp/>AppDROPStates.ERROR</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_error:</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.status<sp/>=<sp/>DROPStates.ERROR</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.status<sp/>=<sp/>DROPStates.COMPLETED</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Moving<sp/>%r<sp/>to<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>self,<sp/></highlight><highlight class="stringliteral">&quot;FINISHED&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>is_error<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._fire(</highlight><highlight class="stringliteral">&apos;producerFinished&apos;</highlight><highlight class="normal">,<sp/>status=self.status,<sp/>execStatus=self.execStatus)</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1AppDROP_1ae5c3e718686b5a01802b1278f23dfd77" kindref="member">cancel</ref>(self):</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Moves<sp/>this<sp/>application<sp/>drop<sp/>to<sp/>its<sp/>CANCELLED<sp/>state&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(AppDROP,<sp/>self).<ref refid="classdlg_1_1drop_1_1AppDROP_1ae5c3e718686b5a01802b1278f23dfd77" kindref="member">cancel</ref>()</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.execStatus<sp/>=<sp/>AppDROPStates.CANCELLED</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527" refid="classdlg_1_1drop_1_1InputFiredAppDROP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1InputFiredAppDROP" kindref="compound">InputFiredAppDROP</ref>(<ref refid="classdlg_1_1drop_1_1AppDROP" kindref="compound">AppDROP</ref>):</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1529"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>An<sp/>InputFiredAppDROP<sp/>accepts<sp/>no<sp/>streaming<sp/>inputs<sp/>and<sp/>waits<sp/>until<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="1530"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>amount<sp/>of<sp/>inputs<sp/>(called<sp/>*effective<sp/>inputs*)<sp/>have<sp/>moved<sp/>to<sp/>COMPLETED<sp/>to</highlight></codeline>
<codeline lineno="1531"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>execute<sp/>its<sp/>&apos;run&apos;<sp/>method,<sp/>which<sp/>must<sp/>be<sp/>overwritten<sp/>by<sp/>subclasses.<sp/>This<sp/>way,</highlight></codeline>
<codeline lineno="1532"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this<sp/>application<sp/>allows<sp/>to<sp/>continue<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>graph<sp/>given<sp/>a</highlight></codeline>
<codeline lineno="1533"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>minimum<sp/>amount<sp/>of<sp/>inputs<sp/>being<sp/>ready.<sp/>The<sp/>transitions<sp/>of<sp/>subsequent<sp/>inputs</highlight></codeline>
<codeline lineno="1534"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>COMPLETED<sp/>state<sp/>have<sp/>no<sp/>effect.</highlight></codeline>
<codeline lineno="1535"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1536"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Normally<sp/>only<sp/>one<sp/>call<sp/>to<sp/>the<sp/>`run`<sp/>method<sp/>will<sp/>happen<sp/>per<sp/>application.</highlight></codeline>
<codeline lineno="1537"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>However<sp/>users<sp/>can<sp/>override<sp/>this<sp/>by<sp/>specifying<sp/>a<sp/>different<sp/>number<sp/>of<sp/>tries</highlight></codeline>
<codeline lineno="1538"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>before<sp/>finally<sp/>giving<sp/>up.</highlight></codeline>
<codeline lineno="1539"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1540"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>amount<sp/>of<sp/>effective<sp/>inputs<sp/>must<sp/>be<sp/>less<sp/>or<sp/>equal<sp/>to<sp/>the<sp/>amount<sp/>of<sp/>inputs</highlight></codeline>
<codeline lineno="1541"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>added<sp/>to<sp/>this<sp/>application<sp/>once<sp/>the<sp/>graph<sp/>is<sp/>being<sp/>executed.<sp/>The<sp/>special</highlight></codeline>
<codeline lineno="1542"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>value<sp/>of<sp/>-1<sp/>means<sp/>that<sp/>all<sp/>inputs<sp/>are<sp/>considered<sp/>as<sp/>effective,<sp/>in<sp/>which<sp/>case</highlight></codeline>
<codeline lineno="1543"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this<sp/>class<sp/>acts<sp/>as<sp/>a<sp/>BarrierAppDROP,<sp/>effectively<sp/>blocking<sp/>until<sp/>all<sp/>its</highlight></codeline>
<codeline lineno="1544"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>inputs<sp/>have<sp/>moved<sp/>to<sp/>the<sp/>COMPLETED<sp/>state.</highlight></codeline>
<codeline lineno="1545"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1546"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>An<sp/>input<sp/>error<sp/>threshold<sp/>controls<sp/>the<sp/>behavior<sp/>of<sp/>the<sp/>application<sp/>given<sp/>an</highlight></codeline>
<codeline lineno="1547"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>error<sp/>in<sp/>one<sp/>or<sp/>more<sp/>of<sp/>its<sp/>inputs<sp/>(i.e.,<sp/>a<sp/>DROP<sp/>moving<sp/>to<sp/>the<sp/>ERROR<sp/>state).</highlight></codeline>
<codeline lineno="1548"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>threshold<sp/>is<sp/>a<sp/>value<sp/>within<sp/>0<sp/>and<sp/>100<sp/>that<sp/>indicates<sp/>the<sp/>tolerance</highlight></codeline>
<codeline lineno="1549"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>erroneous<sp/>effective<sp/>inputs,<sp/>and<sp/>after<sp/>which<sp/>the<sp/>application<sp/>will<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="1550"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>run<sp/>but<sp/>moved<sp/>to<sp/>the<sp/>ERROR<sp/>state<sp/>itself<sp/>instead.</highlight></codeline>
<codeline lineno="1551"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>input_error_threshold<sp/>=<sp/>dlg_int_param(</highlight><highlight class="stringliteral">&apos;Input<sp/>error<sp/>threshold<sp/>(0<sp/>and<sp/>100)&apos;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>n_effective_inputs<sp/>=<sp/>dlg_int_param(</highlight><highlight class="stringliteral">&apos;Number<sp/>of<sp/>effective<sp/>inputs&apos;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>n_tries<sp/>=<sp/>dlg_int_param(</highlight><highlight class="stringliteral">&apos;Number<sp/>of<sp/>tries&apos;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(InputFiredAppDROP,<sp/>self).initialize(**kwargs)</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a9dcfc7d1279718501522a5e282fb993a" kindref="member">_completedInputs</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a3b3432b6a0f60876ea59008c68eefa80" kindref="member">_errorInputs</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Error<sp/>threshold<sp/>must<sp/>be<sp/>within<sp/>0<sp/>and<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1afa8f97fddc7b3b069386754dcd7c8551" kindref="member">input_error_threshold</ref><sp/>&lt;<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1afa8f97fddc7b3b069386754dcd7c8551" kindref="member">input_error_threshold</ref><sp/>&gt;<sp/>100:</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&quot;%r:<sp/>input_error_threshold<sp/>not<sp/>within<sp/>[0,100]&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self,))</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Amount<sp/>of<sp/>effective<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;n_effective_inputs&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&quot;%r:<sp/>n_effective_inputs<sp/>is<sp/>mandatory&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self,))</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1acbdbd1d2de0704928913f13905bea9fe" kindref="member">n_effective_inputs</ref><sp/>&lt;<sp/>-1<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1acbdbd1d2de0704928913f13905bea9fe" kindref="member">n_effective_inputs</ref><sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&quot;%r:<sp/>n_effective_inputs<sp/>must<sp/>be<sp/>&gt;<sp/>0<sp/>or<sp/>equals<sp/>to<sp/>-1&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self,))</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Number<sp/>of<sp/>tries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a2268b127171df3bfd51f7d4c38aff552" kindref="member">n_tries</ref><sp/>&lt;<sp/>1:</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&apos;Invalid<sp/>n_tries,<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>number&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addStreamingInput(self,<sp/>streamingInputDrop,<sp/>back=True):</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidRelationshipException(DROPRel(streamingInputDrop,<sp/>DROPLinkType.STREAMING_INPUT,<sp/>self),</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;InputFiredAppDROPs<sp/>don&apos;t<sp/>accept<sp/>streaming<sp/>inputs&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dropCompleted(self,<sp/>uid,<sp/>drop_state):</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(InputFiredAppDROP,<sp/>self).dropCompleted(uid,<sp/>drop_state)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Received<sp/>notification<sp/>from<sp/>input<sp/>drop:<sp/>uid=%s,<sp/>state=%d&quot;</highlight><highlight class="normal">,<sp/>uid,<sp/>drop_state)</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>value<sp/>of<sp/>-1<sp/>means<sp/>all<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_inputs<sp/>=<sp/>len(self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a49f1716d7ff5ef2e6897ec06d97ed075" kindref="member">_inputs</ref>)</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_eff_inputs<sp/>=<sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1acbdbd1d2de0704928913f13905bea9fe" kindref="member">n_effective_inputs</ref></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>n_eff_inputs<sp/>==<sp/>-1:</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_eff_inputs<sp/>=<sp/>n_inputs</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>More<sp/>effective<sp/>inputs<sp/>than<sp/>inputs,<sp/>this<sp/>is<sp/>a<sp/>horror</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>n_eff_inputs<sp/>&gt;<sp/>n_inputs:</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;%r:<sp/>More<sp/>effective<sp/>inputs<sp/>(%d)<sp/>than<sp/>inputs<sp/>(%d)&quot;</highlight><highlight class="normal"><sp/>%<sp/>\</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self,<sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1acbdbd1d2de0704928913f13905bea9fe" kindref="member">n_effective_inputs</ref>,<sp/>n_inputs))</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>drop_state<sp/>==<sp/>DROPStates.ERROR:</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._errorInputs.append(uid)</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>drop_state<sp/>==<sp/>DROPStates.COMPLETED:</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._completedInputs.append(uid)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&apos;Invalid<sp/>DROP<sp/>state<sp/>in<sp/>dropCompleted:<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>drop_state)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_len<sp/>=<sp/>len(self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a3b3432b6a0f60876ea59008c68eefa80" kindref="member">_errorInputs</ref>)</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok_len<sp/>=<sp/>len(self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a9dcfc7d1279718501522a5e282fb993a" kindref="member">_completedInputs</ref>)</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_len<sp/>+<sp/>ok_len)<sp/>==<sp/>n_eff_inputs:</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>calculate<sp/>the<sp/>number<sp/>of<sp/>errors<sp/>that<sp/>have<sp/>already<sp/>occurred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>percent_failed<sp/>=<sp/>math.floor((error_len/float(n_eff_inputs))<sp/>*<sp/>100)</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Error<sp/>on<sp/>inputs<sp/>for<sp/>%r:<sp/>%d/%d&quot;</highlight><highlight class="normal">,<sp/>self,<sp/>percent_failed,<sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1afa8f97fddc7b3b069386754dcd7c8551" kindref="member">input_error_threshold</ref>)</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>we<sp/>hit<sp/>the<sp/>input<sp/>error<sp/>threshold<sp/>then<sp/>ERROR<sp/>the<sp/>drop<sp/>and<sp/>move<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>percent_failed<sp/>&gt;<sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1afa8f97fddc7b3b069386754dcd7c8551" kindref="member">input_error_threshold</ref>:</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Error<sp/>threshold<sp/>reached<sp/>on<sp/>%r,<sp/>not<sp/>executing<sp/>it:<sp/>%d/%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/>percent_failed,<sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1afa8f97fddc7b3b069386754dcd7c8551" kindref="member">input_error_threshold</ref>)</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a863ba94c371b248d8e199418e6902ff6" kindref="member">execStatus</ref><sp/>=<sp/>AppDROPStates.ERROR</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a35ed3e99ca6611b9c06b6d84019d5c1b" kindref="member">status</ref><sp/>=<sp/><sp/>DROPStates.ERROR</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a0ece173b6efc39012dd600bb222f0d0c" kindref="member">_notifyAppIsFinished</ref>()</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a8ae76ed08f5402e76d7fc89cc0c2229f" kindref="member">async_execute</ref>()</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">async_execute(self):</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>immediately,<sp/>but<sp/>schedule<sp/>the<sp/>execution<sp/>of<sp/>this<sp/>app</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>we<sp/>have<sp/>been<sp/>given<sp/>a<sp/>thread<sp/>pool<sp/>use<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(self,<sp/></highlight><highlight class="stringliteral">&apos;_tp&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._tp.apply_async(self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1adcadfc68e8f270c3b81e9a474951030f" kindref="member">execute</ref>)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>threading.Thread(target=self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1adcadfc68e8f270c3b81e9a474951030f" kindref="member">execute</ref>)</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.daemon<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.start()</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>@track_current_drop</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1adcadfc68e8f270c3b81e9a474951030f" kindref="member">execute</ref>(self):</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1636"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Manually<sp/>trigger<sp/>the<sp/>execution<sp/>of<sp/>this<sp/>application.</highlight></codeline>
<codeline lineno="1637"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1638"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>is<sp/>normally<sp/>invoked<sp/>internally<sp/>when<sp/>the<sp/>application<sp/>detects</highlight></codeline>
<codeline lineno="1639"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>its<sp/>inputs<sp/>are<sp/>COMPLETED.</highlight></codeline>
<codeline lineno="1640"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>We<sp/>need<sp/>to<sp/>be<sp/>defined<sp/>more<sp/>clearly<sp/>how<sp/>the<sp/>state<sp/>is<sp/>set<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>applications,<sp/>for<sp/>the<sp/>time<sp/>being<sp/>they<sp/>follow<sp/>their<sp/>execState.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Run<sp/>at<sp/>most<sp/>self._n_tries<sp/>if<sp/>there<sp/>are<sp/>errors<sp/>during<sp/>the<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Executing<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>self)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tries<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop_state<sp/>=<sp/>DROPStates.COMPLETED</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a863ba94c371b248d8e199418e6902ff6" kindref="member">execStatus</ref><sp/>=<sp/>AppDROPStates.RUNNING</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>tries<sp/>&lt;<sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a2268b127171df3bfd51f7d4c38aff552" kindref="member">n_tries</ref>:</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a630a21af124700bb32c7f75d15329aa3" kindref="member">run</ref>()</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a863ba94c371b248d8e199418e6902ff6" kindref="member">execStatus</ref><sp/>==<sp/>AppDROPStates.CANCELLED:</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a863ba94c371b248d8e199418e6902ff6" kindref="member">execStatus</ref><sp/>=<sp/>AppDROPStates.FINISHED</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a863ba94c371b248d8e199418e6902ff6" kindref="member">execStatus</ref><sp/>==<sp/>AppDROPStates.CANCELLED:</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tries<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.exception(</highlight><highlight class="stringliteral">&apos;Error<sp/>while<sp/>executing<sp/>%r<sp/>(try<sp/>%d/%d)&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self,<sp/>tries,<sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a2268b127171df3bfd51f7d4c38aff552" kindref="member">n_tries</ref>))</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>gave<sp/>up<sp/>running<sp/>the<sp/>application,<sp/>go<sp/>to<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tries<sp/>==<sp/>self.<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a2268b127171df3bfd51f7d4c38aff552" kindref="member">n_tries</ref>:</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a863ba94c371b248d8e199418e6902ff6" kindref="member">execStatus</ref><sp/>=<sp/>AppDROPStates.ERROR</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop_state<sp/>=<sp/>DROPStates.ERROR</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AbstractDROP_1a35ed3e99ca6611b9c06b6d84019d5c1b" kindref="member">status</ref><sp/>=<sp/>drop_state</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1drop_1_1AppDROP_1a0ece173b6efc39012dd600bb222f0d0c" kindref="member">_notifyAppIsFinished</ref>()</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1InputFiredAppDROP_1a630a21af124700bb32c7f75d15329aa3" kindref="member">run</ref>(self):</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1673"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Run<sp/>this<sp/>application.<sp/>It<sp/>can<sp/>be<sp/>safely<sp/>assumed<sp/>that<sp/>at<sp/>this<sp/>point<sp/>all</highlight></codeline>
<codeline lineno="1674"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>required<sp/>inputs<sp/>are<sp/>COMPLETED.</highlight></codeline>
<codeline lineno="1675"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>another<sp/>thing<sp/>we<sp/>need<sp/>to<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(self):</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681" refid="classdlg_1_1drop_1_1BarrierAppDROP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1drop_1_1BarrierAppDROP" kindref="compound">BarrierAppDROP</ref>(<ref refid="classdlg_1_1drop_1_1InputFiredAppDROP" kindref="compound">InputFiredAppDROP</ref>):</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1683"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>BarrierAppDROP<sp/>is<sp/>an<sp/>InputFireAppDROP<sp/>that<sp/>waits<sp/>for<sp/>all<sp/>its<sp/>inputs<sp/>to</highlight></codeline>
<codeline lineno="1684"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>complete,<sp/>effectively<sp/>blocking<sp/>the<sp/>flow<sp/>of<sp/>the<sp/>graph<sp/>execution.</highlight></codeline>
<codeline lineno="1685"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Blindly<sp/>override<sp/>existing<sp/>value<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;n_effective_inputs&apos;</highlight><highlight class="normal">]<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(BarrierAppDROP,<sp/>self).initialize(**kwargs)</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Dictionary<sp/>mapping<sp/>1-to-many<sp/>DROPLinkType<sp/>constants<sp/>to<sp/>the<sp/>corresponding<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight><highlight class="comment">#<sp/>used<sp/>to<sp/>append<sp/>a<sp/>a<sp/>DROP<sp/>into<sp/>a<sp/>relationship<sp/>collection<sp/>of<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(e.g.,<sp/>one<sp/>uses<sp/>`addConsumer`<sp/>to<sp/>add<sp/>a<sp/>DROPLinkeType.CONSUMER<sp/>DROP<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="comment">#<sp/>another)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal">LINKTYPE_1TON_APPEND_METHOD<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.CONSUMER:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addConsumer&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.STREAMING_CONSUMER:<sp/></highlight><highlight class="stringliteral">&apos;addStreamingConsumer&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.INPUT:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addInput&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.STREAMING_INPUT:<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addStreamingInput&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.OUTPUT:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addOutput&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.CHILD:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addChild&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.PRODUCER:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addProducer&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Same<sp/>as<sp/>above,<sp/>but<sp/>for<sp/>N-to-1<sp/>relationships,<sp/>in<sp/>which<sp/>case<sp/>we<sp/>indicate<sp/>not<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight><highlight class="comment">#<sp/>method<sp/>but<sp/>a<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal">LINKTYPE_NTO1_PROPERTY<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.PARENT:<sp/></highlight><highlight class="stringliteral">&apos;parent&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal">LINKTYPE_1TON_BACK_APPEND_METHOD<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.CONSUMER:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addInput&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.STREAMING_CONSUMER:<sp/></highlight><highlight class="stringliteral">&apos;addStreamingInput&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.INPUT:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addConsumer&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.STREAMING_INPUT:<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addStreamingConsumer&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.OUTPUT:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addProducer&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.CHILD:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;setParent&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.PRODUCER:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;addOutput&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal">LINKTYPE_NTO1_BACK_APPEND_METHOD<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>DROPLinkType.PARENT:<sp/></highlight><highlight class="stringliteral">&apos;addChild&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="daliuge-runtime/dlg/drop.py"/>
  </compounddef>
</doxygen>
