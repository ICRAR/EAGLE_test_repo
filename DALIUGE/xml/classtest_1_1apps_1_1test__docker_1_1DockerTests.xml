<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtest_1_1apps_1_1test__docker_1_1DockerTests" kind="class" language="Python" prot="public">
    <compoundname>test::apps::test_docker::DockerTests</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TestCase</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a066bfbf72657d6a03acf0b8c889e1e3a" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>test.apps.test_docker.DockerTests::_temp</definition>
        <argsstring></argsstring>
        <name>_temp</name>
        <initializer>= None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="47" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a30b4c72f98bcc5fc00b7d5ae954126ff" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool test.apps.test_docker.DockerTests::_docker_available</definition>
        <argsstring></argsstring>
        <name>_docker_available</name>
        <initializer>= False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="48" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a554375389fc7dea5e380fc6f0bcd1a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_docker.DockerTests.setUpClass</definition>
        <argsstring>(cls)</argsstring>
        <name>setUpClass</name>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="51" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="51" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1aab92082bb4616f927bd83afeeeb45c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_docker.DockerTests.tearDown</definition>
        <argsstring>(self)</argsstring>
        <name>tearDown</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="63" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a27742c75ef4781ba45f27e1b1170e71a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_docker.DockerTests.test_simpleCopy</definition>
        <argsstring>(self)</argsstring>
        <name>test_simpleCopy</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Simple test for a dockerized application. It copies the contents of one
file into another via the command-line cp utility. It then checks that
the contents of the target DROP are correct, and that the target file is
actually owned by our process.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="66" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="66" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a86fb3ef971b68656703fef03b2815f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_docker.DockerTests.test_clientServer</definition>
        <argsstring>(self)</argsstring>
        <name>test_clientServer</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>A client-server duo. The server outputs the data it receives to its
output DROP, which in turn is the data held in its input DROP. The graph
looks like this:

A --|--&gt; B(client) --|--&gt; D
    |--&gt; C(server) --|

C is a server application which B connects to. Therefore C must be
started before B, so B knows C&apos;s IP address and connects successfully.
Although the real writing is done by C, B in this example is also
treated as a publisher of D. This way D waits for both applications to
finish before proceeding.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="93" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="93" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a24f3772063207ba4a321331c22de9f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_docker.DockerTests.test_quotedCommands</definition>
        <argsstring>(self)</argsstring>
        <name>test_quotedCommands</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>A test to check that commands using quotes are correctly executed, which
means that their quotes were correctly escaped when the final docker
command was executed
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="129" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="129" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1aebead2227de62752fe73421a62f71c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_docker.DockerTests.test_dataURLReference</definition>
        <argsstring>(self)</argsstring>
        <name>test_dataURLReference</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>A test to check that DROPs other than FileDROPs and DirectoryContainers
can pass their dataURLs into docker containers
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="149" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="149" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a8e58f8ea2ceb7400b46130fad33b7f17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_docker.DockerTests.test_refer_to_io_by_uid</definition>
        <argsstring>(self)</argsstring>
        <name>test_refer_to_io_by_uid</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>A test to check that input and output Drops can be referred to by their
UIDs (in addition to their position in the list of inputs or outputs)
in the command-line.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="156" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="156" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a81efcf05222489ed721ce84fd1c3dab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_docker.DockerTests.test_additional_bindings</definition>
        <argsstring>(self)</argsstring>
        <name>test_additional_bindings</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="175" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="175" bodyend="204"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtest_1_1apps_1_1test__docker_1_1DockerTests_1ad831c75e5292ad2920ce525d5b69ffe7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def test.apps.test_docker.DockerTests._ngas_and_fs_io</definition>
        <argsstring>(self, command)</argsstring>
        <name>_ngas_and_fs_io</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>command</type>
          <defname>command</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/test/apps/test_docker.py" line="164" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="164" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1997">
        <label>unittest::TestCase</label>
      </node>
      <node id="1996">
        <label>test.apps.test_docker.DockerTests</label>
        <link refid="classtest_1_1apps_1_1test__docker_1_1DockerTests"/>
        <childnode refid="1997" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1999">
        <label>unittest::TestCase</label>
      </node>
      <node id="1998">
        <label>test.apps.test_docker.DockerTests</label>
        <link refid="classtest_1_1apps_1_1test__docker_1_1DockerTests"/>
        <childnode refid="1999" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="daliuge-runtime/test/apps/test_docker.py" line="45" column="1" bodyfile="daliuge-runtime/test/apps/test_docker.py" bodystart="45" bodyend="204"/>
    <listofallmembers>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a30b4c72f98bcc5fc00b7d5ae954126ff" prot="private" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>_docker_available</name></member>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1ad831c75e5292ad2920ce525d5b69ffe7" prot="private" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>_ngas_and_fs_io</name></member>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a066bfbf72657d6a03acf0b8c889e1e3a" prot="private" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>_temp</name></member>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a554375389fc7dea5e380fc6f0bcd1a1a" prot="public" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>setUpClass</name></member>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1aab92082bb4616f927bd83afeeeb45c9b" prot="public" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>tearDown</name></member>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a81efcf05222489ed721ce84fd1c3dab8" prot="public" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>test_additional_bindings</name></member>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a86fb3ef971b68656703fef03b2815f53" prot="public" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>test_clientServer</name></member>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1aebead2227de62752fe73421a62f71c06" prot="public" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>test_dataURLReference</name></member>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a24f3772063207ba4a321331c22de9f73" prot="public" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>test_quotedCommands</name></member>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a8e58f8ea2ceb7400b46130fad33b7f17" prot="public" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>test_refer_to_io_by_uid</name></member>
      <member refid="classtest_1_1apps_1_1test__docker_1_1DockerTests_1a27742c75ef4781ba45f27e1b1170e71a" prot="public" virt="non-virtual"><scope>test::apps::test_docker::DockerTests</scope><name>test_simpleCopy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
