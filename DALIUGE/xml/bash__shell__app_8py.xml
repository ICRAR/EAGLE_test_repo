<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="bash__shell__app_8py" kind="file" language="Python">
    <compoundname>bash_shell_app.py</compoundname>
    <innerclass refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase" prot="public">dlg::apps::bash_shell_app::BashShellBase</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase" prot="public">dlg::apps::bash_shell_app::StreamingInputBashAppBase</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellApp" prot="public">dlg::apps::bash_shell_app::BashShellApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingOutputBashApp" prot="public">dlg::apps::bash_shell_app::StreamingOutputBashApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashApp" prot="public">dlg::apps::bash_shell_app::StreamingInputBashApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputOutputBashApp" prot="public">dlg::apps::bash_shell_app::StreamingInputOutputBashApp</innerclass>
    <innernamespace refid="namespacedlg_1_1apps_1_1bash__shell__app">dlg::apps::bash_shell_app</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>ICRAR<sp/>-<sp/>International<sp/>Centre<sp/>for<sp/>Radio<sp/>Astronomy<sp/>Research</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>(c)<sp/>UWA<sp/>-<sp/>The<sp/>University<sp/>of<sp/>Western<sp/>Australia</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Copyright<sp/>by<sp/>UWA<sp/>(in<sp/>the<sp/>framework<sp/>of<sp/>the<sp/>ICRAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MA<sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">Module<sp/>containing<sp/>bash-related<sp/>AppDrops</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">The<sp/>module<sp/>contains<sp/>four<sp/>classes<sp/>that<sp/>offer<sp/>running<sp/>bash<sp/>commands<sp/>in<sp/>different</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">execution<sp/>modes;<sp/>that<sp/>is,<sp/>in<sp/>fully<sp/>batch<sp/>mode,<sp/>or<sp/>with<sp/>its<sp/>input<sp/>and/or<sp/>output</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">as<sp/>a<sp/>stream<sp/>of<sp/>data<sp/>to<sp/>the<sp/>previous/next<sp/>application.</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>contextlib</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>signal</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>socket</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>struct</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tempfile</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threading</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>types</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>six</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>droputils,<sp/>utils</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..ddap_protocol<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>AppDROPStates,<sp/>DROPStates</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..drop<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>BarrierAppDROP,<sp/>AppDROP</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..exceptions<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>InvalidDropException</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..meta<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dlg_string_param,<sp/>dlg_component,<sp/>dlg_batch_input,<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_batch_output,<sp/>dlg_streaming_input</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">mesage_stdouts(prefix,<sp/>stdout,<sp/>stderr,<sp/>enc=&apos;utf8&apos;):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>prefix</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>stdout<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>stderr:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>msg<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>output<sp/>follows:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stdout:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n==STDOUT==\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>utils.b2s(stdout,<sp/>enc)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stderr:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n==STDERR==\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>utils.b2s(stderr,<sp/>enc)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">close_and_remove(fo,<sp/>fname):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>fo.close()</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.remove(fname)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Removed<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fname)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>OSError:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.exception(</highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>removing<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fname)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">prepare_output_channel(this_node,<sp/>out_drop):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Prepares<sp/>an<sp/>output<sp/>channel<sp/>that<sp/>will<sp/>serve<sp/>as<sp/>the<sp/>stdout<sp/>of<sp/>a<sp/>bash<sp/>command.</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Depending<sp/>on<sp/>the<sp/>values<sp/>of<sp/>``this_node``<sp/>and<sp/>``out_drop``<sp/>the<sp/>channel<sp/>will</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>be<sp/>a<sp/>named<sp/>pipe<sp/>or<sp/>a<sp/>socket.</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>the<sp/>output<sp/>drop<sp/>is<sp/>local<sp/>then<sp/>we<sp/>set<sp/>up<sp/>a<sp/>named<sp/>pipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>otherwise<sp/>we<sp/>set<sp/>up<sp/>a<sp/>socket<sp/>server<sp/>on<sp/>our<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>which<sp/>will<sp/>result<sp/>in<sp/>a<sp/>socket<sp/>client<sp/>on<sp/>the<sp/>other<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe_name<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>out_drop.node<sp/>==<sp/>this_node:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe_name<sp/>=<sp/>tempfile.mktemp()</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.mkfifo(pipe_name)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Created<sp/>named<sp/>pipe<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>pipe_name)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>pipe<sp/>needs<sp/>to<sp/>be<sp/>opened<sp/>after<sp/>the<sp/>data<sp/>is<sp/>sent<sp/>to<sp/>the<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>application<sp/>because<sp/>open()<sp/>blocks<sp/>until<sp/>the<sp/>other<sp/>end<sp/>is<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>opened</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>six.b(</highlight><highlight class="stringliteral">&quot;pipe://%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(pipe_name,))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_drop.write(data)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>open(pipe_name,<sp/></highlight><highlight class="stringliteral">&apos;wb&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>=<sp/>this_node<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>socket.gethostname()</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock<sp/>=<sp/>socket.socket(socket.AF_INET,<sp/>socket.SOCK_STREAM)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock.bind((host,<sp/>0))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock.listen(1)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>sock.getsockname()[1]</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Created<sp/>TCP<sp/>socket<sp/>server<sp/>at<sp/>%s:%d&quot;</highlight><highlight class="normal">,<sp/>host,<sp/>port)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>get<sp/>a<sp/>connection<sp/>from<sp/>the<sp/>other<sp/>side<sp/>we<sp/>have<sp/>to<sp/>write<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>into<sp/>the<sp/>output<sp/>drop<sp/>first<sp/>so<sp/>the<sp/>other<sp/>side<sp/>connects<sp/>to<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_drop.write(six.b(</highlight><highlight class="stringliteral">&quot;tcp://%s:%d&quot;</highlight><highlight class="normal"><sp/>%<sp/>(host,<sp/>port)))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>contextlib.closing(sock):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csock,<sp/>csockaddr<sp/>=<sp/>sock.accept()</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csock.setsockopt(socket.SOL_SOCKET,<sp/>socket.SO_LINGER,<sp/>struct.pack(</highlight><highlight class="stringliteral">&apos;ii&apos;</highlight><highlight class="normal">,<sp/>1,<sp/>1000))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Received<sp/>connection<sp/>from<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>csockaddr)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csock</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">prepare_input_channel(data):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Prepares<sp/>an<sp/>input<sp/>channel<sp/>that<sp/>will<sp/>serve<sp/>as<sp/>the<sp/>stdin<sp/>of<sp/>a<sp/>bash<sp/>command.</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Depending<sp/>on<sp/>the<sp/>contents<sp/>of<sp/>``data``<sp/>the<sp/>channel<sp/>will<sp/>be<sp/>a<sp/>named<sp/>pipe<sp/>or<sp/>a</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>socket.</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>don&apos;t<sp/>even<sp/>look<sp/>at<sp/>&quot;data&quot;,<sp/>we<sp/>simply<sp/>set<sp/>up<sp/>a<sp/>communication<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data.startswith(b</highlight><highlight class="stringliteral">&apos;pipe://&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe_name<sp/>=<sp/>data[7:]</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe<sp/>=<sp/>open(pipe_name,<sp/></highlight><highlight class="stringliteral">&apos;rb&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Opened<sp/>pipe<sp/>%s<sp/>for<sp/>reading&quot;</highlight><highlight class="normal">,<sp/>pipe_name)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>an<sp/>object<sp/>that<sp/>runs<sp/>pipe.read<sp/>on<sp/>read()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>and<sp/>close_and_remove<sp/>on<sp/>close()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chan<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>a<sp/>simple<sp/>object<sp/>where<sp/>attributes<sp/>can<sp/>be<sp/>set!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chan.read<sp/>=<sp/>pipe.read</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chan.fileno<sp/>=<sp/>pipe.fileno</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chan.close<sp/>=<sp/>types.MethodType(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s:<sp/>close_and_remove(pipe,<sp/>pipe_name),<sp/>chan)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chan</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>data.startswith(b</highlight><highlight class="stringliteral">&apos;tcp://&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host,<sp/>port<sp/>=<sp/>data[6:].split(b</highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>=<sp/>host.decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>int(port)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock<sp/>=<sp/>utils.connect_to(host,<sp/>port,<sp/>10)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock.settimeout(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Connected<sp/>to<sp/>TCP<sp/>socket<sp/>%s:%d<sp/>for<sp/>reading&quot;</highlight><highlight class="normal">,<sp/>host,<sp/>port)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sock</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>streaming<sp/>channel:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>data)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase" kindref="compound">BashShellBase</ref>(object):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Common<sp/>class<sp/>for<sp/>BashShell<sp/>apps.<sp/>It<sp/>simply<sp/>requires<sp/>a<sp/>command<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>specified.</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>command<sp/>=<sp/>dlg_string_param(</highlight><highlight class="stringliteral">&apos;Bash<sp/>command&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(BashShellBase,<sp/>self).initialize(**kwargs)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase_1a2dbc7b102dfa6263023c664051aed055" kindref="member">proc</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase_1ab63891fc3aa6c03b321478b08989ba0a" kindref="member">command</ref>:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidDropException(self,<sp/></highlight><highlight class="stringliteral">&apos;No<sp/>command<sp/>specified,<sp/>cannot<sp/>create<sp/>BashShellApp&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_run_bash(self,<sp/>inputs,<sp/>outputs,<sp/>stdin=None,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdout=subprocess.PIPE):</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Runs<sp/>the<sp/>given<sp/>`cmd`.<sp/>If<sp/>any<sp/>`inputs`<sp/>and/or<sp/>`outputs`<sp/>are<sp/>given</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dictionaries<sp/>of<sp/>uid:drop<sp/>elements)<sp/>they<sp/>are<sp/>used<sp/>to<sp/>replace<sp/>any<sp/>placeholder</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>in<sp/>`cmd`<sp/>with<sp/>either<sp/>drop<sp/>paths<sp/>or<sp/>dataURLs.</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`stdin`<sp/>indicates<sp/>at<sp/>file<sp/>descriptor<sp/>or<sp/>file<sp/>object<sp/>to<sp/>use<sp/>as<sp/>the<sp/>standard</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>of<sp/>the<sp/>bash<sp/>process.<sp/>If<sp/>not<sp/>given<sp/>no<sp/>stdin<sp/>is<sp/>given<sp/>to<sp/>the<sp/>process.</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Similarly,<sp/>`stdout`<sp/>is<sp/>a<sp/>file<sp/>descriptor<sp/>or<sp/>file<sp/>object<sp/>where<sp/>the<sp/>standard</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>of<sp/>the<sp/>process<sp/>is<sp/>piped<sp/>to.<sp/>If<sp/>not<sp/>given<sp/>it<sp/>is<sp/>consumed<sp/>by<sp/>this</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method<sp/>and<sp/>potentially<sp/>logged.</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session_id<sp/>=<sp/>self._dlg_session.sessionId<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._dlg_session<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase_1ab63891fc3aa6c03b321478b08989ba0a" kindref="member">command</ref></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app_uid<sp/>=<sp/>self.uid</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.run_bash(self._command,<sp/>self.uid,<sp/>session_id,<sp/>*args,<sp/>**kwargs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Replace<sp/>inputs/outputs<sp/>in<sp/>command<sp/>line<sp/>with<sp/>paths<sp/>or<sp/>data<sp/>URLs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsInputs<sp/>=<sp/>{uid:<sp/>i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inputs.items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>droputils.has_path(i)}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsOutputs<sp/>=<sp/>{uid:<sp/>o<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>outputs.items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>droputils.has_path(o)}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>droputils.replace_path_placeholders(cmd,<sp/>fsInputs,<sp/>fsOutputs)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataURLInputs<sp/>=<sp/>{uid:<sp/>i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inputs.items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>droputils.has_path(i)}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataURLOutputs<sp/>=<sp/>{uid:<sp/>o<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid,o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>outputs.items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>droputils.has_path(o)}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>droputils.replace_dataurl_placeholders(cmd,<sp/>dataURLInputs,<sp/>dataURLOutputs)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Pass<sp/>down<sp/>daliuge-specific<sp/>information<sp/>to<sp/>the<sp/>subprocesses<sp/>as<sp/>environment<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env<sp/>=<sp/>os.environ.copy()</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;DLG_UID&apos;</highlight><highlight class="normal">]<sp/>=<sp/>app_uid</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;DLG_SESSION_ID&apos;</highlight><highlight class="normal">]<sp/>=<sp/>session_id</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wrap<sp/>everything<sp/>inside<sp/>bash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>(</highlight><highlight class="stringliteral">&apos;/bin/bash&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-c&apos;</highlight><highlight class="normal">,<sp/>cmd)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Command<sp/>after<sp/>user<sp/>creation<sp/>and<sp/>wrapping<sp/>is:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>cmd)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Run<sp/>and<sp/>wait<sp/>until<sp/>it<sp/>finishes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process<sp/>=<sp/>subprocess.Popen(cmd,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_fds=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdin=stdin,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdout=stdout,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stderr=subprocess.PIPE,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env=env,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preexec_fn=os.setsid)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase_1a2dbc7b102dfa6263023c664051aed055" kindref="member">proc</ref><sp/>=<sp/>process</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Process<sp/>launched,<sp/>waiting<sp/>now...&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstdout,<sp/>pstderr<sp/>=<sp/>process.communicate()</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stdout<sp/>!=<sp/>subprocess.PIPE:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstdout<sp/>=<sp/>b</highlight><highlight class="stringliteral">&quot;&lt;piped-out&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcode<sp/>=<sp/>process.returncode</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Finished<sp/>in<sp/>%.3f<sp/>[s]<sp/>with<sp/>exit<sp/>code<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>(end-start),<sp/>pcode)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pcode<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>logger.isEnabledFor(logging.DEBUG):</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(mesage_stdouts(</highlight><highlight class="stringliteral">&quot;Command<sp/>finished<sp/>successfully&quot;</highlight><highlight class="normal">,<sp/>pstdout,<sp/>pstderr))</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>pcode<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>didn&apos;t<sp/>finish<sp/>successfully<sp/>(exit<sp/>code<sp/>%d)&quot;</highlight><highlight class="normal"><sp/>%<sp/>(pcode,)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(mesage_stdouts(message,<sp/>pstdout,<sp/>pstderr))</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(message)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dataURL(self):</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(self).__name__</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">cancel(self):</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BarrierAppDROP.cancel(self)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.killpg(os.getpgid(self.proc.pid),<sp/>signal.SIGTERM)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.exception(</highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>terminating<sp/>process<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase_1a2dbc7b102dfa6263023c664051aed055" kindref="member">proc</ref>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase" kindref="compound">StreamingInputBashAppBase</ref>(<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase" kindref="compound">BashShellBase</ref>,<sp/>AppDROP):</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Base<sp/>class<sp/>for<sp/>bash<sp/>command<sp/>applications<sp/>that<sp/>consume<sp/>a<sp/>stream<sp/>of<sp/>incoming</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>data.</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BashShellBase.initialize(self,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1abae26bdfacea4931b424849b339415f5" kindref="member">_this_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1aebdeac88287dd47b4f6e83c814b85d62" kindref="member">_prev_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1a48cfea402d65601090c26972927cca18" kindref="member">_notified</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">notify_if_finished(self):</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1a48cfea402d65601090c26972927cca18" kindref="member">_notified</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1aebdeac88287dd47b4f6e83c814b85d62" kindref="member">_prev_finished</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1abae26bdfacea4931b424849b339415f5" kindref="member">_this_finished</ref>:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1a48cfea402d65601090c26972927cca18" kindref="member">_notified</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._notifyAppIsFinished()</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dropCompleted(self,<sp/>uid,<sp/>drop_state):</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1aebdeac88287dd47b4f6e83c814b85d62" kindref="member">_prev_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1a3b558c0ca24d94d979ac37b44a1cb2ef" kindref="member">notify_if_finished</ref>()</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dataWritten(self,<sp/>uid,<sp/>data):</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading.Thread(target=self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1aebab4fcc13d7b18656ec358fa29c5c5d" kindref="member">execute</ref>,<sp/>args=(data,)).start()</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">execute(self,<sp/>data):</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Received<sp/>incoming<sp/>data<sp/>connection<sp/>info:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>data)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1af66411c129b79bfe36920106b7598297" kindref="member">execStatus</ref><sp/>=<sp/>AppDROPStates.RUNNING</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.run(data)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop_state<sp/>=<sp/>DROPStates.COMPLETED</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execStatus<sp/>=<sp/>AppDROPStates.FINISHED</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.exception(</highlight><highlight class="stringliteral">&apos;Error<sp/>while<sp/>executing<sp/>%r&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self,))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop_state<sp/>=<sp/>DROPStates.ERROR</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execStatus<sp/>=<sp/>AppDROPStates.ERROR</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1af66411c129b79bfe36920106b7598297" kindref="member">execStatus</ref><sp/>=<sp/>execStatus</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1a535bbfaf7a406b0ceee8b62d298ad09c" kindref="member">status</ref><sp/>=<sp/>drop_state</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1abae26bdfacea4931b424849b339415f5" kindref="member">_this_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase_1a3b558c0ca24d94d979ac37b44a1cb2ef" kindref="member">notify_if_finished</ref>()</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Now<sp/>the<sp/>actual<sp/>4<sp/>classes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">#<sp/>*<sp/>batch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">#<sp/>*<sp/>output-only<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">#<sp/>*<sp/>input-only<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">#<sp/>*<sp/>full-stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellApp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellApp" kindref="compound">BashShellApp</ref>(<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase" kindref="compound">BashShellBase</ref>,<sp/>BarrierAppDROP):</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>An<sp/>app<sp/>that<sp/>runs<sp/>a<sp/>bash<sp/>command<sp/>in<sp/>batch<sp/>mode;<sp/>that<sp/>is,<sp/>it<sp/>waits<sp/>until<sp/>all</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>its<sp/>inputs<sp/>are<sp/>COMPLETED.<sp/>It<sp/>also<sp/>*doesn&apos;t*<sp/>output<sp/>a<sp/>stream<sp/>of<sp/>data;<sp/>see</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>StreamingOutputBashApp<sp/>for<sp/>those<sp/>cases.</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>compontent_meta<sp/>=<sp/>dlg_component(</highlight><highlight class="stringliteral">&apos;BashShellApp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;An<sp/>app<sp/>that<sp/>runs<sp/>a<sp/>bash<sp/>command<sp/>in<sp/>batch<sp/>mode&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_batch_input(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">,<sp/>[])],</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_batch_output(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">,<sp/>[])],</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_streaming_input(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run(self):</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase_1ab26bec39e7251233c524a30958a59970" kindref="member">_run_bash</ref>(self._inputs,<sp/>self._outputs)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingOutputBashApp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingOutputBashApp" kindref="compound">StreamingOutputBashApp</ref>(<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase" kindref="compound">BashShellBase</ref>,<sp/>BarrierAppDROP):</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Like<sp/>BashShellApp,<sp/>but<sp/>its<sp/>stdout<sp/>is<sp/>a<sp/>stream<sp/>of<sp/>data<sp/>that<sp/>is<sp/>fed<sp/>into<sp/>the</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>next<sp/>application.</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>compontent_meta<sp/>=<sp/>dlg_component(</highlight><highlight class="stringliteral">&apos;StreamingOutputBashApp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Like<sp/>BashShellApp,<sp/>but<sp/>its<sp/>stdout<sp/>is<sp/>a<sp/>stream<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;of<sp/>data<sp/>that<sp/>is<sp/>fed<sp/>into<sp/>the<sp/>next<sp/>application.&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_batch_input(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">,<sp/>[])],</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_batch_output(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">,<sp/>[])],</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_streaming_input(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run(self):</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>contextlib.closing(prepare_output_channel(self.node,<sp/>self.outputs[0]))<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>outchan:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase_1ab26bec39e7251233c524a30958a59970" kindref="member">_run_bash</ref>(self._inputs,<sp/>{},<sp/>stdout=outchan)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Closed<sp/>output<sp/>channel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashApp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashApp" kindref="compound">StreamingInputBashApp</ref>(<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase" kindref="compound">StreamingInputBashAppBase</ref>):</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>An<sp/>app<sp/>that<sp/>runs<sp/>a<sp/>bash<sp/>command<sp/>that<sp/>consumes<sp/>data<sp/>from<sp/>stdin.</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>streaming<sp/>of<sp/>data<sp/>that<sp/>appears<sp/>on<sp/>stdin<sp/>takes<sp/>place<sp/>outside<sp/>the</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>framework;<sp/>what<sp/>is<sp/>streamed<sp/>through<sp/>the<sp/>framework<sp/>is<sp/>the<sp/>information<sp/>needed</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>establish<sp/>the<sp/>streaming<sp/>channel.<sp/>This<sp/>information<sp/>is<sp/>also<sp/>used<sp/>to<sp/>kick</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this<sp/>application<sp/>off.</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>compontent_meta<sp/>=<sp/>dlg_component(</highlight><highlight class="stringliteral">&apos;StreamingInputBashApp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;An<sp/>app<sp/>that<sp/>runs<sp/>a<sp/>bash<sp/>command<sp/>that<sp/>consumes<sp/>data<sp/>from<sp/>stdin.&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_batch_input(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">,<sp/>[])],</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_batch_output(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">,<sp/>[])],</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_streaming_input(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run(self,<sp/>data):</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>contextlib.closing(prepare_input_channel(data))<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>inchan:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase_1ab26bec39e7251233c524a30958a59970" kindref="member">_run_bash</ref>({},<sp/>self._outputs,<sp/>stdin=inchan)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Closed<sp/>input<sp/>channel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputOutputBashApp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputOutputBashApp" kindref="compound">StreamingInputOutputBashApp</ref>(<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1StreamingInputBashAppBase" kindref="compound">StreamingInputBashAppBase</ref>):</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Like<sp/>StreamingInputBashApp,<sp/>but<sp/>its<sp/>stdout<sp/>is<sp/>also<sp/>a<sp/>stream<sp/>of<sp/>data<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>fed<sp/>into<sp/>the<sp/>next<sp/>application.</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>compontent_meta<sp/>=<sp/>dlg_component(</highlight><highlight class="stringliteral">&apos;StreamingInputOutputBashApp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Like<sp/>StreamingInputBashApp,<sp/>but<sp/>its<sp/>stdout<sp/>is<sp/>also<sp/>a<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;stream<sp/>of<sp/>data<sp/>that<sp/>is<sp/>fed<sp/>into<sp/>the<sp/>next<sp/>application.&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_batch_input(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">,<sp/>[])],</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_batch_output(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">,<sp/>[])],</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[dlg_streaming_input(</highlight><highlight class="stringliteral">&apos;text/*&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run(self,<sp/>data):</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>contextlib.closing(prepare_input_channel(data))<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>inchan:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>contextlib.closing(prepare_output_channel(self.node,<sp/>self.outputs[0]))<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>outchan:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1apps_1_1bash__shell__app_1_1BashShellBase_1ab26bec39e7251233c524a30958a59970" kindref="member">_run_bash</ref>({},<sp/>{},<sp/>stdout=outchan,<sp/>stdin=inchan)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Closed<sp/>output<sp/>channel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Closed<sp/>input<sp/>channel&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="daliuge-runtime/dlg/apps/bash_shell_app.py"/>
  </compounddef>
</doxygen>
