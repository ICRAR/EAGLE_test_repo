<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="composite__manager_8py" kind="file" language="Python">
    <compoundname>composite_manager.py</compoundname>
    <innerclass refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager" prot="public">dlg::manager::composite_manager::CompositeManager</innerclass>
    <innerclass refid="classdlg_1_1manager_1_1composite__manager_1_1DataIslandManager" prot="public">dlg::manager::composite_manager::DataIslandManager</innerclass>
    <innerclass refid="classdlg_1_1manager_1_1composite__manager_1_1MasterManager" prot="public">dlg::manager::composite_manager::MasterManager</innerclass>
    <innernamespace refid="namespacedlg_1_1manager_1_1composite__manager">dlg::manager::composite_manager</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>ICRAR<sp/>-<sp/>International<sp/>Centre<sp/>for<sp/>Radio<sp/>Astronomy<sp/>Research</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>(c)<sp/>UWA<sp/>-<sp/>The<sp/>University<sp/>of<sp/>Western<sp/>Australia,<sp/>2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Copyright<sp/>by<sp/>UWA<sp/>(in<sp/>the<sp/>framework<sp/>of<sp/>the<sp/>ICRAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MA<sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>abc</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>collections</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>functools</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing.pool</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threading</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>constants</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.client<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NodeManagerClient</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.constants<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ISLAND_DEFAULT_REST_PORT,<sp/>NODE_DEFAULT_REST_PORT</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.drop_manager<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DROPManager</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>remote,<sp/>graph_loader</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..ddap_protocol<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DROPRel</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..exceptions<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>InvalidGraphException,<sp/>DaliugeException,<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>SubManagerException</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>portIsOpen</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">uid_for_drop(dropSpec):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;uid&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dropSpec:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dropSpec[</highlight><highlight class="stringliteral">&apos;uid&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dropSpec[</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">sanitize_relations(interDMRelations,<sp/>graph):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Big<sp/>change<sp/>required<sp/>to<sp/>remove<sp/>this<sp/>hack<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Values<sp/>in<sp/>the<sp/>interDMRelations<sp/>array<sp/>use<sp/>OIDs<sp/>to<sp/>identify<sp/>drops.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>because<sp/>so<sp/>far<sp/>we<sp/>have<sp/>told<sp/>users<sp/>to<sp/>that<sp/>OIDs<sp/>are<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>in<sp/>the<sp/>physical<sp/>graph<sp/>description,<sp/>while<sp/>UIDs<sp/>are<sp/>optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(and<sp/>copied<sp/>over<sp/>from<sp/>the<sp/>OID<sp/>if<sp/>not<sp/>given).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>once<sp/>drops<sp/>are<sp/>actually<sp/>created<sp/>in<sp/>deploySession()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>access<sp/>the<sp/>values<sp/>in<sp/>interDMRelations<sp/>as<sp/>if<sp/>they<sp/>had<sp/>UIDs<sp/>inside,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>which<sp/>causes<sp/>problems<sp/>everywhere<sp/>because<sp/>everything<sp/>else<sp/>is<sp/>indexed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>UIDs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>order<sp/>to<sp/>not<sp/>break<sp/>the<sp/>current<sp/>physical<sp/>graph<sp/>constrains<sp/>and<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>things<sp/>simple<sp/>we&apos;ll<sp/>simply<sp/>replace<sp/>the<sp/>values<sp/>of<sp/>the<sp/>interDMRelations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>array<sp/>here<sp/>to<sp/>use<sp/>the<sp/>corresponding<sp/>UID<sp/>for<sp/>the<sp/>given<sp/>OIDs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Because<sp/>UIDs<sp/>are<sp/>globally<sp/>unique<sp/>across<sp/>drop<sp/>instances<sp/>it<sp/>makes<sp/>sense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>always<sp/>index<sp/>things<sp/>by<sp/>UID<sp/>and<sp/>not<sp/>by<sp/>OID.<sp/>Thus,<sp/>in<sp/>the<sp/>future<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>should<sp/>probably<sp/>change<sp/>the<sp/>requirement<sp/>on<sp/>the<sp/>physical<sp/>graphs<sp/>sent<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>users<sp/>to<sp/>always<sp/>require<sp/>an<sp/>UID,<sp/>and<sp/>optionally<sp/>an<sp/>OID,<sp/>and<sp/>then<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>all<sp/>this<sp/>code<sp/>to<sp/>immediately<sp/>use<sp/>those<sp/>UIDs<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>newDMRelations<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rel<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>interDMRelations:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs<sp/>=<sp/>uid_for_drop(graph[rel.lhs])</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/>=<sp/>uid_for_drop(graph[rel.rhs])</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_rel<sp/>=<sp/>DROPRel(lhs,<sp/>rel.rel,<sp/>rhs)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newDMRelations.append(new_rel)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>interDMRelations[:]<sp/>=<sp/>newDMRelations</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">group_by_node(uids,<sp/>graph):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>uids_by_node<sp/>=<sp/>collections.defaultdict(list)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>uids:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uids_by_node[graph[uid][</highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">]].append(uid)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uids_by_node</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager" kindref="compound">CompositeManager</ref>(DROPManager):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>DROPManager<sp/>that<sp/>in<sp/>turn<sp/>manages<sp/>DROPManagers<sp/>(sigh...).</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DROP<sp/>Managers<sp/>form<sp/>a<sp/>hierarchy<sp/>where<sp/>those<sp/>at<sp/>the<sp/>bottom<sp/>actually<sp/>hold</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DROPs<sp/>while<sp/>those<sp/>in<sp/>the<sp/>levels<sp/>above<sp/>rely<sp/>commands<sp/>and<sp/>aggregate<sp/>results,</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>making<sp/>the<sp/>system<sp/>more<sp/>manageable<sp/>and<sp/>scalable.<sp/>The<sp/>CompositeManager<sp/>class</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>implements<sp/>the<sp/>upper<sp/>part<sp/>of<sp/>this<sp/>hierarchy<sp/>in<sp/>a<sp/>generic<sp/>way<sp/>by<sp/>holding</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>references<sp/>to<sp/>a<sp/>number<sp/>of<sp/>sub-DROPManagers<sp/>and<sp/>communicating<sp/>with<sp/>them<sp/>to</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>complete<sp/>each<sp/>operation.<sp/>The<sp/>only<sp/>assumption<sp/>about<sp/>sub-DROPManagers<sp/>is<sp/>that</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>they<sp/>obey<sp/>the<sp/>DROPManager<sp/>interface,<sp/>and<sp/>therefore<sp/>this<sp/>CompositeManager</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>class<sp/>allows<sp/>for<sp/>multiple<sp/>levels<sp/>of<sp/>hierarchy<sp/>seamlessly.</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Having<sp/>different<sp/>levels<sp/>of<sp/>Data<sp/>Management<sp/>hierarchy<sp/>implies<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>physical<sp/>graph<sp/>that<sp/>is<sp/>fed<sp/>into<sp/>the<sp/>hierarchy<sp/>needs<sp/>to<sp/>be<sp/>partitioned<sp/>at</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>each<sp/>level<sp/>(except<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>hierarchy)<sp/>in<sp/>order<sp/>to<sp/>place<sp/>each</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DROP<sp/>in<sp/>its<sp/>correct<sp/>place.<sp/>The<sp/>attribute<sp/>used<sp/>by<sp/>a<sp/>particular</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CompositeManager<sp/>to<sp/>partition<sp/>the<sp/>graph<sp/>(from<sp/>its<sp/>graphSpec)<sp/>is<sp/>given<sp/>at</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>construction<sp/>time.</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>__metaclass__<sp/>=<sp/>abc.ABCMeta</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a7e7318dcdb39c87bb4c5a003e5cde7cb" kindref="member">__init__</ref>(self,<sp/>dmPort,<sp/>partitionAttr,<sp/>subDmId,<sp/>dmHosts=[],<sp/>pkeyPath=None,<sp/>dmCheckTimeout=10):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Creates<sp/>a<sp/>new<sp/>CompositeManager.<sp/>The<sp/>sub-DMs<sp/>it<sp/>manages<sp/>are<sp/>to<sp/>be<sp/>located</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>`dmHosts`,<sp/>and<sp/>should<sp/>be<sp/>listening<sp/>on<sp/>port<sp/>`dmPort`.</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param:<sp/>dmPort<sp/>The<sp/>port<sp/>at<sp/>which<sp/>the<sp/>sub-DMs<sp/>expose<sp/>themselves</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param:<sp/>partitionAttr<sp/>The<sp/>attribute<sp/>on<sp/>each<sp/>dropSpec<sp/>that<sp/>specifies<sp/>the</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitioning<sp/>of<sp/>the<sp/>graph<sp/>at<sp/>this<sp/>CompositeManager<sp/>level.</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param:<sp/>subDmId<sp/>The<sp/>sub-DM<sp/>ID.</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param:<sp/>dmHosts<sp/>The<sp/>list<sp/>of<sp/>hosts<sp/>under<sp/>which<sp/>the<sp/>sub-DMs<sp/>should<sp/>be<sp/>found.</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param:<sp/>pkeyPath<sp/>The<sp/>path<sp/>to<sp/>the<sp/>SSH<sp/>private<sp/>key<sp/>to<sp/>be<sp/>used<sp/>when<sp/>connecting</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>remote<sp/>hosts<sp/>to<sp/>start<sp/>the<sp/>sub-DMs<sp/>if<sp/>necessary.<sp/>A<sp/>value</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>`None`<sp/>means<sp/>that<sp/>the<sp/>default<sp/>path<sp/>should<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param:<sp/>dmCheckTimeout<sp/>The<sp/>timeout<sp/>used<sp/>before<sp/>giving<sp/>up<sp/>and<sp/>declaring</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>sub-DM<sp/>as<sp/>not-yet-present<sp/>in<sp/>a<sp/>given<sp/>host</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a284c27c37646812b40113d684a3ee62a" kindref="member">_dmPort</ref><sp/>=<sp/>dmPort</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ab47f1309f3379fe2a24b88ffc6493c7d" kindref="member">_partitionAttr</ref><sp/>=<sp/>partitionAttr</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a1cd957b25e6ce8ea63c6cee5abadec6f" kindref="member">_subDmId</ref><sp/>=<sp/>subDmId</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a2fc78d6bbb01af02d5175ea1c815f245" kindref="member">_dmHosts</ref><sp/>=<sp/>dmHosts</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a923bf76b8adc1ec3713f25cd5d1e5566" kindref="member">_graph</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ae0f2e8f603c5bfc63f96bdfd1ccd50e4" kindref="member">_drop_rels</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ac91614d53c9b1c41b16c3762d0994bc6" kindref="member">_sessionIds</ref><sp/>=<sp/>[]<sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>it&apos;s<sp/>still<sp/>unclear<sp/>how<sp/>sessions<sp/>are<sp/>managed<sp/>at<sp/>the<sp/>composite-manager<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ade35eb6d5247686ba53607279d5c6b9c" kindref="member">_pkeyPath</ref><sp/>=<sp/>pkeyPath</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a40994db5e3e97aef67104090524e6e7c" kindref="member">_dmCheckTimeout</ref><sp/>=<sp/>dmCheckTimeout</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_threads<sp/>=<sp/>max(1,min(len(dmHosts),20))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a5a96e4d25e33b4f9faae61886aecf5be" kindref="member">_tp</ref><sp/>=<sp/>multiprocessing.pool.ThreadPool(n_threads)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>list<sp/>of<sp/>bottom-level<sp/>nodes<sp/>that<sp/>are<sp/>covered<sp/>by<sp/>this<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>list<sp/>is<sp/>different<sp/>from<sp/>the<sp/>dmHosts,<sp/>which<sp/>are<sp/>the<sp/>machines<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>are<sp/>directly<sp/>managed<sp/>by<sp/>this<sp/>manager<sp/>(which<sp/>in<sp/>turn<sp/>could<sp/>manage<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>machines)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a844167e19bbefbbd6efc424ec83bf932" kindref="member">_nodes</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a1038d59903a8363dd68836440efe16f8" kindref="member">startDMChecker</ref>()</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">startDMChecker(self):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a5de00db56b70c457aaef6610a8c470cc" kindref="member">_dmCheckerEvt</ref><sp/>=<sp/>threading.Event()</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1af3968c1d6620bd817f48aa61953fbcce" kindref="member">_dmCheckerThread</ref><sp/>=<sp/>threading.Thread(name=</highlight><highlight class="stringliteral">&apos;DMChecker<sp/>Thread&apos;</highlight><highlight class="normal">,<sp/>target=self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a95db2e0d6e8d042080f287df76dd2a8e" kindref="member">_checkDM</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._dmCheckerThread.start()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">stopDMChecker(self):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self._dmCheckerEvt.isSet():</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._dmCheckerEvt.set()</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._dmCheckerThread.join()</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Explicit<sp/>shutdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">shutdown(self):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a1b088d7b4f1a779a0668cc16769b51b2" kindref="member">stopDMChecker</ref>()</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._tp.close()</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._tp.join()</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_checkDM(self):</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>host<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a2fc78d6bbb01af02d5175ea1c815f245" kindref="member">_dmHosts</ref>:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._dmCheckerEvt.is_set():</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a3e09675e459a686f25fb9e16a11c481b" kindref="member">check_dm</ref>(host,<sp/>timeout=self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a40994db5e3e97aef67104090524e6e7c" kindref="member">_dmCheckTimeout</ref>):</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>contact<sp/>manager<sp/>for<sp/>host<sp/>%s,<sp/>will<sp/>try<sp/>again<sp/>later&quot;</highlight><highlight class="normal">,<sp/>host)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._dmCheckerEvt.wait(60):</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dmHosts(self):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a2fc78d6bbb01af02d5175ea1c815f245" kindref="member">_dmHosts</ref>[:]</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addDmHost(self,<sp/>host):</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._dmHosts.append(host)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">nodes(self):</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a844167e19bbefbbd6efc424ec83bf932" kindref="member">_nodes</ref>[:]</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">add_node(self,<sp/>node):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._nodes.append(node)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">remove_node(self,<sp/>node):</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._nodes.remove(node)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dmPort(self):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a284c27c37646812b40113d684a3ee62a" kindref="member">_dmPort</ref></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_dm(self,<sp/>host,<sp/>port=None,<sp/>timeout=10):</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>port<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a284c27c37646812b40113d684a3ee62a" kindref="member">_dmPort</ref></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Checking<sp/>DM<sp/>presence<sp/>at<sp/>%s:%d&quot;</highlight><highlight class="normal">,<sp/>host,<sp/>port)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm_is_there<sp/>=<sp/>portIsOpen(host,<sp/>port,<sp/>timeout)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dm_is_there</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">dmAt(self,<sp/>host,<sp/>port=None):</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a3e09675e459a686f25fb9e16a11c481b" kindref="member">check_dm</ref>(host,<sp/>port):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>SubManagerException(</highlight><highlight class="stringliteral">&apos;Manager<sp/>expected<sp/>but<sp/>not<sp/>running<sp/>in<sp/>%s:%d&apos;</highlight><highlight class="normal"><sp/>%<sp/>(host,<sp/>port))</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>port<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a284c27c37646812b40113d684a3ee62a" kindref="member">_dmPort</ref></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NodeManagerClient(host,<sp/>port,<sp/>10)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getSessionIds(self):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ac91614d53c9b1c41b16c3762d0994bc6" kindref="member">_sessionIds</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Replication<sp/>of<sp/>commands<sp/>to<sp/>underlying<sp/>drop<sp/>managers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>&quot;collect&quot;<sp/>is<sp/>given,<sp/>then<sp/>individual<sp/>results<sp/>are<sp/>also<sp/>kept<sp/>in<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>structure,<sp/>which<sp/>is<sp/>either<sp/>a<sp/>dictionary<sp/>or<sp/>a<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_do_in_host(self,<sp/>action,<sp/>sessionId,<sp/>exceptions,<sp/>f,<sp/>collect,<sp/>port,<sp/>iterable):</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>=<sp/>iterable</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(iterable,<sp/>(list,<sp/>tuple)):</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>=<sp/>iterable[0]</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a164a06ac66e6abd198be49b27bd93af1" kindref="member">dmAt</ref>(host,<sp/>port)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>dm:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>f(dm,<sp/>iterable,<sp/>sessionId)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(collect,<sp/>dict):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collect.update(res)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(collect,<sp/>list):</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collect.append(res)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exceptions[host]<sp/>=<sp/>e</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.exception(</highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>%s<sp/>on<sp/>host<sp/>%s,<sp/>session<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>action,<sp/>host,<sp/>sessionId)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(self,<sp/>sessionId,<sp/>f,<sp/>action,<sp/>collect=None,<sp/>iterable=None,<sp/>port=None):</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Replicates<sp/>the<sp/>given<sp/>function<sp/>call<sp/>on<sp/>each<sp/>of<sp/>the<sp/>underlying<sp/>drop<sp/>managers</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrExs<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterable<sp/>=<sp/>iterable<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a2fc78d6bbb01af02d5175ea1c815f245" kindref="member">_dmHosts</ref></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>port<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a284c27c37646812b40113d684a3ee62a" kindref="member">_dmPort</ref></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._tp.map(functools.partial(self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a66be0f7758032919b6c095bc4e2f87ae" kindref="member">_do_in_host</ref>,<sp/>action,<sp/>sessionId,<sp/>thrExs,<sp/>f,<sp/>collect,<sp/>port),<sp/>iterable)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>thrExs:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;More<sp/>than<sp/>one<sp/>error<sp/>occurred<sp/>while<sp/>%s<sp/>on<sp/>session<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(action,<sp/>sessionId)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>SubManagerException(msg,<sp/>thrExs)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Commands<sp/>and<sp/>their<sp/>per-underlying-drop-manager<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_createSession(self,<sp/>dm,<sp/>host,<sp/>sessionId):</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.createSession(sessionId)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Successfully<sp/>created<sp/>session<sp/>%s<sp/>on<sp/>%s&apos;</highlight><highlight class="normal">,<sp/>sessionId,<sp/>host)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a89491599355e71bcb85c0850b9f5d1c0" kindref="member">createSession</ref>(self,<sp/>sessionId):</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Creates<sp/>a<sp/>session<sp/>in<sp/>all<sp/>underlying<sp/>DMs.</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Creating<sp/>Session<sp/>%s<sp/>in<sp/>all<sp/>hosts&apos;</highlight><highlight class="normal">,<sp/>sessionId)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aa413fdff9c365749e5967a02f51ab1b8" kindref="member">_createSession</ref>,<sp/></highlight><highlight class="stringliteral">&quot;creating<sp/>sessions&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Successfully<sp/>created<sp/>session<sp/>%s<sp/>in<sp/>all<sp/>hosts&apos;</highlight><highlight class="normal">,<sp/>sessionId)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._sessionIds.append(sessionId)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_cancelSession(self,<sp/>dm,<sp/>host,<sp/>sessionId):</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.cancelSession(sessionId)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Successfully<sp/>cancelled<sp/>session<sp/>%s<sp/>on<sp/>%s&apos;</highlight><highlight class="normal">,<sp/>sessionId,<sp/>host)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ab1e22dc4baf90ee3b2aa109d3b39811d" kindref="member">cancelSession</ref>(self,<sp/>sessionId):</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cancels<sp/>a<sp/>session<sp/>in<sp/>all<sp/>underlying<sp/>DMs.</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Cancelled<sp/>session<sp/>%s<sp/>in<sp/>all<sp/>hosts&apos;</highlight><highlight class="normal">,<sp/>sessionId)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a72acea180db6f4ff248a23c623056395" kindref="member">_cancelSession</ref>,<sp/></highlight><highlight class="stringliteral">&quot;cancelling<sp/>sessions&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_destroySession(self,<sp/>dm,<sp/>host,<sp/>sessionId):</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.destroySession(sessionId)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Successfully<sp/>destroyed<sp/>session<sp/>%s<sp/>on<sp/>%s&apos;</highlight><highlight class="normal">,<sp/>sessionId,<sp/>host)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a6ee30d089d7ce4403b490d02feb326c8" kindref="member">destroySession</ref>(self,<sp/>sessionId):</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroy<sp/>a<sp/>session<sp/>in<sp/>all<sp/>underlying<sp/>DMs.</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Destroying<sp/>Session<sp/>%s<sp/>in<sp/>all<sp/>hosts&apos;</highlight><highlight class="normal">,<sp/>sessionId)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a7730fc7969c42fb4f853550d4dfb0784" kindref="member">_destroySession</ref>,<sp/></highlight><highlight class="stringliteral">&quot;creating<sp/>sessions&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._sessionIds.remove(sessionId)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_add_node_subscriptions(self,<sp/>dm,<sp/>host_and_subscriptions,<sp/>sessionId):</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host,<sp/>subscriptions<sp/>=<sp/>host_and_subscriptions</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.add_node_subscriptions(sessionId,<sp/>subscriptions)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>added<sp/>relationship<sp/>info<sp/>to<sp/>session<sp/>%s<sp/>on<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>sessionId,<sp/>host)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_addGraphSpec(self,<sp/>dm,<sp/>host_and_graphspec,<sp/>sessionId):</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host,<sp/>graphSpec<sp/>=<sp/>host_and_graphspec</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.addGraphSpec(sessionId,<sp/>graphSpec)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>appended<sp/>graph<sp/>to<sp/>session<sp/>%s<sp/>on<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>sessionId,<sp/>host)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addGraphSpec(self,<sp/>sessionId,<sp/>graphSpec):</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>first<sp/>step<sp/>is<sp/>to<sp/>break<sp/>down<sp/>the<sp/>graph<sp/>into<sp/>smaller<sp/>graphs<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>host,<sp/>so<sp/>we<sp/>can<sp/>submit<sp/>that<sp/>graph<sp/>into<sp/>the<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>DMs.<sp/>For<sp/>this<sp/>we<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>our<sp/>graph<sp/>has<sp/>a<sp/>the<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>attribute<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Separating<sp/>graph&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perPartition<sp/>=<sp/>collections.defaultdict(list)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dropSpec<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>graphSpec:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ab47f1309f3379fe2a24b88ffc6493c7d" kindref="member">_partitionAttr</ref><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dropSpec:</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Drop<sp/>%s<sp/>doesn&apos;t<sp/>specify<sp/>a<sp/>%s<sp/>attribute&quot;</highlight><highlight class="normal"><sp/>%<sp/>(dropSpec[</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">],<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ab47f1309f3379fe2a24b88ffc6493c7d" kindref="member">_partitionAttr</ref>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidGraphException(msg)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partition<sp/>=<sp/>dropSpec[self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ab47f1309f3379fe2a24b88ffc6493c7d" kindref="member">_partitionAttr</ref>]</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>partition<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a2fc78d6bbb01af02d5175ea1c815f245" kindref="member">_dmHosts</ref>:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Drop<sp/>%s&apos;s<sp/>%s<sp/>%s<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>this<sp/>DM&quot;</highlight><highlight class="normal"><sp/>%<sp/>(dropSpec[</highlight><highlight class="stringliteral">&apos;oid&apos;</highlight><highlight class="normal">],<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ab47f1309f3379fe2a24b88ffc6493c7d" kindref="member">_partitionAttr</ref>,<sp/>partition)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>InvalidGraphException(msg)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perPartition[partition].append(dropSpec)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>drop<sp/>specs<sp/>to<sp/>our<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a923bf76b8adc1ec3713f25cd5d1e5566" kindref="member">_graph</ref>[uid_for_drop(dropSpec)]<sp/>=<sp/>dropSpec</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>At<sp/>each<sp/>partition<sp/>the<sp/>relationships<sp/>between<sp/>DROPs<sp/>should<sp/>be<sp/>local<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>moment<sp/>of<sp/>submitting<sp/>the<sp/>graph;<sp/>thus<sp/>we<sp/>record<sp/>the<sp/>inter-partition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>relationships<sp/>separately<sp/>and<sp/>remove<sp/>them<sp/>from<sp/>the<sp/>original<sp/>graph<sp/>spec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inter_partition_rels<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dropSpecs<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>perPartition.values():</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inter_partition_rels<sp/>+=<sp/>graph_loader.removeUnmetRelationships(dropSpecs)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sanitize_relations(inter_partition_rels,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a923bf76b8adc1ec3713f25cd5d1e5566" kindref="member">_graph</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Removed<sp/>(and<sp/>sanitized)<sp/>%d<sp/>inter-dm<sp/>relationships&apos;</highlight><highlight class="normal">,<sp/>len(inter_partition_rels))</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Store<sp/>the<sp/>inter-partition<sp/>relationships;<sp/>later<sp/>on<sp/>they<sp/>have<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>communicated<sp/>to<sp/>the<sp/>NMs<sp/>so<sp/>they<sp/>can<sp/>establish<sp/>them<sp/>as<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop_rels<sp/>=<sp/>collections.defaultdict(functools.partial(collections.defaultdict,<sp/>list))</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rel<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inter_partition_rels:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhn<sp/>=<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a923bf76b8adc1ec3713f25cd5d1e5566" kindref="member">_graph</ref>[rel.rhs][</highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhn<sp/>=<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a923bf76b8adc1ec3713f25cd5d1e5566" kindref="member">_graph</ref>[rel.lhs][</highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop_rels[lhn][rhn].append(rel)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop_rels[rhn][lhn].append(rel)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ae0f2e8f603c5bfc63f96bdfd1ccd50e4" kindref="member">_drop_rels</ref>[sessionId]<sp/>=<sp/>drop_rels</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Calculated<sp/>NM-level<sp/>drop<sp/>relationships:<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>drop_rels)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>individual<sp/>graphs<sp/>on<sp/>each<sp/>DM<sp/>now<sp/>that<sp/>they<sp/>are<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>separated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Adding<sp/>individual<sp/>graphSpec<sp/>of<sp/>session<sp/>%s<sp/>to<sp/>each<sp/>DM&apos;</highlight><highlight class="normal">,<sp/>sessionId)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a79f59abcc97bb2acda82b89c794343b8" kindref="member">_addGraphSpec</ref>,<sp/></highlight><highlight class="stringliteral">&quot;appending<sp/>graphSpec<sp/>to<sp/>individual<sp/>DMs&quot;</highlight><highlight class="normal">,<sp/>iterable=perPartition.items())</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Successfully<sp/>added<sp/>individual<sp/>graphSpec<sp/>of<sp/>session<sp/>%s<sp/>to<sp/>each<sp/>DM&apos;</highlight><highlight class="normal">,<sp/>sessionId)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_deploySession(self,<sp/>dm,<sp/>host,<sp/>sessionId):</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.deploySession(sessionId)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Successfully<sp/>deployed<sp/>session<sp/>%s<sp/>on<sp/>%s&apos;</highlight><highlight class="normal">,<sp/>sessionId,<sp/>host)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_triggerDrops(self,<sp/>dm,<sp/>host_and_uids,<sp/>sessionId):</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host,<sp/>uids<sp/>=<sp/>host_and_uids</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.trigger_drops(sessionId,<sp/>uids)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>triggered<sp/>drops<sp/>for<sp/>session<sp/>%s<sp/>on<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>sessionId,<sp/>host)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">deploySession(self,<sp/>sessionId,<sp/>completedDrops=[]):</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Indicate<sp/>the<sp/>node<sp/>managers<sp/>that<sp/>they<sp/>have<sp/>to<sp/>subscribe<sp/>to<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>published<sp/>by<sp/>some<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self._drop_rels.get(sessionId,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a8c1c78862c0d162356158274b4baf794" kindref="member">_add_node_subscriptions</ref>,<sp/></highlight><highlight class="stringliteral">&quot;adding<sp/>relationship<sp/>information&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port=constants.NODE_DEFAULT_REST_PORT,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterable=self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ae0f2e8f603c5bfc63f96bdfd1ccd50e4" kindref="member">_drop_rels</ref>[sessionId].items())</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Delivered<sp/>node<sp/>subscription<sp/>list<sp/>to<sp/>node<sp/>managers&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Deploying<sp/>Session<sp/>%s<sp/>in<sp/>all<sp/>hosts&apos;</highlight><highlight class="normal">,<sp/>sessionId)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a1f41ea015e664ec7b3e311721507569f" kindref="member">_deploySession</ref>,<sp/></highlight><highlight class="stringliteral">&quot;deploying<sp/>session&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Successfully<sp/>deployed<sp/>session<sp/>%s<sp/>in<sp/>all<sp/>hosts&apos;</highlight><highlight class="normal">,<sp/>sessionId)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>that<sp/>everything<sp/>is<sp/>wired<sp/>up<sp/>we<sp/>move<sp/>the<sp/>requested<sp/>DROPs<sp/>to<sp/>COMPLETED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(instead<sp/>of<sp/>doing<sp/>it<sp/>at<sp/>the<sp/>DM-level<sp/>deployment<sp/>time,<sp/>in<sp/>which<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>would<sp/>certainly<sp/>miss<sp/>most<sp/>of<sp/>the<sp/>events)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>completedDrops:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not_found<sp/>=<sp/>set(completedDrops)<sp/>-<sp/>set(self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a923bf76b8adc1ec3713f25cd5d1e5566" kindref="member">_graph</ref>)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>not_found:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>DaliugeException(</highlight><highlight class="stringliteral">&quot;UIDs<sp/>for<sp/>completed<sp/>drops<sp/>not<sp/>found:<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>not_found)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Moving<sp/>Drops<sp/>to<sp/>COMPLETED<sp/>right<sp/>away:<sp/>%r&apos;</highlight><highlight class="normal">,<sp/>completedDrops)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>completed_by_host<sp/>=<sp/>group_by_node(completedDrops,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a923bf76b8adc1ec3713f25cd5d1e5566" kindref="member">_graph</ref>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1af6163444ae5e6d2f0f93db1836d40a3c" kindref="member">_triggerDrops</ref>,<sp/></highlight><highlight class="stringliteral">&quot;triggering<sp/>drops&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port=constants.NODE_DEFAULT_REST_PORT,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterable=completed_by_host.items())</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Successfully<sp/>triggered<sp/>drops&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_getGraphStatus(self,<sp/>dm,<sp/>host,<sp/>sessionId):</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dm.getGraphStatus(sessionId)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getGraphStatus(self,<sp/>sessionId):</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allStatus<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ac68226f84818eced21f3f8cc07952d05" kindref="member">_getGraphStatus</ref>,<sp/></highlight><highlight class="stringliteral">&quot;getting<sp/>graph<sp/>status&quot;</highlight><highlight class="normal">,<sp/>collect=allStatus)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>allStatus</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_getGraph(self,<sp/>dm,<sp/>host,<sp/>sessionId):</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dm.getGraph(sessionId)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getGraph(self,<sp/>sessionId):</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allGraphs<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ab05e3af36cea8efc5a9edf864dcfb3f8" kindref="member">_getGraph</ref>,<sp/></highlight><highlight class="stringliteral">&quot;getting<sp/>the<sp/>graph&quot;</highlight><highlight class="normal">,<sp/>collect=allGraphs)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>graphs<sp/>coming<sp/>from<sp/>the<sp/>DMs<sp/>are<sp/>not<sp/>interconnected,<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>the<sp/>missing<sp/>connections<sp/>to<sp/>the<sp/>graph<sp/>before<sp/>returning<sp/>upstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rels<sp/>=<sp/>set([z<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1ae0f2e8f603c5bfc63f96bdfd1ccd50e4" kindref="member">_drop_rels</ref>[sessionId].values()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x.values()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>z<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>y])</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rel<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rels:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_loader.addLink(rel.rel,<sp/>allGraphs[rel.rhs],<sp/>rel.lhs)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>allGraphs</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_getSessionStatus(self,<sp/>dm,<sp/>host,<sp/>sessionId):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{host:<sp/>dm.getSessionStatus(sessionId)}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getSessionStatus(self,<sp/>sessionId):</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allStatus<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a825943a1328f79b209a0d7b9a6d8fe2c" kindref="member">_getSessionStatus</ref>,<sp/></highlight><highlight class="stringliteral">&quot;getting<sp/>the<sp/>graph<sp/>status&quot;</highlight><highlight class="normal">,<sp/>collect=allStatus)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>allStatus</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_getGraphSize(self,<sp/>dm,<sp/>host,<sp/>sessionId):</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dm.getGraphSize(sessionId)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getGraphSize(self,<sp/>sessionId):</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allCounts<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1aba731fa44d3e5812c659ea89a034fad1" kindref="member">replicate</ref>(sessionId,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1af97964575e1b6475ddcdd8481bcad246" kindref="member">_getGraphSize</ref>,<sp/></highlight><highlight class="stringliteral">&quot;getting<sp/>the<sp/>graph<sp/>size&quot;</highlight><highlight class="normal">,<sp/>collect=allCounts)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum(allCounts)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="classdlg_1_1manager_1_1composite__manager_1_1DataIslandManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1manager_1_1composite__manager_1_1DataIslandManager" kindref="compound">DataIslandManager</ref>(<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager" kindref="compound">CompositeManager</ref>):</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>DataIslandManager,<sp/>which<sp/>manages<sp/>a<sp/>number<sp/>of<sp/>NodeManagers.</highlight></codeline>
<codeline lineno="419"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>dmHosts=[],<sp/>pkeyPath=None,<sp/>dmCheckTimeout=10):</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(DataIslandManager,<sp/>self).__init__(NODE_DEFAULT_REST_PORT,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;node&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;nm&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dmHosts=dmHosts,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkeyPath=pkeyPath,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dmCheckTimeout=dmCheckTimeout)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>the<sp/>case<sp/>of<sp/>the<sp/>Data<sp/>Island<sp/>the<sp/>dmHosts<sp/>are<sp/>the<sp/>final<sp/>nodes<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a844167e19bbefbbd6efc424ec83bf932" kindref="member">_nodes</ref><sp/>=<sp/>dmHosts</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Created<sp/>DataIslandManager<sp/>for<sp/>hosts:<sp/>%r&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a2fc78d6bbb01af02d5175ea1c815f245" kindref="member">_dmHosts</ref>)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">add_node(self,<sp/>node):</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CompositeManager.add_node(self,<sp/>node)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._dmHosts.append(node)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="classdlg_1_1manager_1_1composite__manager_1_1MasterManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1manager_1_1composite__manager_1_1MasterManager" kindref="compound">MasterManager</ref>(<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager" kindref="compound">CompositeManager</ref>):</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="439"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>MasterManager,<sp/>which<sp/>manages<sp/>a<sp/>number<sp/>of<sp/>DataIslandManagers.</highlight></codeline>
<codeline lineno="440"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>dmHosts=[],<sp/>pkeyPath=None,<sp/>dmCheckTimeout=10):</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(MasterManager,<sp/>self).__init__(ISLAND_DEFAULT_REST_PORT,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;island&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;dim&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dmHosts=dmHosts,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkeyPath=pkeyPath,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dmCheckTimeout=dmCheckTimeout)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Created<sp/>MasterManager<sp/>for<sp/>hosts:<sp/>%r&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdlg_1_1manager_1_1composite__manager_1_1CompositeManager_1a2fc78d6bbb01af02d5175ea1c815f245" kindref="member">_dmHosts</ref>)</highlight></codeline>
    </programlisting>
    <location file="daliuge-runtime/dlg/manager/composite_manager.py"/>
  </compounddef>
</doxygen>
