<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="io_8py" kind="file" language="Python">
    <compoundname>io.py</compoundname>
    <innerclass refid="classdlg_1_1io_1_1OpenMode" prot="public">dlg::io::OpenMode</innerclass>
    <innerclass refid="classdlg_1_1io_1_1DataIO" prot="public">dlg::io::DataIO</innerclass>
    <innerclass refid="classdlg_1_1io_1_1NullIO" prot="public">dlg::io::NullIO</innerclass>
    <innerclass refid="classdlg_1_1io_1_1ErrorIO" prot="public">dlg::io::ErrorIO</innerclass>
    <innerclass refid="classdlg_1_1io_1_1MemoryIO" prot="public">dlg::io::MemoryIO</innerclass>
    <innerclass refid="classdlg_1_1io_1_1FileIO" prot="public">dlg::io::FileIO</innerclass>
    <innerclass refid="classdlg_1_1io_1_1NgasIO" prot="public">dlg::io::NgasIO</innerclass>
    <innerclass refid="classdlg_1_1io_1_1NgasLiteIO" prot="public">dlg::io::NgasLiteIO</innerclass>
    <innernamespace refid="namespacedlg_1_1io">dlg::io</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>ICRAR<sp/>-<sp/>International<sp/>Centre<sp/>for<sp/>Radio<sp/>Astronomy<sp/>Research</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>(c)<sp/>UWA<sp/>-<sp/>The<sp/>University<sp/>of<sp/>Western<sp/>Australia,<sp/>2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Copyright<sp/>by<sp/>UWA<sp/>(in<sp/>the<sp/>framework<sp/>of<sp/>the<sp/>ICRAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>MA<sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>abc<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>abstractmethod,<sp/>ABCMeta</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>six<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>BytesIO</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>six.moves.urllib.parse<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>urlparse<sp/><sp/></highlight><highlight class="comment">#<sp/>@UnresolvedImport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ngaslite</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classdlg_1_1io_1_1OpenMode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1OpenMode" kindref="compound">OpenMode</ref>:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>OPEN_WRITE,<sp/>OPEN_READ<sp/>=<sp/>range(2)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classdlg_1_1io_1_1DataIO" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1DataIO" kindref="compound">DataIO</ref>(object):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>class<sp/>used<sp/>to<sp/>read/write<sp/>data<sp/>stored<sp/>in<sp/>a<sp/>particular<sp/>kind<sp/>of<sp/>storage<sp/>in<sp/>an</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>abstract<sp/>way.<sp/>This<sp/>base<sp/>class<sp/>simply<sp/>declares<sp/>a<sp/>number<sp/>of<sp/>methods<sp/>that</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>deriving<sp/>classes<sp/>must<sp/>actually<sp/>implement<sp/>to<sp/>handle<sp/>different<sp/>storage</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>mechanisms<sp/>(e.g.,<sp/>a<sp/>local<sp/>filesystem<sp/>or<sp/>an<sp/>NGAS<sp/>server).</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>An<sp/>instance<sp/>of<sp/>this<sp/>class<sp/>represents<sp/>a<sp/>particular<sp/>piece<sp/>of<sp/>data.<sp/>Thus<sp/>at</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>construction<sp/>time<sp/>users<sp/>must<sp/>specify<sp/>a<sp/>storage-specific<sp/>unique<sp/>identifier</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>the<sp/>data<sp/>that<sp/>this<sp/>object<sp/>handles<sp/>(e.g.,<sp/>a<sp/>filename<sp/>in<sp/>the<sp/>case<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DataIO<sp/>class<sp/>that<sp/>works<sp/>with<sp/>local<sp/>filesystem<sp/>storage,<sp/>or<sp/>a<sp/>host:port/fileId</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>combination<sp/>in<sp/>the<sp/>case<sp/>of<sp/>a<sp/>class<sp/>that<sp/>works<sp/>with<sp/>an<sp/>NGAS<sp/>server).</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Once<sp/>an<sp/>instance<sp/>has<sp/>been<sp/>created<sp/>it<sp/>can<sp/>be<sp/>opened<sp/>via<sp/>its<sp/>`open`<sp/>method</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>indicating<sp/>an<sp/>open<sp/>mode.<sp/>If<sp/>opened<sp/>with<sp/>`OpenMode.OPEN_READ`,<sp/>only<sp/>read</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>operations<sp/>will<sp/>be<sp/>allowed<sp/>on<sp/>the<sp/>instance,<sp/>and<sp/>if<sp/>opened<sp/>with</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>`OpenMode.OPEN_WRITE`<sp/>only<sp/>writing<sp/>operations<sp/>will<sp/>be<sp/>allowed.</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>__metaclass__<sp/>=<sp/>ABCMeta</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1DataIO_1aeaeb3e8871491c29e4176dd609556d4f" kindref="member">open</ref>(self,<sp/>mode,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Opens<sp/>the<sp/>underlying<sp/>storage<sp/>where<sp/>the<sp/>data<sp/>represented<sp/>by<sp/>this<sp/>instance</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>stored.<sp/>Depending<sp/>on<sp/>the<sp/>value<sp/>of<sp/>`mode`<sp/>subsequent<sp/>calls<sp/>to</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`self.read`<sp/>or<sp/>`self.write`<sp/>will<sp/>succeed<sp/>or<sp/>fail.</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>=<sp/>mode</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1afcacd11a866005785e8b8a5f779f8c64" kindref="member">_desc</ref><sp/>=<sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a3cdf9e6c9e636294d03971b4b0a945eb" kindref="member">_open</ref>(**kwargs)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1DataIO_1a538a2a840dc1f4ebaf3886a58898f81b" kindref="member">write</ref>(self,<sp/>data,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Writes<sp/>`data`<sp/>into<sp/>the<sp/>storage</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Writing<sp/>operation<sp/>attempted<sp/>on<sp/>closed<sp/>DataIO<sp/>object&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>==<sp/>OpenMode.OPEN_READ:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Writing<sp/>operation<sp/>attempted<sp/>on<sp/>write-only<sp/>DataIO<sp/>object&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a814b6792b55c0b26aa98bed7fd1af8f6" kindref="member">_write</ref>(data,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1DataIO_1af20a1e34631efc2b0c1d8d13e185bff4" kindref="member">read</ref>(self,<sp/>count,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reads<sp/>`count`<sp/>bytes<sp/>from<sp/>the<sp/>underlying<sp/>storage.</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Reading<sp/>operation<sp/>attempted<sp/>on<sp/>closed<sp/>DataIO<sp/>object&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>==<sp/>OpenMode.OPEN_WRITE:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Reading<sp/>operation<sp/>attempted<sp/>on<sp/>write-only<sp/>DataIO<sp/>object&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1ac6f0f37b86274f09587c7bbb2c336646" kindref="member">_read</ref>(count,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1DataIO_1af65082998c1992f5f1c452b15723a5a8" kindref="member">close</ref>(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Closes<sp/>the<sp/>underlying<sp/>storage<sp/>where<sp/>the<sp/>data<sp/>represented<sp/>by<sp/>this</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance<sp/>is<sp/>stored,<sp/>freeing<sp/>underlying<sp/>resources.</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a0940b1d5577ac8134e8c9635a9196f6e" kindref="member">_close</ref>()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">isOpened(self):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>@abstractmethod</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1DataIO_1ab00e8bd46814d868b88b35316514ac91" kindref="member">exists</ref>(self):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>`True`<sp/>if<sp/>the<sp/>data<sp/>represented<sp/>by<sp/>this<sp/>DataIO<sp/>exists<sp/>indeed<sp/>in</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>underlying<sp/>storage<sp/>mechanism</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>@abstractmethod</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1DataIO_1ab968d8e7bdbc120cb4fd008e104869bf" kindref="member">delete</ref>(self):</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deletes<sp/>the<sp/>data<sp/>represented<sp/>by<sp/>this<sp/>DataIO</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>@abstractmethod</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_open(self,<sp/>**kwargs):<sp/></highlight><highlight class="keyword">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>@abstractmethod</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_read(self,<sp/>count,<sp/>**kwargs):<sp/></highlight><highlight class="keyword">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>@abstractmethod</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_write(self,<sp/>data,<sp/>**kwargs):<sp/></highlight><highlight class="keyword">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>@abstractmethod</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_close(self,<sp/>**kwargs):<sp/></highlight><highlight class="keyword">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classdlg_1_1io_1_1NullIO" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1NullIO" kindref="compound">NullIO</ref>(<ref refid="classdlg_1_1io_1_1DataIO" kindref="compound">DataIO</ref>):</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>DataIO<sp/>that<sp/>stores<sp/>no<sp/>data</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_open(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_read(self,<sp/>count=4096,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_write(self,<sp/>data,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(data)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_close(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(self):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">delete(self):</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classdlg_1_1io_1_1ErrorIO" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ErrorIO(DataIO):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>An<sp/>DataIO<sp/>method<sp/>that<sp/>throws<sp/>exceptions<sp/>if<sp/>any<sp/>of<sp/>its<sp/>methods<sp/>is<sp/>invoked</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_open(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError()</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_read(self,<sp/>count=4096,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError()</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_write(self,<sp/>data,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError()</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_close(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError()</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(self):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError()</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">delete(self):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError()</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classdlg_1_1io_1_1MemoryIO" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1MemoryIO" kindref="compound">MemoryIO</ref>(<ref refid="classdlg_1_1io_1_1DataIO" kindref="compound">DataIO</ref>):</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>DataIO<sp/>class<sp/>that<sp/>reads/write<sp/>from/into<sp/>the<sp/>BytesIO<sp/>object<sp/>given<sp/>at</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>construction<sp/>time</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>buf,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1MemoryIO_1ac9fa2b8398c2009a4d15ebfad74f2bc7" kindref="member">_buf</ref><sp/>=<sp/>buf</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_open(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>==<sp/>OpenMode.OPEN_WRITE:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1MemoryIO_1ac9fa2b8398c2009a4d15ebfad74f2bc7" kindref="member">_buf</ref></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BytesIO(self._buf.getvalue())</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_write(self,<sp/>data,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._desc.write(data)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(data)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_read(self,<sp/>count=4096,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._desc.read(count)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_close(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>==<sp/>OpenMode.OPEN_READ:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._desc.close()</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>we&apos;re<sp/>writing<sp/>we<sp/>don&apos;t<sp/>close<sp/>the<sp/>descriptor<sp/>because<sp/>it&apos;s<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self._buf,<sp/>which<sp/>won&apos;t<sp/>be<sp/>readable<sp/>afterwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(self):</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self._buf.closed</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">delete(self):</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._buf.close()</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classdlg_1_1io_1_1FileIO" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1FileIO" kindref="compound">FileIO</ref>(<ref refid="classdlg_1_1io_1_1DataIO" kindref="compound">DataIO</ref>):</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>filename,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(FileIO,<sp/>self).__init__()</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1FileIO_1ac2f195eb019ddf33acac38efd8aeb7d0" kindref="member">_fnm</ref><sp/>=<sp/>filename</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_open(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;r&apos;<sp/>if<sp/>self._mode<sp/>is<sp/>OpenMode.OPEN_READ<sp/>else<sp/>&apos;</highlight><highlight class="normal">w&apos;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdlg_1_1io_1_1DataIO_1aeaeb3e8871491c29e4176dd609556d4f" kindref="member">open</ref>(self.<ref refid="classdlg_1_1io_1_1FileIO_1ac2f195eb019ddf33acac38efd8aeb7d0" kindref="member">_fnm</ref>,<sp/>flag)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_read(self,<sp/>count=4096,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._desc.read(count)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_write(self,<sp/>data,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._desc.write(data)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(data)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_close(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._desc.close()</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getFileName(self):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1FileIO_1ac2f195eb019ddf33acac38efd8aeb7d0" kindref="member">_fnm</ref></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(self):</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.isfile(self.<ref refid="classdlg_1_1io_1_1FileIO_1ac2f195eb019ddf33acac38efd8aeb7d0" kindref="member">_fnm</ref>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">delete(self):</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.unlink(self.<ref refid="classdlg_1_1io_1_1FileIO_1ac2f195eb019ddf33acac38efd8aeb7d0" kindref="member">_fnm</ref>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classdlg_1_1io_1_1NgasIO" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1NgasIO" kindref="compound">NgasIO</ref>(<ref refid="classdlg_1_1io_1_1DataIO" kindref="compound">DataIO</ref>):</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>DROP<sp/>whose<sp/>data<sp/>is<sp/>finally<sp/>stored<sp/>into<sp/>NGAS.<sp/>Since<sp/>NGAS<sp/>doesn&apos;t</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>support<sp/>appending<sp/>data<sp/>to<sp/>existing<sp/>files,<sp/>we<sp/>store<sp/>all<sp/>the<sp/>data<sp/>temporarily</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>in<sp/>a<sp/>file<sp/>on<sp/>the<sp/>local<sp/>filesystem<sp/>and<sp/>then<sp/>move<sp/>it<sp/>to<sp/>the<sp/>NGAS<sp/>destination</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>hostname,<sp/>fileId,<sp/>port<sp/>=<sp/>7777,<sp/>ngasConnectTimeout=2,<sp/>ngasTimeout=2,<sp/>length=-1):</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>that<sp/>we<sp/>actually<sp/>have<sp/>the<sp/>NGAMS<sp/>client<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>ngamsPClient<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ngamsPClient<sp/><sp/></highlight><highlight class="comment">#<sp/>@UnusedImport<sp/>@UnresolvedImport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(</highlight><highlight class="stringliteral">&quot;No<sp/>NGAMS<sp/>client<sp/>libs<sp/>found,<sp/>cannot<sp/>use<sp/>NgasIO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(NgasIO,<sp/>self).__init__()</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1aec31bf90b3c6d0eb0726bd65b04f18a1" kindref="member">_ngasSrv</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>hostname</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1a9ea9f5865d798acc0e57d1506dace192" kindref="member">_ngasPort</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>port</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1a97407a88f64001c1d56ef832815e20c7" kindref="member">_ngasConnectTimeout</ref><sp/>=<sp/>ngasConnectTimeout</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1aac0d84f89e50733121d0aef46fcee2a5" kindref="member">_ngasTimeout</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ngasTimeout</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1a9fe8b8bed5e7d50c52e7b04ffc4b0ea5" kindref="member">_fileId</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fileId</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1aac76d99f495774a5edde3d128707a56b" kindref="member">_length</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>length</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_getClient(self):</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>ngamsPClient<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ngamsPClient<sp/><sp/></highlight><highlight class="comment">#<sp/>@UnresolvedImport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngamsPClient.ngamsPClient(self.<ref refid="classdlg_1_1io_1_1NgasIO_1aec31bf90b3c6d0eb0726bd65b04f18a1" kindref="member">_ngasSrv</ref>,<sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1a9ea9f5865d798acc0e57d1506dace192" kindref="member">_ngasPort</ref>,<sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1aac0d84f89e50733121d0aef46fcee2a5" kindref="member">_ngasTimeout</ref>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_open(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>==<sp/>OpenMode.OPEN_WRITE:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>NGAS<sp/>client<sp/>API<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>way<sp/>to<sp/>continually<sp/>feed<sp/>an<sp/>ARCHIVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>request<sp/>with<sp/>data.<sp/>Thus<sp/>the<sp/>only<sp/>way<sp/>we<sp/>can<sp/>currently<sp/>archive<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>into<sp/>NGAS<sp/>is<sp/>by<sp/>accumulating<sp/>it<sp/>all<sp/>on<sp/>our<sp/>side<sp/>and<sp/>finally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sending<sp/>it<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1ae375575808fdb8585782afa7e55c5a63" kindref="member">_buf</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1a975725a300ad85ee01d8705466d89a56" kindref="member">_writtenDataSize</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1ad3e0adddacef9e5bec57c18ce46ee76f" kindref="member">_getClient</ref>()</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_close(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client<sp/>=<sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1afcacd11a866005785e8b8a5f779f8c64" kindref="member">_desc</ref></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>==<sp/>OpenMode.OPEN_WRITE:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply,<sp/>msg,<sp/>_,<sp/>_<sp/>=<sp/>client._httpPost(</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client.getHost(),<sp/>client.getPort(),<sp/></highlight><highlight class="stringliteral">&apos;QARCHIVE&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;application/octet-stream&apos;</highlight><highlight class="normal">,<sp/>dataRef=self.<ref refid="classdlg_1_1io_1_1NgasIO_1ae375575808fdb8585782afa7e55c5a63" kindref="member">_buf</ref>,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pars=[[</highlight><highlight class="stringliteral">&apos;filename&apos;</highlight><highlight class="normal">,self.<ref refid="classdlg_1_1io_1_1NgasIO_1a9fe8b8bed5e7d50c52e7b04ffc4b0ea5" kindref="member">_fileId</ref>]],<sp/>dataSource=</highlight><highlight class="stringliteral">&apos;BUFFER&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize=self.<ref refid="classdlg_1_1io_1_1NgasIO_1a975725a300ad85ee01d8705466d89a56" kindref="member">_writtenDataSize</ref>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1ae375575808fdb8585782afa7e55c5a63" kindref="member">_buf</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>reply<sp/>!=<sp/>200:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Probably<sp/>msg<sp/>is<sp/>not<sp/>enough,<sp/>we<sp/>need<sp/>to<sp/>unpack<sp/>the<sp/>status<sp/>XML<sp/>doc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>from<sp/>the<sp/>returning<sp/>data<sp/>and<sp/>extract<sp/>the<sp/>real<sp/>error<sp/>message<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(msg)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Release<sp/>the<sp/>reference<sp/>to<sp/>_desc<sp/>so<sp/>the<sp/>client<sp/>object<sp/>gets<sp/>destroyed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1afcacd11a866005785e8b8a5f779f8c64" kindref="member">_desc</ref></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_read(self,<sp/>count,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>data<sp/>from<sp/>NGAS<sp/>and<sp/>give<sp/>it<sp/>back<sp/>to<sp/>our<sp/>reader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._desc.retrieve2File(self.<ref refid="classdlg_1_1io_1_1NgasIO_1a9fe8b8bed5e7d50c52e7b04ffc4b0ea5" kindref="member">_fileId</ref>,<sp/>cmd=</highlight><highlight class="stringliteral">&quot;QRETRIEVE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_write(self,<sp/>data,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1ae375575808fdb8585782afa7e55c5a63" kindref="member">_buf</ref><sp/>+=<sp/>data</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1a975725a300ad85ee01d8705466d89a56" kindref="member">_writtenDataSize</ref><sp/>+=<sp/>len(data)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(data)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(self):</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ngamsLib<sp/><sp/></highlight><highlight class="comment">#<sp/>@UnresolvedImport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1ad3e0adddacef9e5bec57c18ce46ee76f" kindref="member">_getClient</ref>().sendCmd(</highlight><highlight class="stringliteral">&apos;STATUS&apos;</highlight><highlight class="normal">,<sp/>pars=[[</highlight><highlight class="stringliteral">&apos;fileId&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdlg_1_1io_1_1NgasIO_1a9fe8b8bed5e7d50c52e7b04ffc4b0ea5" kindref="member">_fileId</ref>]])</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status.getStatus()<sp/>==<sp/>ngamsLib.ngamsCore.NGAMS_SUCCESS</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">delete(self):</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>We<sp/>never<sp/>delete<sp/>stuff<sp/>from<sp/>NGAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="classdlg_1_1io_1_1NgasLiteIO" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdlg_1_1io_1_1NgasLiteIO" kindref="compound">NgasLiteIO</ref>(<ref refid="classdlg_1_1io_1_1DataIO" kindref="compound">DataIO</ref>):</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>An<sp/>IO<sp/>class<sp/>whose<sp/>data<sp/>is<sp/>finally<sp/>stored<sp/>into<sp/>NGAS.<sp/>It<sp/>uses<sp/>the<sp/>ngaslite</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>module<sp/>of<sp/>DALiuGE<sp/>instead<sp/>of<sp/>the<sp/>full<sp/>client-side<sp/>libraries<sp/>provided<sp/>by<sp/>NGAS</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itself,<sp/>since<sp/>they<sp/>might<sp/>not<sp/>be<sp/>installed<sp/>everywhere.</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>`ngaslite`<sp/>module<sp/>doesn&apos;t<sp/>support<sp/>the<sp/>STATUS<sp/>command<sp/>yet,<sp/>and<sp/>because<sp/>of</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>that<sp/>this<sp/>class<sp/>will<sp/>throw<sp/>an<sp/>error<sp/>if<sp/>its<sp/>`exists`<sp/>method<sp/>is<sp/>invoked.</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>hostname,<sp/>fileId,<sp/>port<sp/>=<sp/>7777,<sp/>ngasConnectTimeout=2,<sp/>ngasTimeout=2,<sp/>length=-1):</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(NgasLiteIO,<sp/>self).__init__()</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1ae2fdb7aaea07df9fe607e1e872624cb3" kindref="member">_ngasSrv</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>hostname</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a167cd75c4345e140d2c290fa3e739cf2" kindref="member">_ngasPort</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>port</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a8f3c47db1d8cb994f55ea3117d1b6530" kindref="member">_ngasConnectTimeout</ref><sp/>=<sp/>ngasConnectTimeout</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a59fb07e21f1b90161bf9141a5549e392" kindref="member">_ngasTimeout</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ngasTimeout</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1ab242f9e3a950856c95e8be0f6c336ad6" kindref="member">_fileId</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fileId</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a2e7e06e037f47e6ec9acec579ca5c3c2" kindref="member">_length</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>length</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_getClient(self):</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>ngamsPClient<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ngamsPClient<sp/><sp/></highlight><highlight class="comment">#<sp/>@UnresolvedImport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngamsPClient.ngamsPClient(self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1ae2fdb7aaea07df9fe607e1e872624cb3" kindref="member">_ngasSrv</ref>,<sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a167cd75c4345e140d2c290fa3e739cf2" kindref="member">_ngasPort</ref>,<sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a59fb07e21f1b90161bf9141a5549e392" kindref="member">_ngasTimeout</ref>)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_open(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>==<sp/>OpenMode.OPEN_WRITE:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngaslite.beingArchive(self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1ae2fdb7aaea07df9fe607e1e872624cb3" kindref="member">_ngasSrv</ref>,<sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1ab242f9e3a950856c95e8be0f6c336ad6" kindref="member">_fileId</ref>,<sp/>port=self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a167cd75c4345e140d2c290fa3e739cf2" kindref="member">_ngasPort</ref>,<sp/>timeout=self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a59fb07e21f1b90161bf9141a5549e392" kindref="member">_ngasTimeout</ref>,<sp/>length=self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a2e7e06e037f47e6ec9acec579ca5c3c2" kindref="member">_length</ref>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngaslite.retrieve(self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1ae2fdb7aaea07df9fe607e1e872624cb3" kindref="member">_ngasSrv</ref>,<sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1ab242f9e3a950856c95e8be0f6c336ad6" kindref="member">_fileId</ref>,<sp/>port=self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a167cd75c4345e140d2c290fa3e739cf2" kindref="member">_ngasPort</ref>,<sp/>timeout=self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1a59fb07e21f1b90161bf9141a5549e392" kindref="member">_ngasTimeout</ref>)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_close(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1a36499b6379e5e0a1bc353973c9007d52" kindref="member">_mode</ref><sp/>==<sp/>OpenMode.OPEN_WRITE:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn<sp/>=<sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1afcacd11a866005785e8b8a5f779f8c64" kindref="member">_desc</ref></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngaslite.finishArchive(conn,<sp/>self.<ref refid="classdlg_1_1io_1_1NgasLiteIO_1ab242f9e3a950856c95e8be0f6c336ad6" kindref="member">_fileId</ref>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.close()</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>self.<ref refid="classdlg_1_1io_1_1DataIO_1afcacd11a866005785e8b8a5f779f8c64" kindref="member">_desc</ref></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.close()</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_read(self,<sp/>count,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._desc.read(count)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_write(self,<sp/>data,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._desc.send(data)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(data)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(self):</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>this<sp/>class&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">delete(self):</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>We<sp/>never<sp/>delete<sp/>stuff<sp/>from<sp/>NGAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">IOForURL(url):</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>DataIO<sp/>instance<sp/>that<sp/>handles<sp/>the<sp/>given<sp/>URL<sp/>for<sp/>reading.<sp/>If<sp/>no</highlight></codeline>
<codeline lineno="365"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>suitable<sp/>DataIO<sp/>class<sp/>can<sp/>be<sp/>found<sp/>to<sp/>handle<sp/>the<sp/>URL,<sp/>`None`<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>url<sp/>=<sp/>urlparse.urlparse(url)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>io<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>url.scheme<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;file&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostname<sp/>=<sp/>url.netloc</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/>url.path</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hostname<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;localhost&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>hostname<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;127.0.0.1&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostname<sp/>==<sp/>os.uname()[1]:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io<sp/>=<sp/><ref refid="classdlg_1_1io_1_1FileIO" kindref="compound">FileIO</ref>(filename)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>url.scheme<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;null&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io<sp/>=<sp/><ref refid="classdlg_1_1io_1_1NullIO" kindref="compound">NullIO</ref>()</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>url.scheme<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ngas&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>networkLocation<sp/>=<sp/>url.netloc</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>networkLocation:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostname,<sp/>port<sp/>=<sp/>networkLocation.split(</highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostname<sp/>=<sp/>networkLocation</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>7777</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileId<sp/>=<sp/>url.path</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io<sp/>=<sp/><ref refid="classdlg_1_1io_1_1NgasIO" kindref="compound">NgasIO</ref>(hostname,<sp/>fileId,<sp/>port)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&apos;NgasIO<sp/>not<sp/>available,<sp/>using<sp/>NgasLiteIO<sp/>instead&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io<sp/>=<sp/><ref refid="classdlg_1_1io_1_1NgasLiteIO" kindref="compound">NgasLiteIO</ref>(hostname,<sp/>fileId,<sp/>port)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;I/O<sp/>chosen<sp/>for<sp/>dataURL<sp/>%s:<sp/>%r&apos;</highlight><highlight class="normal">,<sp/>url,<sp/>io)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>io</highlight></codeline>
    </programlisting>
    <location file="daliuge-runtime/dlg/io.py"/>
  </compounddef>
</doxygen>
