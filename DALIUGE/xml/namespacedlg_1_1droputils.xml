<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacedlg_1_1droputils" kind="namespace" language="Python">
    <compoundname>dlg::droputils</compoundname>
    <innerclass refid="classdlg_1_1droputils_1_1DROPFile" prot="public">dlg::droputils::DROPFile</innerclass>
    <innerclass refid="classdlg_1_1droputils_1_1DROPWaiterCtx" prot="public">dlg::droputils::DROPWaiterCtx</innerclass>
    <innerclass refid="classdlg_1_1droputils_1_1EvtConsumer" prot="public">dlg::droputils::EvtConsumer</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="droputils_8py_1af98b9fce2db17550fc980792751d7e58" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::droputils.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= logging.getLogger(__name__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="40" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="droputils_8py_1aea804c9052b0a415400e0f05ebb3aac9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::droputils.indexed_ipath_pattern</definition>
        <argsstring></argsstring>
        <name>indexed_ipath_pattern</name>
        <initializer>= re.compile(r&quot;.*%i\[.+\].*&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="44" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="droputils_8py_1a7baaceb646d6da6885e42bec3f546a5e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::droputils.indexed_opath_pattern</definition>
        <argsstring></argsstring>
        <name>indexed_opath_pattern</name>
        <initializer>= re.compile(r&quot;.*%o\[.+\].*&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="45" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="droputils_8py_1a8d42ad1d9ee254db217516732e3122ff" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::droputils.indexed_idataurl_pattern</definition>
        <argsstring></argsstring>
        <name>indexed_idataurl_pattern</name>
        <initializer>= re.compile(r&quot;.*%iDataURL\[.+\].*&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="46" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="droputils_8py_1aebe3f50d7873f6ab635590bfe626cae2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::droputils.indexed_odataurl_pattern</definition>
        <argsstring></argsstring>
        <name>indexed_odataurl_pattern</name>
        <initializer>= re.compile(r&quot;.*%oDataURL\[.+\].*&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="47" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="droputils_8py_1a0f3742593427bbbf766e4897e3d2c9a5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dlg::droputils.get_leaves</definition>
        <argsstring></argsstring>
        <name>get_leaves</name>
        <initializer>= common.get_leaves</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="390" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="390" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="droputils_8py_1acb0cdc7658b7d66ead15119e9ea48a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.allDropContents</definition>
        <argsstring>(drop, bufsize=4096)</argsstring>
        <name>allDropContents</name>
        <param>
          <type>drop</type>
          <defname>drop</defname>
        </param>
        <param>
          <type>bufsize</type>
          <defname>bufsize</defname>
          <defval>4096</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns all the data contained in a given DROP
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="99" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="99" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="droputils_8py_1a71daf94de81f2744525c54ad1f7961cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.copyDropContents</definition>
        <argsstring>(source, target, bufsize=4096)</argsstring>
        <name>copyDropContents</name>
        <param>
          <type>source</type>
          <defname>source</defname>
        </param>
        <param>
          <type>target</type>
          <defname>target</defname>
        </param>
        <param>
          <type>bufsize</type>
          <defname>bufsize</defname>
          <defval>4096</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Manually copies data from one DROP into another, in bufsize steps
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="115" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="115" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="droputils_8py_1a14f9515d573b2ed6a2e353f337c41eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.getUpstreamObjects</definition>
        <argsstring>(drop)</argsstring>
        <name>getUpstreamObjects</name>
        <param>
          <type>drop</type>
          <defname>drop</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns a list of all direct &quot;upstream&quot; DROPs for the given
DROP. An DROP A is &quot;upstream&quot; with respect to DROP B if
any of the following conditions are true:

* A is a producer of B (therefore A is an AppDROP)
* A is a normal or streaming input of B (and B is therefore an AppDROP)

In practice if A is an upstream DROP of B means that it must be moved
to the COMPLETED state before B can do so.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="127" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="127" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="droputils_8py_1ae0750fb619afbd1ddff1a3b989d557ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.getDownstreamObjects</definition>
        <argsstring>(drop)</argsstring>
        <name>getDownstreamObjects</name>
        <param>
          <type>drop</type>
          <defname>drop</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns a list of all direct &quot;downstream&quot; DROPs for the given
DROP. An DROP A is &quot;downstream&quot; with respect to DROP B if
any of the following conditions are true:
* A is an output of B (therefore B is an AppDROP)
* A is a normal or streaming consumer of B (and A is therefore an AppDROP)

In practice if A is a downstream DROP of B means that it cannot
advance to the COMPLETED state until B does so.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="147" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="147" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="droputils_8py_1ac62680d1ee64b3e1bf2725dd103f2eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.getLeafNodes</definition>
        <argsstring>(nodes)</argsstring>
        <name>getLeafNodes</name>
        <param>
          <type>nodes</type>
          <defname>nodes</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns a list of all the &quot;leaf nodes&quot; of the graph pointed by `nodes`.
`nodes` is either a single DROP, or a list of DROPs.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="166" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="166" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="droputils_8py_1afee31cb3327fc4e1ef81ecf3c5c0c39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.depthFirstTraverse</definition>
        <argsstring>(node, visited=[])</argsstring>
        <name>depthFirstTraverse</name>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <param>
          <type>visited</type>
          <defname>visited</defname>
          <defval>[]</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Depth-first iterator for a DROP graph.

This iterator yields a tuple where the first item is the node being visited,
and the second is a list of nodes that will be visited subsequently.
Callers can alter this list in order to remove certain nodes from the
graph traversal process.

This implementation is recursive.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="174" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="174" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="droputils_8py_1a4be95048c3ddf68f4455a7242863022e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.breadFirstTraverse</definition>
        <argsstring>(toVisit)</argsstring>
        <name>breadFirstTraverse</name>
        <param>
          <type>toVisit</type>
          <defname>toVisit</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Breadth-first iterator for a DROP graph.

This iterator yields a tuple where the first item is the node being visited,
and the second is a list of nodes that will be visited subsequently.
Callers can alter this list in order to remove certain nodes from the
graph traversal process.

This implementation is non-recursive.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="194" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="194" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="droputils_8py_1a3919ea3c7f6ecf9275346659cec55876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.listify</definition>
        <argsstring>(o)</argsstring>
        <name>listify</name>
        <param>
          <type>o</type>
          <defname>o</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>If `o` is already a list return it as is; if `o` is a tuple returns a list
containing the elements contained in the tuple; otherwise returns a list
with `o` being its only element
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="223" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="223" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="droputils_8py_1ada11b923ab194f3810d26413e90fb0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.has_path</definition>
        <argsstring>(x)</argsstring>
        <name>has_path</name>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns `True` if `x` has a `path` attribute</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="306" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="306" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="droputils_8py_1a2f8da9ca36ceb7b10a82ed10a23f009d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.replace_path_placeholders</definition>
        <argsstring>(cmd, inputs, outputs)</argsstring>
        <name>replace_path_placeholders</name>
        <param>
          <type>cmd</type>
          <defname>cmd</defname>
        </param>
        <param>
          <type>inputs</type>
          <defname>inputs</defname>
        </param>
        <param>
          <type>outputs</type>
          <defname>outputs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Replaces any placeholder found in ``cmd`` with the path of the respective
input or output Drop from ``inputs`` or ``outputs``.
Placeholders have the different formats:

* ``%iN``, with N starting from 0, indicates the path of the N-th element
  from the ``inputs`` argument; likewise for ``%oN``.
* ``%i[X]`` indicates the path of the input with UID ``X``; likewise for
  ``%o[X]``.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="314" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="314" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="droputils_8py_1a5dff6d3f2f44b8a8e302d572fb7ac7d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.droputils.replace_dataurl_placeholders</definition>
        <argsstring>(cmd, inputs, outputs)</argsstring>
        <name>replace_dataurl_placeholders</name>
        <param>
          <type>cmd</type>
          <defname>cmd</defname>
        </param>
        <param>
          <type>inputs</type>
          <defname>inputs</defname>
        </param>
        <param>
          <type>outputs</type>
          <defname>outputs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Replaces any placeholder found in ``cmd`` with the dataURL property of the
respective input or output Drop from ``inputs`` or ``outputs``.
Placeholders have the different formats:

* ``%iDataURLN``, with N starting from 0, indicates the path of the N-th
  element from the ``inputs`` argument; likewise for ``%oDataURLN``.
* ``%iDataURL[X]`` indicates the path of the input with UID ``X``; likewise
  for ``%oDataURL[X]``.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daliuge-runtime/dlg/droputils.py" line="351" column="1" bodyfile="daliuge-runtime/dlg/droputils.py" bodystart="351" bodyend="389"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="daliuge-runtime/dlg/droputils.py" line="1" column="1"/>
  </compounddef>
</doxygen>
