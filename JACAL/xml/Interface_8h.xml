<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Interface_8h" kind="file" language="C++">
    <compoundname>Interface.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="Interface_8h_1a6763b4d97d4e2c9874aa1820ce2b57e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init</definition>
        <argsstring>(dlg_app_info *app, const char ***arguments)</argsstring>
        <name>init</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.h" line="18" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="26" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="Interface_8h_1a977938f73be7ab3303c4cc358e125012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int run</definition>
        <argsstring>(dlg_app_info *app)</argsstring>
        <name>run</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.h" line="19" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="Interface_8h_1a04ba3c58cf6108ab2f11ec70cd5610a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void data_written</definition>
        <argsstring>(dlg_app_info *app, const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.h" line="20" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="Interface_8h_1ab7a154484ea99e21aa7189cf3e93a791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drop_completed</definition>
        <argsstring>(dlg_app_info *app, const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.h" line="21" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="67" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ASKAP_DALIUGE_INTERFACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASKAP_DALIUGE_INTERFACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@brief<sp/>The<sp/>Actual<sp/>Interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@details<sp/>We<sp/>expose<sp/><sp/>class<sp/>member<sp/>functions<sp/>to<sp/>the<sp/>outside<sp/>world<sp/>as<sp/>C<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>Daliuge<sp/>changes<sp/>its<sp/>API<sp/>-<sp/>you<sp/>will<sp/>have<sp/>to<sp/>change<sp/>these<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>hopefully<sp/>all<sp/>the<sp/>issues<sp/>will<sp/>be<sp/>hidden<sp/>behind<sp/>the<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rename.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;<ref refid="DaliugeApplicationFactory_8h" kindref="compound">factory/DaliugeApplicationFactory.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init(dlg_app_info<sp/>*app,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run(dlg_app_info<sp/>*app);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(dlg_app_info<sp/>*app,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(dlg_app_info<sp/>*app,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,drop_status<sp/>status);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/Interface.h"/>
  </compounddef>
</doxygen>
