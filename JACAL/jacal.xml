<?xml version="1.0" standalone="yes"?>
<doxygen version="1.8.13"><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1CalcNE" kind="class" language="C++" prot="public">
    <compoundname>askap::CalcNE</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="CalcNE_8h" local="no">CalcNE.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1CalcNE_1aadbd389b09623b8c5abc4bd9b3052bf7" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1CalcNE" kindref="compound">CalcNE</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;CalcNE&gt; askap::CalcNE::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="40" column="1" bodyfile="jacal/factory/CalcNE.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1CalcNE_1ab94c4e4c143f1355bb6b23d1c5e3d89f" prot="private" static="no" mutable="no">
        <type>askap::scimath::Params::ShPtr</type>
        <definition>askap::scimath::Params::ShPtr askap::CalcNE::itsModel</definition>
        <argsstring/>
        <name>itsModel</name>
        <briefdescription>
<para>The model. </para>        </briefdescription>
        <detaileddescription>
<para>contains a set of parameters - essentially the solution of the NE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="66" column="1" bodyfile="jacal/factory/CalcNE.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1CalcNE_1af38a91d0dc884de25fe95a1b10f1f995" prot="private" static="no" mutable="no">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::CalcNE::itsParset</definition>
        <argsstring/>
        <name>itsParset</name>
        <briefdescription>
<para>Parameter set. </para>        </briefdescription>
        <detaileddescription>
<para>key value list of configuration options </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="70" column="1" bodyfile="jacal/factory/CalcNE.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1CalcNE_1a45e6ac2824af575561f1ebeefed1ae7f" prot="private" static="no" mutable="no">
        <type>casacore::IPosition</type>
        <definition>casacore::IPosition askap::CalcNE::freqInterval</definition>
        <argsstring/>
        <name>freqInterval</name>
        <briefdescription>
<para>which channel range of the measurement set we are interested in </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="74" column="1" bodyfile="jacal/factory/CalcNE.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1CalcNE_1ac7e740fc6655a8e193c3ab1a6cef522e" prot="private" static="no" mutable="no">
        <type>casacore::IPosition</type>
        <definition>casacore::IPosition askap::CalcNE::timeInterval</definition>
        <argsstring/>
        <name>timeInterval</name>
        <briefdescription>
<para>the time range we are interested in </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="77" column="1" bodyfile="jacal/factory/CalcNE.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1CalcNE_1af09741e552c97bcba703d98efdee6e54" prot="private" static="no" mutable="no">
        <type>std::vector&lt; casacore::MVDirection &gt;</type>
        <definition>std::vector&lt;casacore::MVDirection&gt; askap::CalcNE::itsTangent</definition>
        <argsstring/>
        <name>itsTangent</name>
        <briefdescription>
<para>the tangent point of the current grid </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="80" column="1" bodyfile="jacal/factory/CalcNE.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1CalcNE_1a3fd55eb5b138dce39ca15d9b1d64ff6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::CalcNE::CalcNE</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>CalcNE</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="42" column="1" bodyfile="jacal/factory/CalcNE.cc" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1CalcNE_1adfbc0959206c7343d39c630d693f795e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::CalcNE::~CalcNE</definition>
        <argsstring>()</argsstring>
        <name>~CalcNE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="46" column="1" bodyfile="jacal/factory/CalcNE.cc" bodystart="82" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1CalcNE_1a7cae1e13b97795fcd99e55c52b037298" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::CalcNE::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="50" column="1" bodyfile="jacal/factory/CalcNE.cc" bodystart="90" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1CalcNE_1a617bf8e5eac4dbfc4818384c3b5b454f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::CalcNE::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="52" column="1" bodyfile="jacal/factory/CalcNE.cc" bodystart="129" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1CalcNE_1a16fbe3340ce58366b80b9637bee43b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::CalcNE::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="54" column="1" bodyfile="jacal/factory/CalcNE.cc" bodystart="259" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1CalcNE_1a19ed03a466a91634ad52b929913e57a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::CalcNE::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="56" column="1" bodyfile="jacal/factory/CalcNE.cc" bodystart="263" bodyend="265"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1CalcNE_1a215c24e60e34baa90714872c50060982" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::CalcNE::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="44" column="1" bodyfile="jacal/factory/CalcNE.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1CalcNE_1a55f1cf474ea3e43a188d4b30959d3f90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::CalcNE::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.h" line="48" column="1" bodyfile="jacal/factory/CalcNE.cc" bodystart="85" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Calculates the Normal Equations. </para>    </briefdescription>
    <detaileddescription>
<para>This class encorporates all the tasks to read from a measurement set; subtract a model; grid residual visibilities and FFT the grid </para>    </detaileddescription>
    <inheritancegraph>
      <node id="0">
        <label>askap::CalcNE</label>
        <link refid="classaskap_1_1CalcNE"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>askap::CalcNE</label>
        <link refid="classaskap_1_1CalcNE"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/CalcNE.h" line="36" column="1" bodyfile="jacal/factory/CalcNE.h" bodystart="34" bodyend="91"/>
    <listofallmembers>
      <member refid="classaskap_1_1CalcNE_1a215c24e60e34baa90714872c50060982" prot="public" virt="non-virtual"><scope>askap::CalcNE</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1CalcNE_1a3fd55eb5b138dce39ca15d9b1d64ff6c" prot="public" virt="non-virtual"><scope>askap::CalcNE</scope><name>CalcNE</name></member>
      <member refid="classaskap_1_1CalcNE_1a55f1cf474ea3e43a188d4b30959d3f90" prot="public" virt="non-virtual"><scope>askap::CalcNE</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::CalcNE</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1CalcNE_1a16fbe3340ce58366b80b9637bee43b96" prot="public" virt="virtual"><scope>askap::CalcNE</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1CalcNE_1a19ed03a466a91634ad52b929913e57a9" prot="public" virt="virtual"><scope>askap::CalcNE</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1CalcNE_1a45e6ac2824af575561f1ebeefed1ae7f" prot="private" virt="non-virtual"><scope>askap::CalcNE</scope><name>freqInterval</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>has_output</name></member>
      <member refid="classaskap_1_1CalcNE_1a7cae1e13b97795fcd99e55c52b037298" prot="public" virt="virtual"><scope>askap::CalcNE</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>input</name></member>
      <member refid="classaskap_1_1CalcNE_1ab94c4e4c143f1355bb6b23d1c5e3d89f" prot="private" virt="non-virtual"><scope>askap::CalcNE</scope><name>itsModel</name></member>
      <member refid="classaskap_1_1CalcNE_1af38a91d0dc884de25fe95a1b10f1f995" prot="private" virt="non-virtual"><scope>askap::CalcNE</scope><name>itsParset</name></member>
      <member refid="classaskap_1_1CalcNE_1af09741e552c97bcba703d98efdee6e54" prot="private" virt="non-virtual"><scope>askap::CalcNE</scope><name>itsTangent</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::CalcNE</scope><name>output</name></member>
      <member refid="classaskap_1_1CalcNE_1a617bf8e5eac4dbfc4818384c3b5b454f" prot="public" virt="virtual"><scope>askap::CalcNE</scope><name>run</name></member>
      <member refid="classaskap_1_1CalcNE_1aadbd389b09623b8c5abc4bd9b3052bf7" prot="public" virt="non-virtual"><scope>askap::CalcNE</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1CalcNE_1ac7e740fc6655a8e193c3ab1a6cef522e" prot="private" virt="non-virtual"><scope>askap::CalcNE</scope><name>timeInterval</name></member>
      <member refid="classaskap_1_1CalcNE_1adfbc0959206c7343d39c630d693f795e" prot="public" virt="virtual"><scope>askap::CalcNE</scope><name>~CalcNE</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::CalcNE</scope><name>~DaliugeApplication</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1DaliugeApplication" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>askap::DaliugeApplication</compoundname>
    <derivedcompoundref refid="classaskap_1_1CalcNE" prot="public" virt="non-virtual">askap::CalcNE</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1InitSpectralCube" prot="public" virt="non-virtual">askap::InitSpectralCube</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1JacalBPCalibrator" prot="public" virt="non-virtual">askap::JacalBPCalibrator</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1LoadNE" prot="public" virt="non-virtual">askap::LoadNE</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1LoadParset" prot="public" virt="non-virtual">askap::LoadParset</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1LoadVis" prot="public" virt="non-virtual">askap::LoadVis</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1MajorCycle" prot="public" virt="non-virtual">askap::MajorCycle</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1NESpectralCube" prot="public" virt="non-virtual">askap::NESpectralCube</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1OutputParams" prot="public" virt="non-virtual">askap::OutputParams</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1RestoreSolver" prot="public" virt="non-virtual">askap::RestoreSolver</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1SolveNE" prot="public" virt="non-virtual">askap::SolveNE</derivedcompoundref>
    <derivedcompoundref refid="classaskap_1_1SpectralCube" prot="public" virt="non-virtual">askap::SpectralCube</derivedcompoundref>
    <includes refid="DaliugeApplication_8h" local="no">DaliugeApplication.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;DaliugeApplication&gt; askap::DaliugeApplication::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
<para>Shared pointer definition. </para>        </briefdescription>
        <detaileddescription>
<para>The application name Not sure this will work - but we can try. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="61" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1DaliugeApplication_1aac0d7e592bbc9d7b9f7f76eff56fbf9b" prot="private" static="no" mutable="no">
        <type>dlg_app_info *</type>
        <definition>dlg_app_info* askap::DaliugeApplication::raw_dlg_app</definition>
        <argsstring/>
        <name>raw_dlg_app</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="188" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>askap::DaliugeApplication::DaliugeApplication</definition>
        <argsstring>(dlg_app_info *app)</argsstring>
        <name>DaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="64" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="64" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type/>
        <definition>virtual askap::DaliugeApplication::~DaliugeApplication</definition>
        <argsstring>()</argsstring>
        <name>~DaliugeApplication</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="68" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int askap::DaliugeApplication::init</definition>
        <argsstring>(const char ***arguments)=0</argsstring>
        <name>init</name>
        <reimplementedby refid="classaskap_1_1LoadParset_1a5c6e6c83bd5251c36b4b820412b170ca">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1LoadNE_1a01e9bb86833223440b77d322af9a55ed">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1MajorCycle_1a65db2521a701c58c64e63ea46e849fa2">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1OutputParams_1a3a09d2b22cc2c97515b86fedf1e969b2">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1LoadVis_1a457b6e83405798b5266ae3dd0dd76f2b">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1SolveNE_1a95cda66dc215fd0668e6aa4a687afc68">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1RestoreSolver_1a78c01f3deb392479c44403dec2e6bd6c">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1CalcNE_1a7cae1e13b97795fcd99e55c52b037298">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1SpectralCube_1aad561f54ab3896aef32226794f660eca">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1InitSpectralCube_1a1b437de313f52b5ed672abd322c9a05a">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1NESpectralCube_1a5b7442fc0db70bf07551cb139032ccdd">init</reimplementedby>
        <reimplementedby refid="classaskap_1_1JacalBPCalibrator_1a4013f9a29cac8dfd1a41fb1c896b443c">init</reimplementedby>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int askap::DaliugeApplication::run</definition>
        <argsstring>()=0</argsstring>
        <name>run</name>
        <reimplementedby refid="classaskap_1_1LoadParset_1a96426e090fbccdb47b3b807ee932825a">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1LoadNE_1a5332a30ca3cfa84ec564d5faee027f74">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1MajorCycle_1ae618bdf8100d7fc83907d42fb49f332b">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1OutputParams_1a1e8bded42c6a9f7bc72365e7d5efdc15">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1LoadVis_1a702b9675ad4047c1b76cb6794e772841">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1SolveNE_1a4793bf90f5790b7c53308898f93aa212">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1RestoreSolver_1ae9484be71bbd91e29b8eee63d10e21f3">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1CalcNE_1a617bf8e5eac4dbfc4818384c3b5b454f">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1SpectralCube_1aae29248644d4eacc7b86e5954d4199e5">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1InitSpectralCube_1a04444452af403f87957a55cf54c0b6af">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1NESpectralCube_1a4f8d34d17697800c438d9583140f2f53">run</reimplementedby>
        <reimplementedby refid="classaskap_1_1JacalBPCalibrator_1a83eb45b3ee4a0507bc94f6e128e43a9b">run</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void askap::DaliugeApplication::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)=0</argsstring>
        <name>data_written</name>
        <reimplementedby refid="classaskap_1_1LoadParset_1acc371f47eee2a6d7722aa5fc941447ef">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1LoadNE_1a7f590e477167e33879e194536b2b776a">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1MajorCycle_1a414710a04f94eba9bc700d0c753fd10d">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1OutputParams_1a332d522a326085430161c072f4050a2e">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1LoadVis_1a0c3f7a021e270289529a7d9120c160e8">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1SolveNE_1a56e89329cb7a3f170a5bc1961f77b0e9">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1RestoreSolver_1aa7c872f8d80e1365ddb13b5e6ade166f">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1CalcNE_1a16fbe3340ce58366b80b9637bee43b96">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1SpectralCube_1a69d29ca7ccdb92622b459357ea8fdce8">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1InitSpectralCube_1aace986c0e0f0550191a4044397add4df">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1NESpectralCube_1a50878aefda749d769013cd7afd3853f5">data_written</reimplementedby>
        <reimplementedby refid="classaskap_1_1JacalBPCalibrator_1a6c7518da6c2313394269fec16e4eee47">data_written</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void askap::DaliugeApplication::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)=0</argsstring>
        <name>drop_completed</name>
        <reimplementedby refid="classaskap_1_1LoadParset_1a6cfeec6e1dbcde0cba14dbb5fdcd41c7">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1LoadNE_1a7cf1ad0b3920dbce90cb7abe9f53c3ba">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1MajorCycle_1afdff1c7c6b4f9c3e04047435495d8a4a">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1OutputParams_1a5cf5639194d82f6efee5bbf787473022">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1LoadVis_1a38952e2030fe754ae576df6bd419500a">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1SolveNE_1a3bba48ff44a9ba6d4e726d70a52f4f3b">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1RestoreSolver_1a530b08ee469c73122a0c5283363d37e7">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1CalcNE_1a19ed03a466a91634ad52b929913e57a9">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1SpectralCube_1a8f495291dd218bd90dda51d2e5c974a8">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1InitSpectralCube_1ab9ed02ea2c72f9e30eb2cd9481c64f99">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1NESpectralCube_1a0eff3d1ac564ad96ef2da58dade8670c">drop_completed</reimplementedby>
        <reimplementedby refid="classaskap_1_1JacalBPCalibrator_1a120c9a709422e7c9f98700877ab1c571">drop_completed</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a32da094f4a6e4ac920e397b4ea8ce2e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref></type>
        <definition>static ShPtr askap::DaliugeApplication::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This has to be static as we need to access it in the register even if there is not instantiated class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="73" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void askap::DaliugeApplication::dlg_app_running</definition>
        <argsstring>()</argsstring>
        <name>dlg_app_running</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="89" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void askap::DaliugeApplication::dlg_app_done</definition>
        <argsstring>(app_status status)</argsstring>
        <name>dlg_app_done</name>
        <param>
          <type>app_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="93" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>dlg_output_info &amp;</type>
        <definition>dlg_output_info&amp; askap::DaliugeApplication::output</definition>
        <argsstring>(size_t i)</argsstring>
        <name>output</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="97" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>dlg_output_info &amp;</type>
        <definition>dlg_output_info&amp; askap::DaliugeApplication::output</definition>
        <argsstring>(const std::string &amp;tag)</argsstring>
        <name>output</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="101" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="101" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool askap::DaliugeApplication::has_output</definition>
        <argsstring>(const std::string &amp;tag)</argsstring>
        <name>has_output</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="117" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="117" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; askap::DaliugeApplication::get_inputs</definition>
        <argsstring>(const std::string &amp;tag)</argsstring>
        <name>get_inputs</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="131" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="131" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>dlg_input_info &amp;</type>
        <definition>dlg_input_info&amp; askap::DaliugeApplication::input</definition>
        <argsstring>(size_t i)</argsstring>
        <name>input</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="145" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>dlg_input_info &amp;</type>
        <definition>dlg_input_info&amp; askap::DaliugeApplication::input</definition>
        <argsstring>(const std::string &amp;tag)</argsstring>
        <name>input</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="149" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="149" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool askap::DaliugeApplication::has_input</definition>
        <argsstring>(const std::string &amp;tag)</argsstring>
        <name>has_input</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="165" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="165" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int askap::DaliugeApplication::n_outputs</definition>
        <argsstring>()</argsstring>
        <name>n_outputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="179" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int askap::DaliugeApplication::n_inputs</definition>
        <argsstring>()</argsstring>
        <name>n_inputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/daliuge/DaliugeApplication.h" line="183" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="183" bodyend="185"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Daliuge application class. </para>    </briefdescription>
    <detaileddescription>
<para>This class encapsulates the functions required of a daliuge application as specified in dlg_app.h then exposes them as C functions </para>    </detaileddescription>
    <inheritancegraph>
      <node id="10">
        <label>askap::LoadVis</label>
        <link refid="classaskap_1_1LoadVis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>askap::InitSpectralCube</label>
        <link refid="classaskap_1_1InitSpectralCube"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>askap::NESpectralCube</label>
        <link refid="classaskap_1_1NESpectralCube"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>askap::RestoreSolver</label>
        <link refid="classaskap_1_1RestoreSolver"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>askap::SpectralCube</label>
        <link refid="classaskap_1_1SpectralCube"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>askap::LoadParset</label>
        <link refid="classaskap_1_1LoadParset"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>askap::MajorCycle</label>
        <link refid="classaskap_1_1MajorCycle"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>askap::SolveNE</label>
        <link refid="classaskap_1_1SolveNE"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>askap::OutputParams</label>
        <link refid="classaskap_1_1OutputParams"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>askap::CalcNE</label>
        <link refid="classaskap_1_1CalcNE"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>askap::LoadNE</label>
        <link refid="classaskap_1_1LoadNE"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
      <node id="7">
        <label>askap::JacalBPCalibrator</label>
        <link refid="classaskap_1_1JacalBPCalibrator"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="jacal/daliuge/DaliugeApplication.h" line="51" column="1" bodyfile="jacal/daliuge/DaliugeApplication.h" bodystart="51" bodyend="189"/>
    <listofallmembers>
      <member refid="classaskap_1_1DaliugeApplication_1a32da094f4a6e4ac920e397b4ea8ce2e7" prot="public" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c" prot="public" virt="pure-virtual"><scope>askap::DaliugeApplication</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa" prot="public" virt="pure-virtual"><scope>askap::DaliugeApplication</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>has_output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899" prot="public" virt="pure-virtual"><scope>askap::DaliugeApplication</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aac0d7e592bbc9d7b9f7f76eff56fbf9b" prot="private" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>raw_dlg_app</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635" prot="public" virt="pure-virtual"><scope>askap::DaliugeApplication</scope><name>run</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" prot="public" virt="non-virtual"><scope>askap::DaliugeApplication</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::DaliugeApplication</scope><name>~DaliugeApplication</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1DaliugeApplicationFactory" kind="class" language="C++" prot="public">
    <compoundname>askap::DaliugeApplicationFactory</compoundname>
    <includes refid="DaliugeApplicationFactory_8h" local="no">DaliugeApplicationFactory.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1DaliugeApplicationFactory_1a2437234a2d4b97ed7a5bb9a04b9ba128" prot="public" static="no">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>typedef DaliugeApplication::ShPtr askap::DaliugeApplicationFactory::DaliugeApplicationCreator(dlg_app_info *dlg_app)</definition>
        <argsstring>(dlg_app_info *dlg_app)</argsstring>
        <name>DaliugeApplicationCreator</name>
        <briefdescription>
<para>A function pointer to a DaliugeApplication you can have as many of these as you want as long as they obey this structure. i.e. they return a shared_pointer to a DaliugeApplication and they take an Application Name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.h" line="39" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classaskap_1_1DaliugeApplicationFactory_1a0f36178664e974c077121fc7fd80adf7" prot="private" static="yes" mutable="no">
        <type>std::recursive_mutex</type>
        <definition>std::recursive_mutex askap::DaliugeApplicationFactory::registry_lock</definition>
        <argsstring/>
        <name>registry_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.h" line="72" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1DaliugeApplicationFactory_1a8f249fe3709ebe9fa1354a6fda6b480c" prot="private" static="yes" mutable="no">
        <type>std::map&lt; std::string, <ref refid="classaskap_1_1DaliugeApplicationFactory_1a2437234a2d4b97ed7a5bb9a04b9ba128" kindref="member">DaliugeApplicationCreator</ref> * &gt;</type>
        <definition>std::map&lt; std::string, DaliugeApplicationFactory::DaliugeApplicationCreator * &gt; askap::DaliugeApplicationFactory::theirRegistry</definition>
        <argsstring/>
        <name>theirRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.h" line="73" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1DaliugeApplicationFactory_1a115fdd8c06704bdb16d15912215d6077" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::DaliugeApplicationFactory::registerDaliugeApplication</definition>
        <argsstring>(const std::string &amp;name, DaliugeApplicationCreator *creatorFunc)</argsstring>
        <name>registerDaliugeApplication</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classaskap_1_1DaliugeApplicationFactory_1a2437234a2d4b97ed7a5bb9a04b9ba128" kindref="member">DaliugeApplicationCreator</ref> *</type>
          <declname>creatorFunc</declname>
        </param>
        <briefdescription>
<para>Register a function creating a DaliugeApplication object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the DaliugeApplication. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>creatorFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to creator function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.h" line="44" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.cc" bodystart="76" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplicationFactory_1ac572613b4bbb84b2dbd0fb68f6b0d0b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::DaliugeApplicationFactory::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *dlg_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>dlg_app</declname>
        </param>
        <briefdescription>
<para>Try to create a non-standard DaliugeApplication. Its name is looked up in the creator function registry. If the drop name is unknown, a shared library with that name (in lowercase) is loaded and it executes its register&lt;name&gt; function which must register its creator function in the registry using function registerDaliugeApplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.h" line="56" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.cc" bodystart="87" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplicationFactory_1a77f6849aa85f78baf2584b4d5bc60cc2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::DaliugeApplicationFactory::make</definition>
        <argsstring>(dlg_app_info *dlg_app)</argsstring>
        <name>make</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>dlg_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.h" line="58" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.cc" bodystart="161" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1DaliugeApplicationFactory_1a569c5415aaa81348aacbaa001452821b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::DaliugeApplicationFactory::initial_population</definition>
        <argsstring>()</argsstring>
        <name>initial_population</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.h" line="60" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.cc" bodystart="130" bodyend="154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1DaliugeApplicationFactory_1a0071d2c01960b137fde2ca37a22a594c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::DaliugeApplicationFactory::DaliugeApplicationFactory</definition>
        <argsstring>()</argsstring>
        <name>DaliugeApplicationFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.h" line="62" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.cc" bodystart="73" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classaskap_1_1DaliugeApplicationFactory_1adfc86fe0444aa38d97670d2b1a9b60f0" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DaliugeApplicationType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void askap::DaliugeApplicationFactory::addPreDefinedDaliugeApplication</definition>
        <argsstring>()</argsstring>
        <name>addPreDefinedDaliugeApplication</name>
        <briefdescription>
<para>helper template method to add pre-defined Applications </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.h" line="66" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.h" bodystart="66" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Factory class for Daliuge Applications. </para>    </briefdescription>
    <detaileddescription>
<para>Contains a list of all applications and creates/instantiates the correct one based upon the "name" of the Daliuge DynLib drop </para>    </detaileddescription>
    <location file="jacal/factory/DaliugeApplicationFactory.h" line="31" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.h" bodystart="30" bodyend="74"/>
    <listofallmembers>
      <member refid="classaskap_1_1DaliugeApplicationFactory_1adfc86fe0444aa38d97670d2b1a9b60f0" prot="protected" virt="non-virtual"><scope>askap::DaliugeApplicationFactory</scope><name>addPreDefinedDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplicationFactory_1ac572613b4bbb84b2dbd0fb68f6b0d0b8" prot="public" virt="non-virtual"><scope>askap::DaliugeApplicationFactory</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplicationFactory_1a2437234a2d4b97ed7a5bb9a04b9ba128" prot="public" virt="non-virtual"><scope>askap::DaliugeApplicationFactory</scope><name>DaliugeApplicationCreator</name></member>
      <member refid="classaskap_1_1DaliugeApplicationFactory_1a0071d2c01960b137fde2ca37a22a594c" prot="public" virt="non-virtual"><scope>askap::DaliugeApplicationFactory</scope><name>DaliugeApplicationFactory</name></member>
      <member refid="classaskap_1_1DaliugeApplicationFactory_1a569c5415aaa81348aacbaa001452821b" prot="public" virt="non-virtual"><scope>askap::DaliugeApplicationFactory</scope><name>initial_population</name></member>
      <member refid="classaskap_1_1DaliugeApplicationFactory_1a77f6849aa85f78baf2584b4d5bc60cc2" prot="public" virt="non-virtual"><scope>askap::DaliugeApplicationFactory</scope><name>make</name></member>
      <member refid="classaskap_1_1DaliugeApplicationFactory_1a115fdd8c06704bdb16d15912215d6077" prot="public" virt="non-virtual"><scope>askap::DaliugeApplicationFactory</scope><name>registerDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplicationFactory_1a0f36178664e974c077121fc7fd80adf7" prot="private" virt="non-virtual"><scope>askap::DaliugeApplicationFactory</scope><name>registry_lock</name></member>
      <member refid="classaskap_1_1DaliugeApplicationFactory_1a8f249fe3709ebe9fa1354a6fda6b480c" prot="private" virt="non-virtual"><scope>askap::DaliugeApplicationFactory</scope><name>theirRegistry</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="structDaliugeApplicationWrapper" kind="struct" language="C++" prot="public">
    <compoundname>DaliugeApplicationWrapper</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structDaliugeApplicationWrapper_1ad42dbb24211ae8965dfd4e3b76da201f" prot="public" static="no" mutable="no">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">askap::DaliugeApplication::ShPtr</ref></type>
        <definition>askap::DaliugeApplication::ShPtr DaliugeApplicationWrapper::daliuge_app</definition>
        <argsstring/>
        <name>daliuge_app</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.cc" line="12" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="jacal/factory/Interface.cc" line="11" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="11" bodyend="13"/>
    <listofallmembers>
      <member refid="structDaliugeApplicationWrapper_1ad42dbb24211ae8965dfd4e3b76da201f" prot="public" virt="non-virtual"><scope>DaliugeApplicationWrapper</scope><name>daliuge_app</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1InitSpectralCube" kind="class" language="C++" prot="public">
    <compoundname>askap::InitSpectralCube</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="InitSpectralCube_8h" local="no">InitSpectralCube.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1InitSpectralCube_1a65a39eb309dc8f2de1cef987b28a2119" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1InitSpectralCube" kindref="compound">InitSpectralCube</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;InitSpectralCube&gt; askap::InitSpectralCube::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="46" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1InitSpectralCube_1a80ba979121d0e0587ccba08ef5e56742" prot="private" static="no" mutable="no">
        <type>scimath::Params::ShPtr</type>
        <definition>scimath::Params::ShPtr askap::InitSpectralCube::itsModel</definition>
        <argsstring/>
        <name>itsModel</name>
        <briefdescription>
<para>The model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="68" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1InitSpectralCube_1a40efed991c7082fa4beb5d6d43c253c1" prot="private" static="no" mutable="no">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::InitSpectralCube::itsParset</definition>
        <argsstring/>
        <name>itsParset</name>
        <briefdescription>
<para>Parameter set. </para>        </briefdescription>
        <detaileddescription>
<para>key value list of configuration options </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="72" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1InitSpectralCube_1ad68ea6c72cae4b5c1431545f13eeaa2b" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::InitSpectralCube::itsImageCube</definition>
        <argsstring/>
        <name>itsImageCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="74" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1InitSpectralCube_1a5c324a77def82cd739c173ca0823745a" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::InitSpectralCube::itsPSFCube</definition>
        <argsstring/>
        <name>itsPSFCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="75" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1InitSpectralCube_1af3309cbe85509704c79b796319b098a3" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::InitSpectralCube::itsResidualCube</definition>
        <argsstring/>
        <name>itsResidualCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="76" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1InitSpectralCube_1a541ed3ea128cd7d6b4fb763e3bcce756" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::InitSpectralCube::itsWeightsCube</definition>
        <argsstring/>
        <name>itsWeightsCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="77" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1InitSpectralCube_1a4cdd2a4cb380c804bb7c3768633d08d9" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::InitSpectralCube::itsPSFimageCube</definition>
        <argsstring/>
        <name>itsPSFimageCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="78" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1InitSpectralCube_1a4d92408a4b65f50d766298cfa619670d" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::InitSpectralCube::itsRestoredCube</definition>
        <argsstring/>
        <name>itsRestoredCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="79" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1InitSpectralCube_1a0450515e80dfdcb696c84e8937f9d718" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int askap::InitSpectralCube::itsChan</definition>
        <argsstring/>
        <name>itsChan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="81" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1InitSpectralCube_1a982b110220ec2c29f3335991c6b8bfbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::InitSpectralCube::InitSpectralCube</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>InitSpectralCube</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="48" column="1" bodyfile="jacal/factory/InitSpectralCube.cc" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1InitSpectralCube_1a41d01a7ed1931f0020847bf763f575f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::InitSpectralCube::~InitSpectralCube</definition>
        <argsstring>()</argsstring>
        <name>~InitSpectralCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="52" column="1" bodyfile="jacal/factory/InitSpectralCube.cc" bodystart="109" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1InitSpectralCube_1a1b437de313f52b5ed672abd322c9a05a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::InitSpectralCube::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="56" column="1" bodyfile="jacal/factory/InitSpectralCube.cc" bodystart="117" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1InitSpectralCube_1a04444452af403f87957a55cf54c0b6af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::InitSpectralCube::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>The width of a channel. THis does &lt;NOT&gt; take account of the variable width of Barycentric channels</para><para>these names need to match the spectral cube names - maybe put them in a header? </para>        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="58" column="1" bodyfile="jacal/factory/InitSpectralCube.cc" bodystart="138" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1InitSpectralCube_1aace986c0e0f0550191a4044397add4df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::InitSpectralCube::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="60" column="1" bodyfile="jacal/factory/InitSpectralCube.cc" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1InitSpectralCube_1ab9ed02ea2c72f9e30eb2cd9481c64f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::InitSpectralCube::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="62" column="1" bodyfile="jacal/factory/InitSpectralCube.cc" bodystart="221" bodyend="223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1InitSpectralCube_1a3b6c71a251778f6033a28cdcc8d0dfc9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::InitSpectralCube::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="50" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1InitSpectralCube_1a759c961601324a445f94d2aaad0e99e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::InitSpectralCube::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.h" line="54" column="1" bodyfile="jacal/factory/InitSpectralCube.cc" bodystart="112" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Build the output image cube. </para>    </briefdescription>
    <detaileddescription>
<para>This class builds the output cube is whatever format specified by the parset. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="22">
        <label>askap::InitSpectralCube</label>
        <link refid="classaskap_1_1InitSpectralCube"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="24">
        <label>askap::InitSpectralCube</label>
        <link refid="classaskap_1_1InitSpectralCube"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/InitSpectralCube.h" line="42" column="1" bodyfile="jacal/factory/InitSpectralCube.h" bodystart="40" bodyend="83"/>
    <listofallmembers>
      <member refid="classaskap_1_1InitSpectralCube_1a3b6c71a251778f6033a28cdcc8d0dfc9" prot="public" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a759c961601324a445f94d2aaad0e99e7" prot="public" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1aace986c0e0f0550191a4044397add4df" prot="public" virt="virtual"><scope>askap::InitSpectralCube</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1ab9ed02ea2c72f9e30eb2cd9481c64f99" prot="public" virt="virtual"><scope>askap::InitSpectralCube</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>has_output</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a1b437de313f52b5ed672abd322c9a05a" prot="public" virt="virtual"><scope>askap::InitSpectralCube</scope><name>init</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a982b110220ec2c29f3335991c6b8bfbd" prot="public" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>InitSpectralCube</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>input</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a0450515e80dfdcb696c84e8937f9d718" prot="private" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>itsChan</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1ad68ea6c72cae4b5c1431545f13eeaa2b" prot="private" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>itsImageCube</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a80ba979121d0e0587ccba08ef5e56742" prot="private" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>itsModel</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a40efed991c7082fa4beb5d6d43c253c1" prot="private" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>itsParset</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a5c324a77def82cd739c173ca0823745a" prot="private" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>itsPSFCube</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a4cdd2a4cb380c804bb7c3768633d08d9" prot="private" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>itsPSFimageCube</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1af3309cbe85509704c79b796319b098a3" prot="private" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>itsResidualCube</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a4d92408a4b65f50d766298cfa619670d" prot="private" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>itsRestoredCube</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a541ed3ea128cd7d6b4fb763e3bcce756" prot="private" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>itsWeightsCube</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>output</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a04444452af403f87957a55cf54c0b6af" prot="public" virt="virtual"><scope>askap::InitSpectralCube</scope><name>run</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a65a39eb309dc8f2de1cef987b28a2119" prot="public" virt="non-virtual"><scope>askap::InitSpectralCube</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::InitSpectralCube</scope><name>~DaliugeApplication</name></member>
      <member refid="classaskap_1_1InitSpectralCube_1a41d01a7ed1931f0020847bf763f575f4" prot="public" virt="virtual"><scope>askap::InitSpectralCube</scope><name>~InitSpectralCube</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1JacalBPCalibrator" kind="class" language="C++" prot="public">
    <compoundname>askap::JacalBPCalibrator</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1JacalBPCalibrator_1ae8d3ef8a66ee94fba65acae085c32f4f" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1JacalBPCalibrator" kindref="compound">JacalBPCalibrator</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;JacalBPCalibrator&gt; askap::JacalBPCalibrator::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="52" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1a36ae46f38b997b8f1b9537f96db2113e" prot="private" static="no" mutable="no">
        <type>askap::scimath::Params::ShPtr</type>
        <definition>askap::scimath::Params::ShPtr askap::JacalBPCalibrator::itsPerfectModel</definition>
        <argsstring/>
        <name>itsPerfectModel</name>
        <briefdescription>
<para>uncorrupted model </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="206" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1a2b17d4f5dce07f1b0f0da0fffacd9099" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int askap::JacalBPCalibrator::itsRefAntenna</definition>
        <argsstring/>
        <name>itsRefAntenna</name>
        <briefdescription>
<para>reference antenna (index) </para>        </briefdescription>
        <detaileddescription>
<para>Negative number means no referencing required </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="210" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1aefc35a02ae17bbdf1ae77e32cdc5ee55" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string askap::JacalBPCalibrator::itsRefGainXX</definition>
        <argsstring/>
        <name>itsRefGainXX</name>
        <briefdescription>
<para>name of the parameter taken as a reference </para>        </briefdescription>
        <detaileddescription>
<para>empty string means no referencing is required </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="218" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1adebb6ffc3676eeaf5f101e63a5161a40" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string askap::JacalBPCalibrator::itsRefGainYY</definition>
        <argsstring/>
        <name>itsRefGainYY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="219" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1a145b4f325f525c4b9dac0b128de5a07c" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; accessors::ICalSolutionSource &gt;</type>
        <definition>boost::shared_ptr&lt;accessors::ICalSolutionSource&gt; askap::JacalBPCalibrator::itsSolutionSource</definition>
        <argsstring/>
        <name>itsSolutionSource</name>
        <briefdescription>
<para>solution source to store the result </para>        </briefdescription>
        <detaileddescription>
<para>This object is initialised by the master. It stores the solution in parset file, casa table or a database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="224" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1afc3a7da6267807bb62187bff3fedec4c" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; synthesis::IMeasurementEquation const  &gt;</type>
        <definition>boost::shared_ptr&lt;synthesis::IMeasurementEquation const&gt; askap::JacalBPCalibrator::itsPerfectME</definition>
        <argsstring/>
        <name>itsPerfectME</name>
        <briefdescription>
<para>shared pointer to measurement equation correspondent to the perfect model </para>        </briefdescription>
        <detaileddescription>
<para>It is handy to store the perfect measurement equation, so it is not recreated every time for each solution interval. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="231" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1ab873570b334426a277406d4c3c3d51b9" prot="private" static="no" mutable="no">
        <type>scimath::MultiDimPosIter</type>
        <definition>scimath::MultiDimPosIter askap::JacalBPCalibrator::itsWorkUnitIterator</definition>
        <argsstring/>
        <name>itsWorkUnitIterator</name>
        <briefdescription>
<para>iterator over channels and beams </para>        </briefdescription>
        <detaileddescription>
<para>This class allows us to split work domain between a number of workers (=iteration chunks) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="235" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1a193acadbd53186d39ca871d72a73c6d1" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long askap::JacalBPCalibrator::itsSolutionID</definition>
        <argsstring/>
        <name>itsSolutionID</name>
        <briefdescription>
<para>solution ID to work with </para>        </briefdescription>
        <detaileddescription>
<para>This field should only be used if itsSolutionIDValid is true </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="239" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1a06358d2680ae0cd408b4d1225f824185" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool askap::JacalBPCalibrator::itsSolutionIDValid</definition>
        <argsstring/>
        <name>itsSolutionIDValid</name>
        <briefdescription>
<para>solution ID validity flag </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="242" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1aaefbbd75273d35c6ba0b05bb7c62460f" prot="private" static="no" mutable="no">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::JacalBPCalibrator::itsParset</definition>
        <argsstring/>
        <name>itsParset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="245" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1a43d6d27a1d3d9fe9945d48ee01376554" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int askap::JacalBPCalibrator::itsChan</definition>
        <argsstring/>
        <name>itsChan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="248" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1ad0cfc1b90c9eeb38ed0f6cbe68e2d491" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int askap::JacalBPCalibrator::itsBeam</definition>
        <argsstring/>
        <name>itsBeam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="251" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1ac4122bc9fa2826ca6cd0d43ae0e4a027" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool askap::JacalBPCalibrator::isMaster</definition>
        <argsstring/>
        <name>isMaster</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="255" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1af0eef5a5223a22887d8ff5ede25298b6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool askap::JacalBPCalibrator::isWorker</definition>
        <argsstring/>
        <name>isWorker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="256" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1ab4fcdc600445782de23f65f2fe7b2fdf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool askap::JacalBPCalibrator::isParallel</definition>
        <argsstring/>
        <name>isParallel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="257" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1a51eb8cace34862417293462ac82eb157" prot="private" static="no" mutable="no">
        <type>casacore::IPosition</type>
        <definition>casacore::IPosition askap::JacalBPCalibrator::freqInterval</definition>
        <argsstring/>
        <name>freqInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="260" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1a534e7215cf52bd3645afeecd84ab1762" prot="private" static="no" mutable="no">
        <type>casacore::IPosition</type>
        <definition>casacore::IPosition askap::JacalBPCalibrator::timeInterval</definition>
        <argsstring/>
        <name>timeInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="261" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1ac6e701a1f38ea29eba43ae399100b9c1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; askap::JacalBPCalibrator::itsMs</definition>
        <argsstring/>
        <name>itsMs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="265" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1abc88f85ba06c8ce8db7accdca494258f" prot="private" static="no" mutable="no">
        <type>askap::scimath::Solver::ShPtr</type>
        <definition>askap::scimath::Solver::ShPtr askap::JacalBPCalibrator::itsSolver</definition>
        <argsstring/>
        <name>itsSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="268" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1a29006140dae4dcdcdad4dc22252c5ce7" prot="private" static="no" mutable="no">
        <type>askap::scimath::Equation::ShPtr</type>
        <definition>askap::scimath::Equation::ShPtr askap::JacalBPCalibrator::itsEquation</definition>
        <argsstring/>
        <name>itsEquation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="270" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1a2a12369ca88e49870d5f070d769ec219" prot="private" static="no" mutable="no">
        <type>askap::scimath::Params::ShPtr</type>
        <definition>askap::scimath::Params::ShPtr askap::JacalBPCalibrator::itsModel</definition>
        <argsstring/>
        <name>itsModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="272" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1ad3318588d06e2997984d0e0be4a10025" prot="private" static="no" mutable="no">
        <type>askap::scimath::INormalEquations::ShPtr</type>
        <definition>askap::scimath::INormalEquations::ShPtr askap::JacalBPCalibrator::itsNe</definition>
        <argsstring/>
        <name>itsNe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="274" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1acfd455da0960ea3ec63f7448de9ee8c9" prot="private" static="no" mutable="no">
        <type>askap::synthesis::IVisGridder::ShPtr</type>
        <definition>askap::synthesis::IVisGridder::ShPtr askap::JacalBPCalibrator::itsGridder</definition>
        <argsstring/>
        <name>itsGridder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="276" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1JacalBPCalibrator_1ad02b10b8747139d11b18cdf76695871c" prot="private" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; askap::JacalBPCalibrator::itsModelInputs</definition>
        <argsstring/>
        <name>itsModelInputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="278" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a117c1878d3d684910ec9b8732d8fa706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::JacalBPCalibrator::JacalBPCalibrator</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>JacalBPCalibrator</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
<para>Constructor for Jacal application. </para>        </briefdescription>
        <detaileddescription>
<para>The parset is used to construct the internal state. We could also support construction from a python dictionary (for example). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">raw_app</parametername>
</parameternamelist>
<parameterdescription>
<para>Daliuge communication object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="54" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="95" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a4013f9a29cac8dfd1a41fb1c896b443c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::JacalBPCalibrator::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="60" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="128" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a83eb45b3ee4a0507bc94f6e128e43a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::JacalBPCalibrator::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Create solver in workers</para><para>initialise to iterate over given range</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">shape</parametername>
</parameternamelist>
<parameterdescription>
<para>shape of the volume to iterate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the origin </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>end position</para></parameterdescription>
</parameteritem>
</parameterlist>
FIXME: I could break this into two pieces as I have for the imaging - instead the BP calibrator does all it needs to do in a single drop. </para>        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="62" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="170" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a6c7518da6c2313394269fec16e4eee47" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="64" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="826" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a120c9a709422e7c9f98700877ab1c571" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="66" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="830" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1af117bb0add1a7e3da71b9227d0d00407" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const LOFAR::ParameterSet &amp;</type>
        <definition>const LOFAR::ParameterSet&amp; askap::JacalBPCalibrator::parset</definition>
        <argsstring>() const</argsstring>
        <name>parset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="69" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a14b32ddf976ad4b1f76ffcd410459dae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::setMeasurementSets</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;ms)</argsstring>
        <name>setMeasurementSets</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="73" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a3bdce0ba6bfedd0be2e2cc56788d5e4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt; &amp;</type>
        <definition>const std::vector&lt;std::string&gt;&amp; askap::JacalBPCalibrator::measurementSets</definition>
        <argsstring>() const</argsstring>
        <name>measurementSets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="75" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="75" bodyend="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1af930df657c00c479dc7f03c81b150c3e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::JacalBPCalibrator::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="56" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a36725dc71bf966866371c380944b3cf5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::JacalBPCalibrator::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="58" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="123" bodyend="126"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1ae82ef4391be535bdce8cae8a71dc686d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::calcNE</definition>
        <argsstring>()</argsstring>
        <name>calcNE</name>
        <briefdescription>
<para>Calculate the normal equations (runs in workers) </para>        </briefdescription>
        <detaileddescription>
<para>Model, either image-based or component-based, is used in conjunction with CalibrationME to calculate the generic normal equations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="87" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="532" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1adaf500fef2e24498a3ec41349463b8a4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::solveNE</definition>
        <argsstring>()</argsstring>
        <name>solveNE</name>
        <briefdescription>
<para>Solve the normal equations (runs in workers) </para>        </briefdescription>
        <detaileddescription>
<para>Parameters of the calibration problem are solved for here </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="91" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="573" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a740de3dd4fbc08140a22df036c1b9309" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::writeModel</definition>
        <argsstring>(const std::string &amp;postfix=std::string())</argsstring>
        <name>writeModel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>postfix</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
<para>Write the results (runs in master) </para>        </briefdescription>
        <detaileddescription>
<para>The solution (calibration parameters) is reported via solution accessor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">postfix</parametername>
</parameternamelist>
<parameterdescription>
<para>a string to be added to the file name (unused in this class)</para></parameterdescription>
</parameteritem>
</parameterlist>
The solution (calibration parameters) is reported via solution accessor </para>        </detaileddescription>
        <inbodydescription>
<para>solution accessor used to stage the results in memory</para><para>This object is initialised by the master. It provides a way to store the solutions in memory, until we write out at the end. </para>        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="96" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="624" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a43f3df335173c7e71f2ebb953636a502" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::createCalibrationME</definition>
        <argsstring>(const accessors::IDataSharedIter &amp;dsi, const boost::shared_ptr&lt; synthesis::IMeasurementEquation const &gt; &amp;perfectME)</argsstring>
        <name>createCalibrationME</name>
        <param>
          <type>const accessors::IDataSharedIter &amp;</type>
          <declname>dsi</declname>
        </param>
        <param>
          <type>const boost::shared_ptr&lt; synthesis::IMeasurementEquation const &gt; &amp;</type>
          <declname>perfectME</declname>
        </param>
        <briefdescription>
<para>create measurement equation </para>        </briefdescription>
        <detaileddescription>
<para>This method initialises itsEquation with shared pointer to a proper type. It uses internal flags to create a correct type (i.e. polarisation calibration or just antenna-based gains). Parameters are passed directly to the constructor of CalibrationME template. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dsi</parametername>
</parameternamelist>
<parameterdescription>
<para>data shared iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">perfectME</parametername>
</parameternamelist>
<parameterdescription>
<para>uncorrupted measurement equation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="105" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="663" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1aa309613c3b85900a1a5a1f2057feb0dd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::rotatePhases</definition>
        <argsstring>()</argsstring>
        <name>rotatePhases</name>
        <briefdescription>
<para>helper method to rotate all phases </para>        </briefdescription>
        <detaileddescription>
<para>This method rotates the phases of all gains in itsModel to have the phase of itsRefGain exactly 0. This operation does not seem to be necessary for SVD solvers, however it simplifies "human eye" analysis of the results (otherwise the phase degeneracy would make the solution different from the simulated gains). <simplesect kind="note"><para>The method throws exception if itsRefGain is not among the parameters of itsModel </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="116" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="696" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a551d04ab7b78bfc2cff01e232c2c43a4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double askap::JacalBPCalibrator::solutionTime</definition>
        <argsstring>() const</argsstring>
        <name>solutionTime</name>
        <briefdescription>
<para>helper method to extract solution time from NE. </para>        </briefdescription>
        <detaileddescription>
<para>To be able to time tag the calibration solutions we add start and stop times extracted from the dataset as metadata to normal equations. It allows us to send these times to the master, which ultimately writes the calibration solution. Otherwise, these times could only be obtained in workers who deal with the actual data. <simplesect kind="return"><para>solution time (seconds since 0 MJD) </para></simplesect>
<simplesect kind="note"><para>if no start/stop time metadata are present in the normal equations this method returns 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="127" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="738" bodyend="753"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a36e12b1c4730c677bc9f142e5e466699" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::JacalBPCalibrator::emptyDatasetKeyword</definition>
        <argsstring>(const LOFAR::ParameterSet &amp;parset)</argsstring>
        <name>emptyDatasetKeyword</name>
        <param>
          <type>const LOFAR::ParameterSet &amp;</type>
          <declname>parset</declname>
        </param>
        <briefdescription>
<para>helper method to remove the dataset name from a parset </para>        </briefdescription>
        <detaileddescription>
<para>We deal with multiple measurement sets in a dit different way from the other synthesis applications (they are not per worker here). This method allows to remove the string with measurement sets in the parset passed to base classes and replace it by empty string <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parset</parametername>
</parameternamelist>
<parameterdescription>
<para>input parset </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a copy without the dataset keyword </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="137" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="403" bodyend="408"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1ad42cc7789710c86e726ee2a08e1d5753" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::readModels</definition>
        <argsstring>() const</argsstring>
        <name>readModels</name>
        <briefdescription>
<para>read the model from parset file and populate itsPerfectModel </para>        </briefdescription>
        <detaileddescription>
<para>This method is common between several classes and probably should be pushed up in the class hierarchy </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="143" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a1db8ae6741a1429e57e93fe8f5b563fc" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>casacore::uInt</type>
        <definition>casacore::uInt askap::JacalBPCalibrator::nAnt</definition>
        <argsstring>() const</argsstring>
        <name>nAnt</name>
        <briefdescription>
<para>number of antennas to solve for </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of antennas to solve for </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="147" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a9769b69827173e01ca0ff7b0735a6ec9" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>casacore::uInt</type>
        <definition>casacore::uInt askap::JacalBPCalibrator::nBeam</definition>
        <argsstring>() const</argsstring>
        <name>nBeam</name>
        <briefdescription>
<para>number of beams to solve for </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of beams to solve for </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="151" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a6e2e6645c1d3eb2ff3aa74843993d4ac" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>casacore::uInt</type>
        <definition>casacore::uInt askap::JacalBPCalibrator::nChan</definition>
        <argsstring>() const</argsstring>
        <name>nChan</name>
        <briefdescription>
<para>number of channels to solve for </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of channels to solve for </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="155" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a4ffae6163bc7f8939185fe2fcc478ee5" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>casacore::uInt</type>
        <definition>casacore::uInt askap::JacalBPCalibrator::nChanPerRank</definition>
        <argsstring>() const</argsstring>
        <name>nChanPerRank</name>
        <briefdescription>
<para>number of channels to solve for </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of channels per rank </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="160" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1ad76aa53804a09cba6f969efb9c7c8aaf" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string askap::JacalBPCalibrator::dataColumn</definition>
        <argsstring>() const</argsstring>
        <name>dataColumn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="162" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a3f9200936b17e20b6f6a8089b3a38605" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; casacore::uInt, casacore::uInt &gt;</type>
        <definition>std::pair&lt; casacore::uInt, casacore::uInt &gt; askap::JacalBPCalibrator::currentBeamAndChannel</definition>
        <argsstring>() const</argsstring>
        <name>currentBeamAndChannel</name>
        <briefdescription>
<para>extract current beam/channel pair from the iterator </para>        </briefdescription>
        <detaileddescription>
<para>This method encapsulates interpretation of the output of itsWorkUnitIterator.cursor() for workers and in the serial mode. However, it extracts the current beam and channel info out of the model for the master in the parallel case. This is done because calibration data are sent to the master asynchronously and there is no way of knowing what iteration in the worker they correspond to without looking at the data. <simplesect kind="return"><para>pair of beam (first) and channel (second) indices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="170" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="431" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a889b951e59fe9eb6e098ccac11ea1942" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::invalidateSolution</definition>
        <argsstring>()</argsstring>
        <name>invalidateSolution</name>
        <briefdescription>
<para>helper method to invalidate current solution </para>        </briefdescription>
        <detaileddescription>
<para>helper method to invalidate curremt solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="173" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="564" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1ac044d4f95c807aae67186b411112ed89" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool askap::JacalBPCalibrator::validSolution</definition>
        <argsstring>() const</argsstring>
        <name>validSolution</name>
        <briefdescription>
<para>verify that the current solution is valid </para>        </briefdescription>
        <detaileddescription>
<para>We use a special keywork 'invalid' in the model to signal that a particular solution failed. for whatever reason. This flag is checked to avoid writing the solution (which would automatically set validity flag <simplesect kind="return"><para>true, if the current solution is valid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="181" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="417" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a30447c19ee4121f668640f0861c1ba9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::calcOne</definition>
        <argsstring>(const std::string &amp;ms, const casacore::uInt chan, const casacore::uInt beam)</argsstring>
        <name>calcOne</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ms</declname>
        </param>
        <param>
          <type>const casacore::uInt</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>const casacore::uInt</type>
          <declname>beam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate normal equations for one data set, channel and beam <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of data set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chan</parametername>
</parameternamelist>
<parameterdescription>
<para>channel to work with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">beam</parametername>
</parameternamelist>
<parameterdescription>
<para>beam to work with </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>FIXME: Not sure I need this ds.configureUVWMachineCache(uvwMachineCacheSize(),uvwMachineCacheTolerance()); </para>        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="187" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="759" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1ac38b3f6114015d39bee9f5411c5f69ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::sendModelToMaster</definition>
        <argsstring>()</argsstring>
        <name>sendModelToMaster</name>
        <briefdescription>
<para>send current model to the master </para>        </briefdescription>
        <detaileddescription>
<para>This method is supposed to be called from workers in the parallel mode and sends the current results to the master rank </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="192" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="459" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1a680a38caa951bcc56fad343767734c27" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::receiveModelFromWorker</definition>
        <argsstring>()</argsstring>
        <name>receiveModelFromWorker</name>
        <briefdescription>
<para>asynchronously receive model from one of the workers </para>        </briefdescription>
        <detaileddescription>
<para>This method is supposed to be used in the master rank in the parallel mode. It waits until the result becomes available from any of the workers and then stores it in itsModel. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="198" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="485" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1JacalBPCalibrator_1ad144f2f16c4a0d7bd8b1e1b4e5485ca7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::JacalBPCalibrator::receiveModelFromWorker</definition>
        <argsstring>(int input)</argsstring>
        <name>receiveModelFromWorker</name>
        <param>
          <type>int</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>asynchronously receive model from one of the workers </para>        </briefdescription>
        <detaileddescription>
<para>This method is supposed to be used in the master rank in the parallel mode. It waits until the result becomes available from a particular input and then stores it in itsModel. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.h" line="203" column="1" bodyfile="jacal/factory/JacalBPCalibrator.cc" bodystart="507" bodyend="527"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="27">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
      <node id="26">
        <label>askap::JacalBPCalibrator</label>
        <link refid="classaskap_1_1JacalBPCalibrator"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="29">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
      <node id="28">
        <label>askap::JacalBPCalibrator</label>
        <link refid="classaskap_1_1JacalBPCalibrator"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/JacalBPCalibrator.h" line="49" column="1" bodyfile="jacal/factory/JacalBPCalibrator.h" bodystart="48" bodyend="283"/>
    <listofallmembers>
      <member refid="classaskap_1_1JacalBPCalibrator_1af930df657c00c479dc7f03c81b150c3e" prot="public" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ae82ef4391be535bdce8cae8a71dc686d" prot="protected" virt="virtual"><scope>askap::JacalBPCalibrator</scope><name>calcNE</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a30447c19ee4121f668640f0861c1ba9f" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>calcOne</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a43f3df335173c7e71f2ebb953636a502" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>createCalibrationME</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a36725dc71bf966866371c380944b3cf5" prot="public" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a3f9200936b17e20b6f6a8089b3a38605" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>currentBeamAndChannel</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a6c7518da6c2313394269fec16e4eee47" prot="public" virt="virtual"><scope>askap::JacalBPCalibrator</scope><name>data_written</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ad76aa53804a09cba6f969efb9c7c8aaf" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>dataColumn</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a120c9a709422e7c9f98700877ab1c571" prot="public" virt="virtual"><scope>askap::JacalBPCalibrator</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a36e12b1c4730c677bc9f142e5e466699" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>emptyDatasetKeyword</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a51eb8cace34862417293462ac82eb157" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>freqInterval</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>has_output</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a4013f9a29cac8dfd1a41fb1c896b443c" prot="public" virt="virtual"><scope>askap::JacalBPCalibrator</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>input</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a889b951e59fe9eb6e098ccac11ea1942" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>invalidateSolution</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ac4122bc9fa2826ca6cd0d43ae0e4a027" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>isMaster</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ab4fcdc600445782de23f65f2fe7b2fdf" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>isParallel</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1af0eef5a5223a22887d8ff5ede25298b6" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>isWorker</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ad0cfc1b90c9eeb38ed0f6cbe68e2d491" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsBeam</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a43d6d27a1d3d9fe9945d48ee01376554" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsChan</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a29006140dae4dcdcdad4dc22252c5ce7" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsEquation</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1acfd455da0960ea3ec63f7448de9ee8c9" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsGridder</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a2a12369ca88e49870d5f070d769ec219" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsModel</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ad02b10b8747139d11b18cdf76695871c" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsModelInputs</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ac6e701a1f38ea29eba43ae399100b9c1" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsMs</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ad3318588d06e2997984d0e0be4a10025" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsNe</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1aaefbbd75273d35c6ba0b05bb7c62460f" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsParset</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1afc3a7da6267807bb62187bff3fedec4c" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsPerfectME</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a36ae46f38b997b8f1b9537f96db2113e" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsPerfectModel</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a2b17d4f5dce07f1b0f0da0fffacd9099" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsRefAntenna</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1aefc35a02ae17bbdf1ae77e32cdc5ee55" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsRefGainXX</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1adebb6ffc3676eeaf5f101e63a5161a40" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsRefGainYY</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a193acadbd53186d39ca871d72a73c6d1" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsSolutionID</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a06358d2680ae0cd408b4d1225f824185" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsSolutionIDValid</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a145b4f325f525c4b9dac0b128de5a07c" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsSolutionSource</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1abc88f85ba06c8ce8db7accdca494258f" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsSolver</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ab873570b334426a277406d4c3c3d51b9" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>itsWorkUnitIterator</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a117c1878d3d684910ec9b8732d8fa706" prot="public" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>JacalBPCalibrator</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a3bdce0ba6bfedd0be2e2cc56788d5e4c" prot="public" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>measurementSets</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a1db8ae6741a1429e57e93fe8f5b563fc" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>nAnt</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a9769b69827173e01ca0ff7b0735a6ec9" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>nBeam</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a6e2e6645c1d3eb2ff3aa74843993d4ac" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>nChan</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a4ffae6163bc7f8939185fe2fcc478ee5" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>nChanPerRank</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>output</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1af117bb0add1a7e3da71b9227d0d00407" prot="public" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>parset</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ad42cc7789710c86e726ee2a08e1d5753" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>readModels</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a680a38caa951bcc56fad343767734c27" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>receiveModelFromWorker</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ad144f2f16c4a0d7bd8b1e1b4e5485ca7" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>receiveModelFromWorker</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1aa309613c3b85900a1a5a1f2057feb0dd" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>rotatePhases</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a83eb45b3ee4a0507bc94f6e128e43a9b" prot="public" virt="virtual"><scope>askap::JacalBPCalibrator</scope><name>run</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ac38b3f6114015d39bee9f5411c5f69ad" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>sendModelToMaster</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a14b32ddf976ad4b1f76ffcd410459dae" prot="public" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>setMeasurementSets</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ae8d3ef8a66ee94fba65acae085c32f4f" prot="public" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a551d04ab7b78bfc2cff01e232c2c43a4" prot="protected" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>solutionTime</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1adaf500fef2e24498a3ec41349463b8a4" prot="protected" virt="virtual"><scope>askap::JacalBPCalibrator</scope><name>solveNE</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a534e7215cf52bd3645afeecd84ab1762" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>timeInterval</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1ac044d4f95c807aae67186b411112ed89" prot="private" virt="non-virtual"><scope>askap::JacalBPCalibrator</scope><name>validSolution</name></member>
      <member refid="classaskap_1_1JacalBPCalibrator_1a740de3dd4fbc08140a22df036c1b9309" prot="protected" virt="virtual"><scope>askap::JacalBPCalibrator</scope><name>writeModel</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::JacalBPCalibrator</scope><name>~DaliugeApplication</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1LoadNE" kind="class" language="C++" prot="public">
    <compoundname>askap::LoadNE</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="LoadNE_8h" local="no">LoadNE.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1LoadNE_1a51cf60193da9632ced38cd34d9a8139e" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1LoadNE" kindref="compound">LoadNE</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;LoadNE&gt; askap::LoadNE::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadNE.h" line="36" column="1" bodyfile="jacal/factory/LoadNE.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1LoadNE_1a80e1e1a16440daf4393d3ba6c1b92ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::LoadNE::LoadNE</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>LoadNE</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadNE.h" line="38" column="1" bodyfile="jacal/factory/LoadNE.cc" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadNE_1ab99abbcf2087d6cdc3c9bdadb00cdc8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::LoadNE::~LoadNE</definition>
        <argsstring>()</argsstring>
        <name>~LoadNE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadNE.h" line="42" column="1" bodyfile="jacal/factory/LoadNE.cc" bodystart="87" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadNE_1a01e9bb86833223440b77d322af9a55ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::LoadNE::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadNE.h" line="46" column="1" bodyfile="jacal/factory/LoadNE.cc" bodystart="95" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadNE_1a5332a30ca3cfa84ec564d5faee027f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::LoadNE::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadNE.h" line="48" column="1" bodyfile="jacal/factory/LoadNE.cc" bodystart="112" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadNE_1a7f590e477167e33879e194536b2b776a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::LoadNE::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadNE.h" line="50" column="1" bodyfile="jacal/factory/LoadNE.cc" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadNE_1a7cf1ad0b3920dbce90cb7abe9f53c3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::LoadNE::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadNE.h" line="52" column="1" bodyfile="jacal/factory/LoadNE.cc" bodystart="140" bodyend="142"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1LoadNE_1a9bb1e83c8c894289706056ce1b761110" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::LoadNE::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadNE.h" line="40" column="1" bodyfile="jacal/factory/LoadNE.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadNE_1a65c59ae4e0a9cf706dfaf20be22be872" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::LoadNE::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadNE.h" line="44" column="1" bodyfile="jacal/factory/LoadNE.cc" bodystart="90" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Example calss that simply loads Normal Equations from a drop. </para>    </briefdescription>
    <detaileddescription>
<para>Just accepts the drop </para>    </detaileddescription>
    <inheritancegraph>
      <node id="30">
        <label>askap::LoadNE</label>
        <link refid="classaskap_1_1LoadNE"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="32">
        <label>askap::LoadNE</label>
        <link refid="classaskap_1_1LoadNE"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/LoadNE.h" line="32" column="1" bodyfile="jacal/factory/LoadNE.h" bodystart="30" bodyend="68"/>
    <listofallmembers>
      <member refid="classaskap_1_1LoadNE_1a9bb1e83c8c894289706056ce1b761110" prot="public" virt="non-virtual"><scope>askap::LoadNE</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1LoadNE_1a65c59ae4e0a9cf706dfaf20be22be872" prot="public" virt="non-virtual"><scope>askap::LoadNE</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::LoadNE</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1LoadNE_1a7f590e477167e33879e194536b2b776a" prot="public" virt="virtual"><scope>askap::LoadNE</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1LoadNE_1a7cf1ad0b3920dbce90cb7abe9f53c3ba" prot="public" virt="virtual"><scope>askap::LoadNE</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>has_output</name></member>
      <member refid="classaskap_1_1LoadNE_1a01e9bb86833223440b77d322af9a55ed" prot="public" virt="virtual"><scope>askap::LoadNE</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>input</name></member>
      <member refid="classaskap_1_1LoadNE_1a80e1e1a16440daf4393d3ba6c1b92ff9" prot="public" virt="non-virtual"><scope>askap::LoadNE</scope><name>LoadNE</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::LoadNE</scope><name>output</name></member>
      <member refid="classaskap_1_1LoadNE_1a5332a30ca3cfa84ec564d5faee027f74" prot="public" virt="virtual"><scope>askap::LoadNE</scope><name>run</name></member>
      <member refid="classaskap_1_1LoadNE_1a51cf60193da9632ced38cd34d9a8139e" prot="public" virt="non-virtual"><scope>askap::LoadNE</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::LoadNE</scope><name>~DaliugeApplication</name></member>
      <member refid="classaskap_1_1LoadNE_1ab99abbcf2087d6cdc3c9bdadb00cdc8a" prot="public" virt="virtual"><scope>askap::LoadNE</scope><name>~LoadNE</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1LoadParset" kind="class" language="C++" prot="public">
    <compoundname>askap::LoadParset</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="LoadParset_8h" local="no">LoadParset.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1LoadParset_1af34804df7b413e7e23b41fcad71f3365" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1LoadParset" kindref="compound">LoadParset</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;LoadParset&gt; askap::LoadParset::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadParset.h" line="28" column="1" bodyfile="jacal/factory/LoadParset.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1LoadParset_1ab658378b381e0b3399642634e5ef3436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::LoadParset::LoadParset</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>LoadParset</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadParset.h" line="30" column="1" bodyfile="jacal/factory/LoadParset.cc" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadParset_1a5e1535f2cd0717f8ad755c011ec171b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::LoadParset::~LoadParset</definition>
        <argsstring>()</argsstring>
        <name>~LoadParset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadParset.h" line="34" column="1" bodyfile="jacal/factory/LoadParset.cc" bodystart="31" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadParset_1a5c6e6c83bd5251c36b4b820412b170ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::LoadParset::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadParset.h" line="38" column="1" bodyfile="jacal/factory/LoadParset.cc" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadParset_1a96426e090fbccdb47b3b807ee932825a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::LoadParset::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadParset.h" line="40" column="1" bodyfile="jacal/factory/LoadParset.cc" bodystart="44" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadParset_1acc371f47eee2a6d7722aa5fc941447ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::LoadParset::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadParset.h" line="42" column="1" bodyfile="jacal/factory/LoadParset.cc" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadParset_1a6cfeec6e1dbcde0cba14dbb5fdcd41c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::LoadParset::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadParset.h" line="44" column="1" bodyfile="jacal/factory/LoadParset.cc" bodystart="66" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1LoadParset_1a1f8ff0f1cc500ebb4e6837e72411f05e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::LoadParset::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadParset.h" line="32" column="1" bodyfile="jacal/factory/LoadParset.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadParset_1a7725e97b2efbe793b23308d7f9cb11ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::LoadParset::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadParset.h" line="36" column="1" bodyfile="jacal/factory/LoadParset.cc" bodystart="34" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Loads a configuration. </para>    </briefdescription>
    <detaileddescription>
<para>Loads a configuration from a file drop and generates a LOFAR::ParameterSet </para>    </detaileddescription>
    <inheritancegraph>
      <node id="34">
        <label>askap::LoadParset</label>
        <link refid="classaskap_1_1LoadParset"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="36">
        <label>askap::LoadParset</label>
        <link refid="classaskap_1_1LoadParset"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/LoadParset.h" line="24" column="1" bodyfile="jacal/factory/LoadParset.h" bodystart="22" bodyend="48"/>
    <listofallmembers>
      <member refid="classaskap_1_1LoadParset_1a1f8ff0f1cc500ebb4e6837e72411f05e" prot="public" virt="non-virtual"><scope>askap::LoadParset</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1LoadParset_1a7725e97b2efbe793b23308d7f9cb11ee" prot="public" virt="non-virtual"><scope>askap::LoadParset</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::LoadParset</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1LoadParset_1acc371f47eee2a6d7722aa5fc941447ef" prot="public" virt="virtual"><scope>askap::LoadParset</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1LoadParset_1a6cfeec6e1dbcde0cba14dbb5fdcd41c7" prot="public" virt="virtual"><scope>askap::LoadParset</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>has_output</name></member>
      <member refid="classaskap_1_1LoadParset_1a5c6e6c83bd5251c36b4b820412b170ca" prot="public" virt="virtual"><scope>askap::LoadParset</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>input</name></member>
      <member refid="classaskap_1_1LoadParset_1ab658378b381e0b3399642634e5ef3436" prot="public" virt="non-virtual"><scope>askap::LoadParset</scope><name>LoadParset</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::LoadParset</scope><name>output</name></member>
      <member refid="classaskap_1_1LoadParset_1a96426e090fbccdb47b3b807ee932825a" prot="public" virt="virtual"><scope>askap::LoadParset</scope><name>run</name></member>
      <member refid="classaskap_1_1LoadParset_1af34804df7b413e7e23b41fcad71f3365" prot="public" virt="non-virtual"><scope>askap::LoadParset</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::LoadParset</scope><name>~DaliugeApplication</name></member>
      <member refid="classaskap_1_1LoadParset_1a5e1535f2cd0717f8ad755c011ec171b7" prot="public" virt="virtual"><scope>askap::LoadParset</scope><name>~LoadParset</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1LoadVis" kind="class" language="C++" prot="public">
    <compoundname>askap::LoadVis</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="LoadVis_8h" local="no">LoadVis.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1LoadVis_1a15bc14663e3a660f88b14e2599c02a5b" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1LoadVis" kindref="compound">LoadVis</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;LoadVis&gt; askap::LoadVis::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="38" column="1" bodyfile="jacal/factory/LoadVis.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1LoadVis_1a7991e4e517b16d6b8e2a887ff587bd3c" prot="private" static="no" mutable="no">
        <type>askap::scimath::Params::ShPtr</type>
        <definition>askap::scimath::Params::ShPtr askap::LoadVis::itsModel</definition>
        <argsstring/>
        <name>itsModel</name>
        <briefdescription>
<para>The model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="62" column="1" bodyfile="jacal/factory/LoadVis.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1LoadVis_1a8fa55cb72a0cf299cd5e3d1069fd7a41" prot="private" static="no" mutable="no">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::LoadVis::itsParset</definition>
        <argsstring/>
        <name>itsParset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="65" column="1" bodyfile="jacal/factory/LoadVis.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1LoadVis_1a2ed60a0298db71c5135fbbcf86db1b49" prot="private" static="no" mutable="no">
        <type>casacore::IPosition</type>
        <definition>casacore::IPosition askap::LoadVis::freqInterval</definition>
        <argsstring/>
        <name>freqInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="69" column="1" bodyfile="jacal/factory/LoadVis.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1LoadVis_1a2b119fa41c8c889bcb724d29cc2779ad" prot="private" static="no" mutable="no">
        <type>casacore::IPosition</type>
        <definition>casacore::IPosition askap::LoadVis::timeInterval</definition>
        <argsstring/>
        <name>timeInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="72" column="1" bodyfile="jacal/factory/LoadVis.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1LoadVis_1afb3e257c8eebc43a1ca537ec703421c2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; casacore::MVDirection &gt;</type>
        <definition>std::vector&lt;casacore::MVDirection&gt; askap::LoadVis::itsTangent</definition>
        <argsstring/>
        <name>itsTangent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="75" column="1" bodyfile="jacal/factory/LoadVis.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1LoadVis_1ae2faf09d7117f5b351427005dc6a90d1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int askap::LoadVis::itsChan</definition>
        <argsstring/>
        <name>itsChan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="77" column="1" bodyfile="jacal/factory/LoadVis.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1LoadVis_1a1c9c888233c09b2b37f7ee7e23c9e93f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::LoadVis::LoadVis</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>LoadVis</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="40" column="1" bodyfile="jacal/factory/LoadVis.cc" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadVis_1ac81ecf0dcf73dba06b34a2a743b04607" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::LoadVis::~LoadVis</definition>
        <argsstring>()</argsstring>
        <name>~LoadVis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="44" column="1" bodyfile="jacal/factory/LoadVis.cc" bodystart="86" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadVis_1a457b6e83405798b5266ae3dd0dd76f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::LoadVis::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="48" column="1" bodyfile="jacal/factory/LoadVis.cc" bodystart="94" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadVis_1a702b9675ad4047c1b76cb6794e772841" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::LoadVis::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Create the specified images from the definition in the parameter set. We can solve for any number of images at once (but you may/will run out of memory!) </para>        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="50" column="1" bodyfile="jacal/factory/LoadVis.cc" bodystart="135" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadVis_1a0c3f7a021e270289529a7d9120c160e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::LoadVis::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="52" column="1" bodyfile="jacal/factory/LoadVis.cc" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadVis_1a38952e2030fe754ae576df6bd419500a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::LoadVis::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="54" column="1" bodyfile="jacal/factory/LoadVis.cc" bodystart="267" bodyend="270"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1LoadVis_1aa74dba30ea69d8900528b30210cd82fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::LoadVis::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="42" column="1" bodyfile="jacal/factory/LoadVis.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadVis_1a800d563188fa2470b1da5b2e2e66e73b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::LoadVis::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="46" column="1" bodyfile="jacal/factory/LoadVis.cc" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1LoadVis_1a3dae9d5cef4cb14ed9b39ead654cbc9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; askap::LoadVis::getDatasets</definition>
        <argsstring>(const LOFAR::ParameterSet &amp;parset)</argsstring>
        <name>getDatasets</name>
        <param>
          <type>const LOFAR::ParameterSet &amp;</type>
          <declname>parset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.h" line="56" column="1" bodyfile="jacal/factory/LoadVis.cc" bodystart="272" bodyend="298"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Loads visibility set. </para>    </briefdescription>
    <detaileddescription>
<para>Loads a configuration from a file drop and a visibility set from a casacore::Measurement Set </para>    </detaileddescription>
    <inheritancegraph>
      <node id="38">
        <label>askap::LoadVis</label>
        <link refid="classaskap_1_1LoadVis"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="40">
        <label>askap::LoadVis</label>
        <link refid="classaskap_1_1LoadVis"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/LoadVis.h" line="34" column="1" bodyfile="jacal/factory/LoadVis.h" bodystart="32" bodyend="88"/>
    <listofallmembers>
      <member refid="classaskap_1_1LoadVis_1aa74dba30ea69d8900528b30210cd82fd" prot="public" virt="non-virtual"><scope>askap::LoadVis</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1LoadVis_1a800d563188fa2470b1da5b2e2e66e73b" prot="public" virt="non-virtual"><scope>askap::LoadVis</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::LoadVis</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1LoadVis_1a0c3f7a021e270289529a7d9120c160e8" prot="public" virt="virtual"><scope>askap::LoadVis</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1LoadVis_1a38952e2030fe754ae576df6bd419500a" prot="public" virt="virtual"><scope>askap::LoadVis</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1LoadVis_1a2ed60a0298db71c5135fbbcf86db1b49" prot="private" virt="non-virtual"><scope>askap::LoadVis</scope><name>freqInterval</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1LoadVis_1a3dae9d5cef4cb14ed9b39ead654cbc9c" prot="public" virt="non-virtual"><scope>askap::LoadVis</scope><name>getDatasets</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>has_output</name></member>
      <member refid="classaskap_1_1LoadVis_1a457b6e83405798b5266ae3dd0dd76f2b" prot="public" virt="virtual"><scope>askap::LoadVis</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>input</name></member>
      <member refid="classaskap_1_1LoadVis_1ae2faf09d7117f5b351427005dc6a90d1" prot="private" virt="non-virtual"><scope>askap::LoadVis</scope><name>itsChan</name></member>
      <member refid="classaskap_1_1LoadVis_1a7991e4e517b16d6b8e2a887ff587bd3c" prot="private" virt="non-virtual"><scope>askap::LoadVis</scope><name>itsModel</name></member>
      <member refid="classaskap_1_1LoadVis_1a8fa55cb72a0cf299cd5e3d1069fd7a41" prot="private" virt="non-virtual"><scope>askap::LoadVis</scope><name>itsParset</name></member>
      <member refid="classaskap_1_1LoadVis_1afb3e257c8eebc43a1ca537ec703421c2" prot="private" virt="non-virtual"><scope>askap::LoadVis</scope><name>itsTangent</name></member>
      <member refid="classaskap_1_1LoadVis_1a1c9c888233c09b2b37f7ee7e23c9e93f" prot="public" virt="non-virtual"><scope>askap::LoadVis</scope><name>LoadVis</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::LoadVis</scope><name>output</name></member>
      <member refid="classaskap_1_1LoadVis_1a702b9675ad4047c1b76cb6794e772841" prot="public" virt="virtual"><scope>askap::LoadVis</scope><name>run</name></member>
      <member refid="classaskap_1_1LoadVis_1a15bc14663e3a660f88b14e2599c02a5b" prot="public" virt="non-virtual"><scope>askap::LoadVis</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1LoadVis_1a2b119fa41c8c889bcb724d29cc2779ad" prot="private" virt="non-virtual"><scope>askap::LoadVis</scope><name>timeInterval</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::LoadVis</scope><name>~DaliugeApplication</name></member>
      <member refid="classaskap_1_1LoadVis_1ac81ecf0dcf73dba06b34a2a743b04607" prot="public" virt="virtual"><scope>askap::LoadVis</scope><name>~LoadVis</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1MajorCycle" kind="class" language="C++" prot="public">
    <compoundname>askap::MajorCycle</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="MajorCycle_8h" local="no">MajorCycle.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1MajorCycle_1a665d14d829de15ca686212a57d5de2ea" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1MajorCycle" kindref="compound">MajorCycle</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;MajorCycle&gt; askap::MajorCycle::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="37" column="1" bodyfile="jacal/factory/MajorCycle.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1MajorCycle_1a28f6a0cee116f7ac3323bc9b55cb1acc" prot="private" static="no" mutable="no">
        <type>askap::scimath::Params::ShPtr</type>
        <definition>askap::scimath::Params::ShPtr askap::MajorCycle::itsModel</definition>
        <argsstring/>
        <name>itsModel</name>
        <briefdescription>
<para>The model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="61" column="1" bodyfile="jacal/factory/MajorCycle.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1MajorCycle_1a6a11d9555e69cc250ca7137788e159bb" prot="private" static="no" mutable="no">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::MajorCycle::itsParset</definition>
        <argsstring/>
        <name>itsParset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="64" column="1" bodyfile="jacal/factory/MajorCycle.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1MajorCycle_1a1b561941d388c9674970c3ab0266f161" prot="private" static="no" mutable="no">
        <type>casacore::IPosition</type>
        <definition>casacore::IPosition askap::MajorCycle::freqInterval</definition>
        <argsstring/>
        <name>freqInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="68" column="1" bodyfile="jacal/factory/MajorCycle.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1MajorCycle_1a7a587741dcfcb6289af5bcb5b9d2f7fb" prot="private" static="no" mutable="no">
        <type>casacore::IPosition</type>
        <definition>casacore::IPosition askap::MajorCycle::timeInterval</definition>
        <argsstring/>
        <name>timeInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="71" column="1" bodyfile="jacal/factory/MajorCycle.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1MajorCycle_1a2d754d8c232ccdcf2f7fe5475fbe9bdb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; casacore::MVDirection &gt;</type>
        <definition>std::vector&lt;casacore::MVDirection&gt; askap::MajorCycle::itsTangent</definition>
        <argsstring/>
        <name>itsTangent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="74" column="1" bodyfile="jacal/factory/MajorCycle.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1MajorCycle_1a3447fe4841d78e5469b875c32efe8da2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int askap::MajorCycle::itsChan</definition>
        <argsstring/>
        <name>itsChan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="76" column="1" bodyfile="jacal/factory/MajorCycle.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1MajorCycle_1ac43a82a8d9c601417503dae8b3a03079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::MajorCycle::MajorCycle</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>MajorCycle</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="39" column="1" bodyfile="jacal/factory/MajorCycle.cc" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1MajorCycle_1a2631bdcc52520cda920144d62d8de3f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::MajorCycle::~MajorCycle</definition>
        <argsstring>()</argsstring>
        <name>~MajorCycle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="43" column="1" bodyfile="jacal/factory/MajorCycle.cc" bodystart="86" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1MajorCycle_1a65db2521a701c58c64e63ea46e849fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::MajorCycle::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="47" column="1" bodyfile="jacal/factory/MajorCycle.cc" bodystart="94" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1MajorCycle_1ae618bdf8100d7fc83907d42fb49f332b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::MajorCycle::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Create the specified images from the definition in the parameter set. We can solve for any number of images at once (but you may/will run out of memory!) </para>        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="49" column="1" bodyfile="jacal/factory/MajorCycle.cc" bodystart="135" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1MajorCycle_1a414710a04f94eba9bc700d0c753fd10d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::MajorCycle::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="51" column="1" bodyfile="jacal/factory/MajorCycle.cc" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1MajorCycle_1afdff1c7c6b4f9c3e04047435495d8a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::MajorCycle::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="53" column="1" bodyfile="jacal/factory/MajorCycle.cc" bodystart="267" bodyend="270"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1MajorCycle_1af74b6381c8ff866755c141df22e4fa1b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::MajorCycle::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="41" column="1" bodyfile="jacal/factory/MajorCycle.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1MajorCycle_1a9b44d7720d009123018a1d161f93ffd5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::MajorCycle::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.h" line="45" column="1" bodyfile="jacal/factory/MajorCycle.cc" bodystart="89" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Loads visibility set. </para>    </briefdescription>
    <detaileddescription>
<para>Loads a configuration from a file drop and a visibility set from a casacore::Measurement Set </para>    </detaileddescription>
    <inheritancegraph>
      <node id="42">
        <label>askap::MajorCycle</label>
        <link refid="classaskap_1_1MajorCycle"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="44">
        <label>askap::MajorCycle</label>
        <link refid="classaskap_1_1MajorCycle"/>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/MajorCycle.h" line="33" column="1" bodyfile="jacal/factory/MajorCycle.h" bodystart="31" bodyend="87"/>
    <listofallmembers>
      <member refid="classaskap_1_1MajorCycle_1af74b6381c8ff866755c141df22e4fa1b" prot="public" virt="non-virtual"><scope>askap::MajorCycle</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1MajorCycle_1a9b44d7720d009123018a1d161f93ffd5" prot="public" virt="non-virtual"><scope>askap::MajorCycle</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::MajorCycle</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1MajorCycle_1a414710a04f94eba9bc700d0c753fd10d" prot="public" virt="virtual"><scope>askap::MajorCycle</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1MajorCycle_1afdff1c7c6b4f9c3e04047435495d8a4a" prot="public" virt="virtual"><scope>askap::MajorCycle</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1MajorCycle_1a1b561941d388c9674970c3ab0266f161" prot="private" virt="non-virtual"><scope>askap::MajorCycle</scope><name>freqInterval</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>has_output</name></member>
      <member refid="classaskap_1_1MajorCycle_1a65db2521a701c58c64e63ea46e849fa2" prot="public" virt="virtual"><scope>askap::MajorCycle</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>input</name></member>
      <member refid="classaskap_1_1MajorCycle_1a3447fe4841d78e5469b875c32efe8da2" prot="private" virt="non-virtual"><scope>askap::MajorCycle</scope><name>itsChan</name></member>
      <member refid="classaskap_1_1MajorCycle_1a28f6a0cee116f7ac3323bc9b55cb1acc" prot="private" virt="non-virtual"><scope>askap::MajorCycle</scope><name>itsModel</name></member>
      <member refid="classaskap_1_1MajorCycle_1a6a11d9555e69cc250ca7137788e159bb" prot="private" virt="non-virtual"><scope>askap::MajorCycle</scope><name>itsParset</name></member>
      <member refid="classaskap_1_1MajorCycle_1a2d754d8c232ccdcf2f7fe5475fbe9bdb" prot="private" virt="non-virtual"><scope>askap::MajorCycle</scope><name>itsTangent</name></member>
      <member refid="classaskap_1_1MajorCycle_1ac43a82a8d9c601417503dae8b3a03079" prot="public" virt="non-virtual"><scope>askap::MajorCycle</scope><name>MajorCycle</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::MajorCycle</scope><name>output</name></member>
      <member refid="classaskap_1_1MajorCycle_1ae618bdf8100d7fc83907d42fb49f332b" prot="public" virt="virtual"><scope>askap::MajorCycle</scope><name>run</name></member>
      <member refid="classaskap_1_1MajorCycle_1a665d14d829de15ca686212a57d5de2ea" prot="public" virt="non-virtual"><scope>askap::MajorCycle</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1MajorCycle_1a7a587741dcfcb6289af5bcb5b9d2f7fb" prot="private" virt="non-virtual"><scope>askap::MajorCycle</scope><name>timeInterval</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::MajorCycle</scope><name>~DaliugeApplication</name></member>
      <member refid="classaskap_1_1MajorCycle_1a2631bdcc52520cda920144d62d8de3f3" prot="public" virt="virtual"><scope>askap::MajorCycle</scope><name>~MajorCycle</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1NESpectralCube" kind="class" language="C++" prot="public">
    <compoundname>askap::NESpectralCube</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="NESpectralCube_8h" local="no">NESpectralCube.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1NESpectralCube_1af2f2a3efbda8e76419e28e64e6f2c44d" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1NESpectralCube" kindref="compound">NESpectralCube</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;NESpectralCube&gt; askap::NESpectralCube::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="48" column="1" bodyfile="jacal/factory/NESpectralCube.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1NESpectralCube_1a40957e6e10500a26a58f652b5cdf856d" prot="private" static="no" mutable="no">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::NESpectralCube::itsParset</definition>
        <argsstring/>
        <name>itsParset</name>
        <briefdescription>
<para>Parameter set. </para>        </briefdescription>
        <detaileddescription>
<para>key value list of configuration options </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="73" column="1" bodyfile="jacal/factory/NESpectralCube.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1NESpectralCube_1aa18603cfea087c4069552ee3a21071f2" prot="private" static="no" mutable="no">
        <type>scimath::ImagingNormalEquations::ShPtr</type>
        <definition>scimath::ImagingNormalEquations::ShPtr askap::NESpectralCube::itsNe</definition>
        <argsstring/>
        <name>itsNe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="77" column="1" bodyfile="jacal/factory/NESpectralCube.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1NESpectralCube_1a3d1164250f639d4719e34865bd604bbb" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::NESpectralCube::itsNECube</definition>
        <argsstring/>
        <name>itsNECube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="79" column="1" bodyfile="jacal/factory/NESpectralCube.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1NESpectralCube_1abcb51adfde01bd0f99f99adb48bb50f7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int askap::NESpectralCube::itsChan</definition>
        <argsstring/>
        <name>itsChan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="81" column="1" bodyfile="jacal/factory/NESpectralCube.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1NESpectralCube_1a7b6d79378d07209c53b8f91fa1196f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::NESpectralCube::NESpectralCube</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>NESpectralCube</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="50" column="1" bodyfile="jacal/factory/NESpectralCube.cc" bodystart="99" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NESpectralCube_1a223b169409cb3b1f6dd7fdab8abaaa48" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::NESpectralCube::~NESpectralCube</definition>
        <argsstring>()</argsstring>
        <name>~NESpectralCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="54" column="1" bodyfile="jacal/factory/NESpectralCube.cc" bodystart="110" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NESpectralCube_1a5b7442fc0db70bf07551cb139032ccdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::NESpectralCube::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="58" column="1" bodyfile="jacal/factory/NESpectralCube.cc" bodystart="118" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NESpectralCube_1a4f8d34d17697800c438d9583140f2f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::NESpectralCube::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>The width of a channel. THis does &lt;NOT&gt; take account of the variable width of Barycentric channels</para><para>FIXME: eventually I'll put this in a cube ... but for now </para>        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="60" column="1" bodyfile="jacal/factory/NESpectralCube.cc" bodystart="145" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NESpectralCube_1a50878aefda749d769013cd7afd3853f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::NESpectralCube::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="62" column="1" bodyfile="jacal/factory/NESpectralCube.cc" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NESpectralCube_1a0eff3d1ac564ad96ef2da58dade8670c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::NESpectralCube::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="64" column="1" bodyfile="jacal/factory/NESpectralCube.cc" bodystart="268" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NESpectralCube_1ac93435dd7d2b5137aefe8663c75c2a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::NESpectralCube::handleImageParams</definition>
        <argsstring>()</argsstring>
        <name>handleImageParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="66" column="1" bodyfile="jacal/factory/NESpectralCube.cc" bodystart="272" bodyend="375"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1NESpectralCube_1a4519ad7fe6234f0b16a29630963efe10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::NESpectralCube::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="52" column="1" bodyfile="jacal/factory/NESpectralCube.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NESpectralCube_1aea427e37492dc31e5ea101e8402c4846" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::NESpectralCube::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.h" line="56" column="1" bodyfile="jacal/factory/NESpectralCube.cc" bodystart="113" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Build an output image cube from input NormalEquations. </para>    </briefdescription>
    <detaileddescription>
<para>This class builds the output cube is whatever format specified by the parset. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="46">
        <label>askap::NESpectralCube</label>
        <link refid="classaskap_1_1NESpectralCube"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="48">
        <label>askap::NESpectralCube</label>
        <link refid="classaskap_1_1NESpectralCube"/>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/NESpectralCube.h" line="44" column="1" bodyfile="jacal/factory/NESpectralCube.h" bodystart="42" bodyend="83"/>
    <listofallmembers>
      <member refid="classaskap_1_1NESpectralCube_1a4519ad7fe6234f0b16a29630963efe10" prot="public" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1NESpectralCube_1aea427e37492dc31e5ea101e8402c4846" prot="public" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1NESpectralCube_1a50878aefda749d769013cd7afd3853f5" prot="public" virt="virtual"><scope>askap::NESpectralCube</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1NESpectralCube_1a0eff3d1ac564ad96ef2da58dade8670c" prot="public" virt="virtual"><scope>askap::NESpectralCube</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1NESpectralCube_1ac93435dd7d2b5137aefe8663c75c2a3a" prot="public" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>handleImageParams</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>has_output</name></member>
      <member refid="classaskap_1_1NESpectralCube_1a5b7442fc0db70bf07551cb139032ccdd" prot="public" virt="virtual"><scope>askap::NESpectralCube</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>input</name></member>
      <member refid="classaskap_1_1NESpectralCube_1abcb51adfde01bd0f99f99adb48bb50f7" prot="private" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>itsChan</name></member>
      <member refid="classaskap_1_1NESpectralCube_1aa18603cfea087c4069552ee3a21071f2" prot="private" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>itsNe</name></member>
      <member refid="classaskap_1_1NESpectralCube_1a3d1164250f639d4719e34865bd604bbb" prot="private" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>itsNECube</name></member>
      <member refid="classaskap_1_1NESpectralCube_1a40957e6e10500a26a58f652b5cdf856d" prot="private" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>itsParset</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1NESpectralCube_1a7b6d79378d07209c53b8f91fa1196f9d" prot="public" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>NESpectralCube</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>output</name></member>
      <member refid="classaskap_1_1NESpectralCube_1a4f8d34d17697800c438d9583140f2f53" prot="public" virt="virtual"><scope>askap::NESpectralCube</scope><name>run</name></member>
      <member refid="classaskap_1_1NESpectralCube_1af2f2a3efbda8e76419e28e64e6f2c44d" prot="public" virt="non-virtual"><scope>askap::NESpectralCube</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::NESpectralCube</scope><name>~DaliugeApplication</name></member>
      <member refid="classaskap_1_1NESpectralCube_1a223b169409cb3b1f6dd7fdab8abaaa48" prot="public" virt="virtual"><scope>askap::NESpectralCube</scope><name>~NESpectralCube</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1NEUtils" kind="class" language="C++" prot="public">
    <compoundname>askap::NEUtils</compoundname>
    <includes refid="NEUtils_8h" local="no">NEUtils.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1NEUtils_1af37076515f041a4434a62703d57ca004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::NEUtils::NEUtils</definition>
        <argsstring>()=delete</argsstring>
        <name>NEUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1a26fa04612049d842195a2b6f11ed16d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::NEUtils::~NEUtils</definition>
        <argsstring>()=delete</argsstring>
        <name>~NEUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1NEUtils_1a29d64cdf9d20d809240d889bfdbf65aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::NEUtils::receiveNE</definition>
        <argsstring>(askap::scimath::ImagingNormalEquations::ShPtr, dlg_input_info &amp;input)</argsstring>
        <name>receiveNE</name>
        <param>
          <type>askap::scimath::ImagingNormalEquations::ShPtr</type>
          <defname>itsNE</defname>
        </param>
        <param>
          <type>dlg_input_info &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="56" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="190" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1adce71ae442f3ad70988f9cc3c9c9591a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::NEUtils::receiveParams</definition>
        <argsstring>(askap::scimath::Params::ShPtr, dlg_input_info &amp;input)</argsstring>
        <name>receiveParams</name>
        <param>
          <type>askap::scimath::Params::ShPtr</type>
          <defname>Params</defname>
        </param>
        <param>
          <type>dlg_input_info &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="58" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="236" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1ae85ac73dc0afa9294ac0edd36454d436" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::NEUtils::sendNE</definition>
        <argsstring>(askap::scimath::ImagingNormalEquations::ShPtr itsNe, dlg_output_info &amp;output)</argsstring>
        <name>sendNE</name>
        <param>
          <type>askap::scimath::ImagingNormalEquations::ShPtr</type>
          <declname>itsNe</declname>
        </param>
        <param>
          <type>dlg_output_info &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="61" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="205" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1ad60f0ec046fc30d8649e7f9066608b93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::NEUtils::sendParams</definition>
        <argsstring>(askap::scimath::Params::ShPtr params, dlg_output_info &amp;output)</argsstring>
        <name>sendParams</name>
        <param>
          <type>askap::scimath::Params::ShPtr</type>
          <declname>params</declname>
        </param>
        <param>
          <type>dlg_output_info &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="63" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="220" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1a4bfcb363f43552599d5d8fb5f6203304" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::NEUtils::addMissingParameters</definition>
        <argsstring>(LOFAR::ParameterSet &amp;parset, const int chan=0)</argsstring>
        <name>addMissingParameters</name>
        <param>
          <type>LOFAR::ParameterSet &amp;</type>
          <declname>parset</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="66" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="254" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1a439319d18fe0a823209130b580781243" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; askap::NEUtils::getDatasets</definition>
        <argsstring>(const LOFAR::ParameterSet &amp;parset)</argsstring>
        <name>getDatasets</name>
        <param>
          <type>const LOFAR::ParameterSet &amp;</type>
          <declname>parset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="68" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="412" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1ad4ede5052cae471934cae80ae349fb5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int askap::NEUtils::getChan</definition>
        <argsstring>(char *uid)</argsstring>
        <name>getChan</name>
        <param>
          <type>char *</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="70" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="161" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1acb457ba0fd258dbc5e40a909e09aebdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int askap::NEUtils::getNChan</definition>
        <argsstring>(LOFAR::ParameterSet &amp;parset)</argsstring>
        <name>getNChan</name>
        <param>
          <type>LOFAR::ParameterSet &amp;</type>
          <declname>parset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="72" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="81" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1ad36eb141da76654623aa7fdd0f190ce7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double askap::NEUtils::getChanWidth</definition>
        <argsstring>(LOFAR::ParameterSet &amp;parset, int chan)</argsstring>
        <name>getChanWidth</name>
        <param>
          <type>LOFAR::ParameterSet &amp;</type>
          <declname>parset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="74" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="91" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1a013ee04d5e2cc2de9f2362a1b670506c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double askap::NEUtils::getFrequency</definition>
        <argsstring>(LOFAR::ParameterSet &amp;parset, int chan=0, bool barycentre=false)</argsstring>
        <name>getFrequency</name>
        <param>
          <type>LOFAR::ParameterSet &amp;</type>
          <declname>parset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>barycentre</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="76" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="101" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1NEUtils_1ab8a3a4fd387a08fbbf2fba61d220da77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::NEUtils::readModels</definition>
        <argsstring>(const LOFAR::ParameterSet &amp;parset, const scimath::Params::ShPtr &amp;pModel)</argsstring>
        <name>readModels</name>
        <param>
          <type>const LOFAR::ParameterSet &amp;</type>
          <declname>parset</declname>
        </param>
        <param>
          <type>const scimath::Params::ShPtr &amp;</type>
          <declname>pModel</declname>
        </param>
        <briefdescription>
<para>read the models a parset file to the given params object </para>        </briefdescription>
        <detaileddescription>
<para>The model can be composed from both images and components. This method populates Params object by adding model data read from the parset file. The model is given by shared pointer because the same method can be used for both simulations and calibration (the former populates itsModel, the latter populates itsPerfectModel) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parset</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a LOFAR parameter set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pModel</parametername>
</parameternamelist>
<parameterdescription>
<para>shared pointer to the params object (must exist) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="89" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="440" bodyend="508"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A set of static utilities. </para>    </briefdescription>
    <detaileddescription>
<para>These are just a set of static functions I use more than once </para>    </detaileddescription>
    <location file="jacal/factory/NEUtils.h" line="46" column="1" bodyfile="jacal/factory/NEUtils.h" bodystart="44" bodyend="97"/>
    <listofallmembers>
      <member refid="classaskap_1_1NEUtils_1a4bfcb363f43552599d5d8fb5f6203304" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>addMissingParameters</name></member>
      <member refid="classaskap_1_1NEUtils_1ad4ede5052cae471934cae80ae349fb5a" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>getChan</name></member>
      <member refid="classaskap_1_1NEUtils_1ad36eb141da76654623aa7fdd0f190ce7" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>getChanWidth</name></member>
      <member refid="classaskap_1_1NEUtils_1a439319d18fe0a823209130b580781243" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>getDatasets</name></member>
      <member refid="classaskap_1_1NEUtils_1a013ee04d5e2cc2de9f2362a1b670506c" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>getFrequency</name></member>
      <member refid="classaskap_1_1NEUtils_1acb457ba0fd258dbc5e40a909e09aebdc" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>getNChan</name></member>
      <member refid="classaskap_1_1NEUtils_1af37076515f041a4434a62703d57ca004" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>NEUtils</name></member>
      <member refid="classaskap_1_1NEUtils_1ab8a3a4fd387a08fbbf2fba61d220da77" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>readModels</name></member>
      <member refid="classaskap_1_1NEUtils_1a29d64cdf9d20d809240d889bfdbf65aa" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>receiveNE</name></member>
      <member refid="classaskap_1_1NEUtils_1adce71ae442f3ad70988f9cc3c9c9591a" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>receiveParams</name></member>
      <member refid="classaskap_1_1NEUtils_1ae85ac73dc0afa9294ac0edd36454d436" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>sendNE</name></member>
      <member refid="classaskap_1_1NEUtils_1ad60f0ec046fc30d8649e7f9066608b93" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>sendParams</name></member>
      <member refid="classaskap_1_1NEUtils_1a26fa04612049d842195a2b6f11ed16d5" prot="public" virt="non-virtual"><scope>askap::NEUtils</scope><name>~NEUtils</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1OutputParams" kind="class" language="C++" prot="public">
    <compoundname>askap::OutputParams</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="OutputParams_8h" local="no">OutputParams.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1OutputParams_1ab2b3866f1bac31873d3925bebb19239f" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1OutputParams" kindref="compound">OutputParams</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;OutputParams&gt; askap::OutputParams::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="38" column="1" bodyfile="jacal/factory/OutputParams.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1OutputParams_1afaf09936a3db3c81a3e3bc381b5babb6" prot="private" static="no" mutable="no">
        <type>scimath::Params::ShPtr</type>
        <definition>scimath::Params::ShPtr askap::OutputParams::itsModel</definition>
        <argsstring/>
        <name>itsModel</name>
        <briefdescription>
<para>The model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="61" column="1" bodyfile="jacal/factory/OutputParams.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1OutputParams_1aefdca7bd94932ac6420d968515889ec2" prot="private" static="no" mutable="no">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::OutputParams::itsParset</definition>
        <argsstring/>
        <name>itsParset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="64" column="1" bodyfile="jacal/factory/OutputParams.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1OutputParams_1aae98ea008506f2c35a130d1fb3ac0956" prot="private" static="no" mutable="no">
        <type>scimath::ImagingNormalEquations::ShPtr</type>
        <definition>scimath::ImagingNormalEquations::ShPtr askap::OutputParams::itsNe</definition>
        <argsstring/>
        <name>itsNe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="68" column="1" bodyfile="jacal/factory/OutputParams.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1OutputParams_1abf7dc32840a9c1e6379fe4c1f349ab8f" prot="private" static="no" mutable="no">
        <type>scimath::Solver::ShPtr</type>
        <definition>scimath::Solver::ShPtr askap::OutputParams::itsSolver</definition>
        <argsstring/>
        <name>itsSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="72" column="1" bodyfile="jacal/factory/OutputParams.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1OutputParams_1ae27fbc54dbd99cad253941a904643563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::OutputParams::OutputParams</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>OutputParams</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="40" column="1" bodyfile="jacal/factory/OutputParams.cc" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1OutputParams_1a8389ea3753c3fa19f26dc1d587c1aa22" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::OutputParams::~OutputParams</definition>
        <argsstring>()</argsstring>
        <name>~OutputParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="44" column="1" bodyfile="jacal/factory/OutputParams.cc" bodystart="90" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1OutputParams_1a3a09d2b22cc2c97515b86fedf1e969b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::OutputParams::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="48" column="1" bodyfile="jacal/factory/OutputParams.cc" bodystart="98" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1OutputParams_1a1e8bded42c6a9f7bc72365e7d5efdc15" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::OutputParams::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="50" column="1" bodyfile="jacal/factory/OutputParams.cc" bodystart="119" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1OutputParams_1a332d522a326085430161c072f4050a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::OutputParams::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="52" column="1" bodyfile="jacal/factory/OutputParams.cc" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1OutputParams_1a5cf5639194d82f6efee5bbf787473022" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::OutputParams::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="54" column="1" bodyfile="jacal/factory/OutputParams.cc" bodystart="180" bodyend="182"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1OutputParams_1abddd41afa458649cd722f7f487dc2296" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::OutputParams::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="42" column="1" bodyfile="jacal/factory/OutputParams.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1OutputParams_1a5b0eb8e1b25ca7774f79770fa9f498cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::OutputParams::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.h" line="46" column="1" bodyfile="jacal/factory/OutputParams.cc" bodystart="93" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Outputs the Params class as images. </para>    </briefdescription>
    <detaileddescription>
<para>This drop actually generates the output images based upon the contents of the Params object </para>    </detaileddescription>
    <inheritancegraph>
      <node id="52">
        <label>askap::OutputParams</label>
        <link refid="classaskap_1_1OutputParams"/>
        <childnode refid="53" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="54">
        <label>askap::OutputParams</label>
        <link refid="classaskap_1_1OutputParams"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/OutputParams.h" line="34" column="1" bodyfile="jacal/factory/OutputParams.h" bodystart="32" bodyend="82"/>
    <listofallmembers>
      <member refid="classaskap_1_1OutputParams_1abddd41afa458649cd722f7f487dc2296" prot="public" virt="non-virtual"><scope>askap::OutputParams</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1OutputParams_1a5b0eb8e1b25ca7774f79770fa9f498cb" prot="public" virt="non-virtual"><scope>askap::OutputParams</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::OutputParams</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1OutputParams_1a332d522a326085430161c072f4050a2e" prot="public" virt="virtual"><scope>askap::OutputParams</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1OutputParams_1a5cf5639194d82f6efee5bbf787473022" prot="public" virt="virtual"><scope>askap::OutputParams</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>has_output</name></member>
      <member refid="classaskap_1_1OutputParams_1a3a09d2b22cc2c97515b86fedf1e969b2" prot="public" virt="virtual"><scope>askap::OutputParams</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>input</name></member>
      <member refid="classaskap_1_1OutputParams_1afaf09936a3db3c81a3e3bc381b5babb6" prot="private" virt="non-virtual"><scope>askap::OutputParams</scope><name>itsModel</name></member>
      <member refid="classaskap_1_1OutputParams_1aae98ea008506f2c35a130d1fb3ac0956" prot="private" virt="non-virtual"><scope>askap::OutputParams</scope><name>itsNe</name></member>
      <member refid="classaskap_1_1OutputParams_1aefdca7bd94932ac6420d968515889ec2" prot="private" virt="non-virtual"><scope>askap::OutputParams</scope><name>itsParset</name></member>
      <member refid="classaskap_1_1OutputParams_1abf7dc32840a9c1e6379fe4c1f349ab8f" prot="private" virt="non-virtual"><scope>askap::OutputParams</scope><name>itsSolver</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::OutputParams</scope><name>output</name></member>
      <member refid="classaskap_1_1OutputParams_1ae27fbc54dbd99cad253941a904643563" prot="public" virt="non-virtual"><scope>askap::OutputParams</scope><name>OutputParams</name></member>
      <member refid="classaskap_1_1OutputParams_1a1e8bded42c6a9f7bc72365e7d5efdc15" prot="public" virt="virtual"><scope>askap::OutputParams</scope><name>run</name></member>
      <member refid="classaskap_1_1OutputParams_1ab2b3866f1bac31873d3925bebb19239f" prot="public" virt="non-virtual"><scope>askap::OutputParams</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::OutputParams</scope><name>~DaliugeApplication</name></member>
      <member refid="classaskap_1_1OutputParams_1a8389ea3753c3fa19f26dc1d587c1aa22" prot="public" virt="virtual"><scope>askap::OutputParams</scope><name>~OutputParams</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1RestoreSolver" kind="class" language="C++" prot="public">
    <compoundname>askap::RestoreSolver</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="RestoreSolver_8h" local="no">RestoreSolver.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1RestoreSolver_1a68c08961987a6afff4ac4df2183af021" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1RestoreSolver" kindref="compound">RestoreSolver</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;RestoreSolver&gt; askap::RestoreSolver::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="40" column="1" bodyfile="jacal/factory/RestoreSolver.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1RestoreSolver_1acf7fc7e60f38b4807376c5c6a0fb631b" prot="private" static="no" mutable="no">
        <type>scimath::Params::ShPtr</type>
        <definition>scimath::Params::ShPtr askap::RestoreSolver::itsModel</definition>
        <argsstring/>
        <name>itsModel</name>
        <briefdescription>
<para>The model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="63" column="1" bodyfile="jacal/factory/RestoreSolver.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1RestoreSolver_1a653e0dad39920306251ded08f51a00fe" prot="private" static="no" mutable="no">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::RestoreSolver::itsParset</definition>
        <argsstring/>
        <name>itsParset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="66" column="1" bodyfile="jacal/factory/RestoreSolver.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1RestoreSolver_1ae6e0409c698fe21929564e5f85a5cf0c" prot="private" static="no" mutable="no">
        <type>scimath::ImagingNormalEquations::ShPtr</type>
        <definition>scimath::ImagingNormalEquations::ShPtr askap::RestoreSolver::itsNe</definition>
        <argsstring/>
        <name>itsNe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="70" column="1" bodyfile="jacal/factory/RestoreSolver.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1RestoreSolver_1a143a3d38d090e202db144ef54edf41bd" prot="private" static="no" mutable="no">
        <type>scimath::Solver::ShPtr</type>
        <definition>scimath::Solver::ShPtr askap::RestoreSolver::itsSolver</definition>
        <argsstring/>
        <name>itsSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="74" column="1" bodyfile="jacal/factory/RestoreSolver.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1RestoreSolver_1a24357f39b44f72b0f1fc0d957ab97675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::RestoreSolver::RestoreSolver</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>RestoreSolver</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="42" column="1" bodyfile="jacal/factory/RestoreSolver.cc" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1RestoreSolver_1a0ec396f55fa955f6dfb6a342a07d1699" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::RestoreSolver::~RestoreSolver</definition>
        <argsstring>()</argsstring>
        <name>~RestoreSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="46" column="1" bodyfile="jacal/factory/RestoreSolver.cc" bodystart="91" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1RestoreSolver_1a78c01f3deb392479c44403dec2e6bd6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::RestoreSolver::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="50" column="1" bodyfile="jacal/factory/RestoreSolver.cc" bodystart="99" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1RestoreSolver_1ae9484be71bbd91e29b8eee63d10e21f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::RestoreSolver::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="52" column="1" bodyfile="jacal/factory/RestoreSolver.cc" bodystart="116" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1RestoreSolver_1aa7c872f8d80e1365ddb13b5e6ade166f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::RestoreSolver::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="54" column="1" bodyfile="jacal/factory/RestoreSolver.cc" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1RestoreSolver_1a530b08ee469c73122a0c5283363d37e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::RestoreSolver::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="56" column="1" bodyfile="jacal/factory/RestoreSolver.cc" bodystart="226" bodyend="228"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1RestoreSolver_1a457d49a00fae63b0a04bf772c2ea9773" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::RestoreSolver::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="44" column="1" bodyfile="jacal/factory/RestoreSolver.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1RestoreSolver_1a691837e325f080abfc7e9af09d464ca2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::RestoreSolver::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.h" line="48" column="1" bodyfile="jacal/factory/RestoreSolver.cc" bodystart="94" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements an ASKAP Solver. </para>    </briefdescription>
    <detaileddescription>
<para>This takes a configuration and a set of normal equations and uses the Solver requested in in the ParameterSet to produce an ouput model. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="56">
        <label>askap::RestoreSolver</label>
        <link refid="classaskap_1_1RestoreSolver"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="58">
        <label>askap::RestoreSolver</label>
        <link refid="classaskap_1_1RestoreSolver"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/RestoreSolver.h" line="36" column="1" bodyfile="jacal/factory/RestoreSolver.h" bodystart="34" bodyend="84"/>
    <listofallmembers>
      <member refid="classaskap_1_1RestoreSolver_1a457d49a00fae63b0a04bf772c2ea9773" prot="public" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1RestoreSolver_1a691837e325f080abfc7e9af09d464ca2" prot="public" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1RestoreSolver_1aa7c872f8d80e1365ddb13b5e6ade166f" prot="public" virt="virtual"><scope>askap::RestoreSolver</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1RestoreSolver_1a530b08ee469c73122a0c5283363d37e7" prot="public" virt="virtual"><scope>askap::RestoreSolver</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>has_output</name></member>
      <member refid="classaskap_1_1RestoreSolver_1a78c01f3deb392479c44403dec2e6bd6c" prot="public" virt="virtual"><scope>askap::RestoreSolver</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>input</name></member>
      <member refid="classaskap_1_1RestoreSolver_1acf7fc7e60f38b4807376c5c6a0fb631b" prot="private" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>itsModel</name></member>
      <member refid="classaskap_1_1RestoreSolver_1ae6e0409c698fe21929564e5f85a5cf0c" prot="private" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>itsNe</name></member>
      <member refid="classaskap_1_1RestoreSolver_1a653e0dad39920306251ded08f51a00fe" prot="private" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>itsParset</name></member>
      <member refid="classaskap_1_1RestoreSolver_1a143a3d38d090e202db144ef54edf41bd" prot="private" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>itsSolver</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>output</name></member>
      <member refid="classaskap_1_1RestoreSolver_1a24357f39b44f72b0f1fc0d957ab97675" prot="public" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>RestoreSolver</name></member>
      <member refid="classaskap_1_1RestoreSolver_1ae9484be71bbd91e29b8eee63d10e21f3" prot="public" virt="virtual"><scope>askap::RestoreSolver</scope><name>run</name></member>
      <member refid="classaskap_1_1RestoreSolver_1a68c08961987a6afff4ac4df2183af021" prot="public" virt="non-virtual"><scope>askap::RestoreSolver</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::RestoreSolver</scope><name>~DaliugeApplication</name></member>
      <member refid="classaskap_1_1RestoreSolver_1a0ec396f55fa955f6dfb6a342a07d1699" prot="public" virt="virtual"><scope>askap::RestoreSolver</scope><name>~RestoreSolver</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1SolveNE" kind="class" language="C++" prot="public">
    <compoundname>askap::SolveNE</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="SolveNE_8h" local="no">SolveNE.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1SolveNE_1a688b29326934b50a6198253802e6dbbf" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1SolveNE" kindref="compound">SolveNE</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;SolveNE&gt; askap::SolveNE::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="40" column="1" bodyfile="jacal/factory/SolveNE.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1SolveNE_1aef2c32165ecc2689e6e6d12ea3d9f72d" prot="private" static="no" mutable="no">
        <type>scimath::Params::ShPtr</type>
        <definition>scimath::Params::ShPtr askap::SolveNE::itsModel</definition>
        <argsstring/>
        <name>itsModel</name>
        <briefdescription>
<para>The model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="63" column="1" bodyfile="jacal/factory/SolveNE.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SolveNE_1a7c023331714ccc1d8fa432f19e12d5a0" prot="private" static="no" mutable="no">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::SolveNE::itsParset</definition>
        <argsstring/>
        <name>itsParset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="66" column="1" bodyfile="jacal/factory/SolveNE.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SolveNE_1a96c2121db1fa74c616b7e9bb97c41aec" prot="private" static="no" mutable="no">
        <type>scimath::ImagingNormalEquations::ShPtr</type>
        <definition>scimath::ImagingNormalEquations::ShPtr askap::SolveNE::itsNe</definition>
        <argsstring/>
        <name>itsNe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="70" column="1" bodyfile="jacal/factory/SolveNE.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SolveNE_1a96ebcafb85be6e403adcde4b321e53ea" prot="private" static="no" mutable="no">
        <type>scimath::Solver::ShPtr</type>
        <definition>scimath::Solver::ShPtr askap::SolveNE::itsSolver</definition>
        <argsstring/>
        <name>itsSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="74" column="1" bodyfile="jacal/factory/SolveNE.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1SolveNE_1af6a1c3c603f0131e66a25712369443c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::SolveNE::SolveNE</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>SolveNE</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="42" column="1" bodyfile="jacal/factory/SolveNE.cc" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SolveNE_1a335f4141011a7650b93658aa1fd50bb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::SolveNE::~SolveNE</definition>
        <argsstring>()</argsstring>
        <name>~SolveNE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="46" column="1" bodyfile="jacal/factory/SolveNE.cc" bodystart="90" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SolveNE_1a95cda66dc215fd0668e6aa4a687afc68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::SolveNE::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="50" column="1" bodyfile="jacal/factory/SolveNE.cc" bodystart="98" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SolveNE_1a4793bf90f5790b7c53308898f93aa212" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::SolveNE::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="52" column="1" bodyfile="jacal/factory/SolveNE.cc" bodystart="115" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SolveNE_1a56e89329cb7a3f170a5bc1961f77b0e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::SolveNE::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="54" column="1" bodyfile="jacal/factory/SolveNE.cc" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SolveNE_1a3bba48ff44a9ba6d4e726d70a52f4f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::SolveNE::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="56" column="1" bodyfile="jacal/factory/SolveNE.cc" bodystart="210" bodyend="212"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1SolveNE_1a9969346a1751f43b3565e108ce9a42df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::SolveNE::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="44" column="1" bodyfile="jacal/factory/SolveNE.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SolveNE_1a14d0b2fccb927d3c9c809ba29c42d96c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::SolveNE::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.h" line="48" column="1" bodyfile="jacal/factory/SolveNE.cc" bodystart="93" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements an ASKAP Solver. </para>    </briefdescription>
    <detaileddescription>
<para>This takes a configuration and a set of normal equations and uses the Solver requested in in the ParameterSet to produce an ouput model. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="60">
        <label>askap::SolveNE</label>
        <link refid="classaskap_1_1SolveNE"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="62">
        <label>askap::SolveNE</label>
        <link refid="classaskap_1_1SolveNE"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/SolveNE.h" line="36" column="1" bodyfile="jacal/factory/SolveNE.h" bodystart="34" bodyend="84"/>
    <listofallmembers>
      <member refid="classaskap_1_1SolveNE_1a9969346a1751f43b3565e108ce9a42df" prot="public" virt="non-virtual"><scope>askap::SolveNE</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1SolveNE_1a14d0b2fccb927d3c9c809ba29c42d96c" prot="public" virt="non-virtual"><scope>askap::SolveNE</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::SolveNE</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1SolveNE_1a56e89329cb7a3f170a5bc1961f77b0e9" prot="public" virt="virtual"><scope>askap::SolveNE</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1SolveNE_1a3bba48ff44a9ba6d4e726d70a52f4f3b" prot="public" virt="virtual"><scope>askap::SolveNE</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>has_output</name></member>
      <member refid="classaskap_1_1SolveNE_1a95cda66dc215fd0668e6aa4a687afc68" prot="public" virt="virtual"><scope>askap::SolveNE</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>input</name></member>
      <member refid="classaskap_1_1SolveNE_1aef2c32165ecc2689e6e6d12ea3d9f72d" prot="private" virt="non-virtual"><scope>askap::SolveNE</scope><name>itsModel</name></member>
      <member refid="classaskap_1_1SolveNE_1a96c2121db1fa74c616b7e9bb97c41aec" prot="private" virt="non-virtual"><scope>askap::SolveNE</scope><name>itsNe</name></member>
      <member refid="classaskap_1_1SolveNE_1a7c023331714ccc1d8fa432f19e12d5a0" prot="private" virt="non-virtual"><scope>askap::SolveNE</scope><name>itsParset</name></member>
      <member refid="classaskap_1_1SolveNE_1a96ebcafb85be6e403adcde4b321e53ea" prot="private" virt="non-virtual"><scope>askap::SolveNE</scope><name>itsSolver</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::SolveNE</scope><name>output</name></member>
      <member refid="classaskap_1_1SolveNE_1a4793bf90f5790b7c53308898f93aa212" prot="public" virt="virtual"><scope>askap::SolveNE</scope><name>run</name></member>
      <member refid="classaskap_1_1SolveNE_1a688b29326934b50a6198253802e6dbbf" prot="public" virt="non-virtual"><scope>askap::SolveNE</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1SolveNE_1af6a1c3c603f0131e66a25712369443c2" prot="public" virt="non-virtual"><scope>askap::SolveNE</scope><name>SolveNE</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::SolveNE</scope><name>~DaliugeApplication</name></member>
      <member refid="classaskap_1_1SolveNE_1a335f4141011a7650b93658aa1fd50bb0" prot="public" virt="virtual"><scope>askap::SolveNE</scope><name>~SolveNE</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classaskap_1_1SpectralCube" kind="class" language="C++" prot="public">
    <compoundname>askap::SpectralCube</compoundname>
    <basecompoundref refid="classaskap_1_1DaliugeApplication" prot="public" virt="non-virtual">askap::DaliugeApplication</basecompoundref>
    <includes refid="SpectralCube_8h" local="no">SpectralCube.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaskap_1_1SpectralCube_1adb95e6f537e81b32acd654732094a3ae" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classaskap_1_1SpectralCube" kindref="compound">SpectralCube</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;SpectralCube&gt; askap::SpectralCube::ShPtr</definition>
        <argsstring/>
        <name>ShPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="46" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaskap_1_1SpectralCube_1a1aa90727839e770e6f889936ce4c4e39" prot="private" static="no" mutable="no">
        <type>scimath::Params::ShPtr</type>
        <definition>scimath::Params::ShPtr askap::SpectralCube::itsModel</definition>
        <argsstring/>
        <name>itsModel</name>
        <briefdescription>
<para>The model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="68" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SpectralCube_1af964e5a03aa2121bd61568fb2805dbd5" prot="private" static="no" mutable="no">
        <type>LOFAR::ParameterSet</type>
        <definition>LOFAR::ParameterSet askap::SpectralCube::itsParset</definition>
        <argsstring/>
        <name>itsParset</name>
        <briefdescription>
<para>Parameter set. </para>        </briefdescription>
        <detaileddescription>
<para>key value list of configuration options </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="72" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SpectralCube_1aa5a3212907415eee859eda7526dab531" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::SpectralCube::itsImageCube</definition>
        <argsstring/>
        <name>itsImageCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="74" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SpectralCube_1a7fff755d5fee3759f2765d3a590bc461" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::SpectralCube::itsPSFCube</definition>
        <argsstring/>
        <name>itsPSFCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="75" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SpectralCube_1a75351794e7f590cda0c484e880ce21f6" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::SpectralCube::itsResidualCube</definition>
        <argsstring/>
        <name>itsResidualCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="76" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SpectralCube_1a955266312da1c1fb3a5db9d8ead02da4" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::SpectralCube::itsWeightsCube</definition>
        <argsstring/>
        <name>itsWeightsCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="77" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SpectralCube_1a40bb26be6137c444d73e820b02d35359" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::SpectralCube::itsPSFimageCube</definition>
        <argsstring/>
        <name>itsPSFimageCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="78" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SpectralCube_1ad98f201864da92677060195faf18e7db" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; cp::CubeBuilder&lt; casacore::Float &gt; &gt;</type>
        <definition>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt; &gt; askap::SpectralCube::itsRestoredCube</definition>
        <argsstring/>
        <name>itsRestoredCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="79" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaskap_1_1SpectralCube_1ae845c54df776a6f83aaa731167e54bad" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int askap::SpectralCube::itsChan</definition>
        <argsstring/>
        <name>itsChan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="81" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaskap_1_1SpectralCube_1a4896a7c549a8480621dc272228f9e373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>askap::SpectralCube::SpectralCube</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>SpectralCube</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="48" column="1" bodyfile="jacal/factory/SpectralCube.cc" bodystart="101" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SpectralCube_1a326d933d91e9349c8ee0229d777c2362" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>askap::SpectralCube::~SpectralCube</definition>
        <argsstring>()</argsstring>
        <name>~SpectralCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="52" column="1" bodyfile="jacal/factory/SpectralCube.cc" bodystart="112" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SpectralCube_1aad561f54ab3896aef32226794f660eca" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::SpectralCube::init</definition>
        <argsstring>(const char ***arguments)</argsstring>
        <name>init</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899">init</reimplements>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is implemented by sub-classes. i.e. The users of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="56" column="1" bodyfile="jacal/factory/SpectralCube.cc" bodystart="120" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SpectralCube_1aae29248644d4eacc7b86e5954d4199e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int askap::SpectralCube::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1abb089035c6c71206554cf1c916689635">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>The width of a channel. THis does &lt;NOT&gt; take account of the variable width of Barycentric channels </para>        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="58" column="1" bodyfile="jacal/factory/SpectralCube.cc" bodystart="147" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SpectralCube_1a69d29ca7ccdb92622b459357ea8fdce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::SpectralCube::data_written</definition>
        <argsstring>(const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a9fbaf01766eb1fb1d36c187df57c340c">data_written</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="60" column="1" bodyfile="jacal/factory/SpectralCube.cc" bodystart="266" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SpectralCube_1a8f495291dd218bd90dda51d2e5c974a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void askap::SpectralCube::drop_completed</definition>
        <argsstring>(const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <reimplements refid="classaskap_1_1DaliugeApplication_1a03cf905a020fc3897e1637810fc7d4fa">drop_completed</reimplements>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="62" column="1" bodyfile="jacal/factory/SpectralCube.cc" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SpectralCube_1a6256e6cde1ead9f699fe6f73e4a7b8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::SpectralCube::handleImageParams</definition>
        <argsstring>()</argsstring>
        <name>handleImageParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="64" column="1" bodyfile="jacal/factory/SpectralCube.cc" bodystart="274" bodyend="376"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaskap_1_1SpectralCube_1ab62632ee91d8014d144ff4a8dc8ca9a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string askap::SpectralCube::ApplicationName</definition>
        <argsstring>()</argsstring>
        <name>ApplicationName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="50" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classaskap_1_1SpectralCube_1ada3fa0267defbea305ef3059eea5fdb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref></type>
        <definition>DaliugeApplication::ShPtr askap::SpectralCube::createDaliugeApplication</definition>
        <argsstring>(dlg_app_info *raw_app)</argsstring>
        <name>createDaliugeApplication</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>raw_app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.h" line="54" column="1" bodyfile="jacal/factory/SpectralCube.cc" bodystart="115" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Build the output image cube. </para>    </briefdescription>
    <detaileddescription>
<para>This class builds the output cube is whatever format specified by the parset. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="64">
        <label>askap::SpectralCube</label>
        <link refid="classaskap_1_1SpectralCube"/>
        <childnode refid="65" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="66">
        <label>askap::SpectralCube</label>
        <link refid="classaskap_1_1SpectralCube"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>askap::DaliugeApplication</label>
        <link refid="classaskap_1_1DaliugeApplication"/>
      </node>
    </collaborationgraph>
    <location file="jacal/factory/SpectralCube.h" line="42" column="1" bodyfile="jacal/factory/SpectralCube.h" bodystart="40" bodyend="83"/>
    <listofallmembers>
      <member refid="classaskap_1_1SpectralCube_1ab62632ee91d8014d144ff4a8dc8ca9a6" prot="public" virt="non-virtual"><scope>askap::SpectralCube</scope><name>ApplicationName</name></member>
      <member refid="classaskap_1_1SpectralCube_1ada3fa0267defbea305ef3059eea5fdb6" prot="public" virt="non-virtual"><scope>askap::SpectralCube</scope><name>createDaliugeApplication</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" prot="public" virt="non-virtual"><scope>askap::SpectralCube</scope><name>DaliugeApplication</name></member>
      <member refid="classaskap_1_1SpectralCube_1a69d29ca7ccdb92622b459357ea8fdce8" prot="public" virt="virtual"><scope>askap::SpectralCube</scope><name>data_written</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a811e7c64967397300a3a90fbedc09c80" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>dlg_app_done</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aed11eebe39122468e08b3f2a5fde7429" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>dlg_app_running</name></member>
      <member refid="classaskap_1_1SpectralCube_1a8f495291dd218bd90dda51d2e5c974a8" prot="public" virt="virtual"><scope>askap::SpectralCube</scope><name>drop_completed</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a7ac7d7d6b72249f078d907fff7ca51ca" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>get_inputs</name></member>
      <member refid="classaskap_1_1SpectralCube_1a6256e6cde1ead9f699fe6f73e4a7b8ce" prot="public" virt="non-virtual"><scope>askap::SpectralCube</scope><name>handleImageParams</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a77284ec0fe098d6afdbbd913b2205825" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>has_input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a29896527d85a4f614d01431a76480da5" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>has_output</name></member>
      <member refid="classaskap_1_1SpectralCube_1aad561f54ab3896aef32226794f660eca" prot="public" virt="virtual"><scope>askap::SpectralCube</scope><name>init</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1aea6c449c2d21cc939264c9ccb4331c87" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>input</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a1ce29733db412017c720a2b845a327d7" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>input</name></member>
      <member refid="classaskap_1_1SpectralCube_1ae845c54df776a6f83aaa731167e54bad" prot="private" virt="non-virtual"><scope>askap::SpectralCube</scope><name>itsChan</name></member>
      <member refid="classaskap_1_1SpectralCube_1aa5a3212907415eee859eda7526dab531" prot="private" virt="non-virtual"><scope>askap::SpectralCube</scope><name>itsImageCube</name></member>
      <member refid="classaskap_1_1SpectralCube_1a1aa90727839e770e6f889936ce4c4e39" prot="private" virt="non-virtual"><scope>askap::SpectralCube</scope><name>itsModel</name></member>
      <member refid="classaskap_1_1SpectralCube_1af964e5a03aa2121bd61568fb2805dbd5" prot="private" virt="non-virtual"><scope>askap::SpectralCube</scope><name>itsParset</name></member>
      <member refid="classaskap_1_1SpectralCube_1a7fff755d5fee3759f2765d3a590bc461" prot="private" virt="non-virtual"><scope>askap::SpectralCube</scope><name>itsPSFCube</name></member>
      <member refid="classaskap_1_1SpectralCube_1a40bb26be6137c444d73e820b02d35359" prot="private" virt="non-virtual"><scope>askap::SpectralCube</scope><name>itsPSFimageCube</name></member>
      <member refid="classaskap_1_1SpectralCube_1a75351794e7f590cda0c484e880ce21f6" prot="private" virt="non-virtual"><scope>askap::SpectralCube</scope><name>itsResidualCube</name></member>
      <member refid="classaskap_1_1SpectralCube_1ad98f201864da92677060195faf18e7db" prot="private" virt="non-virtual"><scope>askap::SpectralCube</scope><name>itsRestoredCube</name></member>
      <member refid="classaskap_1_1SpectralCube_1a955266312da1c1fb3a5db9d8ead02da4" prot="private" virt="non-virtual"><scope>askap::SpectralCube</scope><name>itsWeightsCube</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a0268ee2b73d67b7ed57be274f0354d75" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>n_inputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1abb0c4a545270ec98434aefffb70ab726" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>n_outputs</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a4c220de254cd6ba4e2cfd7821e4204a3" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>output</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a13c0deb208e41d3ccce925876ec642a8" prot="protected" virt="non-virtual"><scope>askap::SpectralCube</scope><name>output</name></member>
      <member refid="classaskap_1_1SpectralCube_1aae29248644d4eacc7b86e5954d4199e5" prot="public" virt="virtual"><scope>askap::SpectralCube</scope><name>run</name></member>
      <member refid="classaskap_1_1SpectralCube_1adb95e6f537e81b32acd654732094a3ae" prot="public" virt="non-virtual"><scope>askap::SpectralCube</scope><name>ShPtr</name></member>
      <member refid="classaskap_1_1SpectralCube_1a4896a7c549a8480621dc272228f9e373" prot="public" virt="non-virtual"><scope>askap::SpectralCube</scope><name>SpectralCube</name></member>
      <member refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" prot="public" virt="virtual"><scope>askap::SpectralCube</scope><name>~DaliugeApplication</name></member>
      <member refid="classaskap_1_1SpectralCube_1a326d933d91e9349c8ee0229d777c2362" prot="public" virt="virtual"><scope>askap::SpectralCube</scope><name>~SpectralCube</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespaceaskap" kind="namespace" language="C++">
    <compoundname>askap</compoundname>
    <innerclass refid="classaskap_1_1CalcNE" prot="public">askap::CalcNE</innerclass>
    <innerclass refid="classaskap_1_1DaliugeApplication" prot="public">askap::DaliugeApplication</innerclass>
    <innerclass refid="classaskap_1_1DaliugeApplicationFactory" prot="public">askap::DaliugeApplicationFactory</innerclass>
    <innerclass refid="classaskap_1_1InitSpectralCube" prot="public">askap::InitSpectralCube</innerclass>
    <innerclass refid="classaskap_1_1JacalBPCalibrator" prot="public">askap::JacalBPCalibrator</innerclass>
    <innerclass refid="classaskap_1_1LoadNE" prot="public">askap::LoadNE</innerclass>
    <innerclass refid="classaskap_1_1LoadParset" prot="public">askap::LoadParset</innerclass>
    <innerclass refid="classaskap_1_1LoadVis" prot="public">askap::LoadVis</innerclass>
    <innerclass refid="classaskap_1_1MajorCycle" prot="public">askap::MajorCycle</innerclass>
    <innerclass refid="classaskap_1_1NESpectralCube" prot="public">askap::NESpectralCube</innerclass>
    <innerclass refid="classaskap_1_1NEUtils" prot="public">askap::NEUtils</innerclass>
    <innerclass refid="classaskap_1_1OutputParams" prot="public">askap::OutputParams</innerclass>
    <innerclass refid="classaskap_1_1RestoreSolver" prot="public">askap::RestoreSolver</innerclass>
    <innerclass refid="classaskap_1_1SolveNE" prot="public">askap::SolveNE</innerclass>
    <innerclass refid="classaskap_1_1SpectralCube" prot="public">askap::SpectralCube</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceaskap_1a3d5e1bc911e510c4cd69bbddf18ada5b" prot="public" static="yes" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag askap::initial_population_called</definition>
        <argsstring/>
        <name>initial_population_called</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.cc" line="129" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.cc" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceaskap_1a56fdb99602e33eed96df205afd3fc6a2" prot="public" static="yes" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag askap::init_logging_flag</definition>
        <argsstring/>
        <name>init_logging_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.cc" line="156" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.cc" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceaskap_1ac8cc0c23f67c2d5b0f77a74d0a7ecfe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_CalcNE</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_CalcNE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/CalcNE.cc" line="15" column="1" bodyfile="jacal/factory/CalcNE.cc" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a7a41f9bfeed39e4794d6ba748025c715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_DaliugeApplicationFactory</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_DaliugeApplicationFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.cc" line="16" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.cc" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a683cff244e714861fe1bdaaf7466e28c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askap::init_logging</definition>
        <argsstring>()</argsstring>
        <name>init_logging</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/DaliugeApplicationFactory.cc" line="157" column="1" bodyfile="jacal/factory/DaliugeApplicationFactory.cc" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a85533202ef62bb198919692d6cef7807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_InitSpectralCube</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_InitSpectralCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.cc" line="15" column="1" bodyfile="jacal/factory/InitSpectralCube.cc" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a392ef14bd11a2eaf8f6638d269681933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_LoadNE</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_LoadNE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadNE.cc" line="15" column="1" bodyfile="jacal/factory/LoadNE.cc" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1ac8c1996be4146d9fb17e38a42571456d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_LoadVis</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_LoadVis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/LoadVis.cc" line="14" column="1" bodyfile="jacal/factory/LoadVis.cc" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a8687bad6dc09af6ccb8447cc92f234d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_MajorCycle</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_MajorCycle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/MajorCycle.cc" line="14" column="1" bodyfile="jacal/factory/MajorCycle.cc" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a67157b7f485b4c84c1966a853fed27fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_NESpectralCube</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_NESpectralCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.cc" line="13" column="1" bodyfile="jacal/factory/NESpectralCube.cc" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a18d154e8541ff37cbb7fa5efcba802a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_NEUtils</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_NEUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.cc" line="15" column="1" bodyfile="jacal/factory/NEUtils.cc" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a7324ea6cdfc085c48eff8ea8fd12c862" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long askap::usecs</definition>
        <argsstring>(struct timeval *start, struct timeval *end)</argsstring>
        <name>usecs</name>
        <param>
          <type>struct timeval *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>struct timeval *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NEUtils.h" line="37" column="1" bodyfile="jacal/factory/NEUtils.h" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a1e583517dcb94f2be1d688a7257665b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_OutputParams</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_OutputParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/OutputParams.cc" line="15" column="1" bodyfile="jacal/factory/OutputParams.cc" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a9abd73a87917e50146fe865166881e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_RestoreSolver</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_RestoreSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/RestoreSolver.cc" line="15" column="1" bodyfile="jacal/factory/RestoreSolver.cc" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1acfbaa8fdb6811361155c3ff22f2afcaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_SolveNE</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_SolveNE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SolveNE.cc" line="15" column="1" bodyfile="jacal/factory/SolveNE.cc" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a8c23a7a12cd321af6dec82bf1b9125b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string askap::getAskapPackageVersion_SpectralCube</definition>
        <argsstring>()</argsstring>
        <name>getAskapPackageVersion_SpectralCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of the package </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.cc" line="15" column="1" bodyfile="jacal/factory/SpectralCube.cc" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a6df8a7b77732affeca69fdb2444d0561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>dlg_app_info *</type>
        <definition>dlg_app_info * askap::dummy_dlg_app</definition>
        <argsstring>(const std::string &amp;input_file)</argsstring>
        <name>dummy_dlg_app</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/test/standalone.cpp" line="36" column="1" bodyfile="jacal/test/standalone.cpp" bodystart="36" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a6b67bb416ad25f6f54982325b368c0c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int askap::run_calibrate</definition>
        <argsstring>(const std::string &amp;input_file)</argsstring>
        <name>run_calibrate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/test/standalone.cpp" line="79" column="1" bodyfile="jacal/test/standalone.cpp" bodystart="79" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespaceaskap_1a67ca1dccf49a9f6cd18f15fa91260c79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int askap::run</definition>
        <argsstring>(int argc, std::string input1)</argsstring>
        <name>run</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>input1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/test/standalone.cpp" line="87" column="1" bodyfile="jacal/test/standalone.cpp" bodystart="87" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>askap namespace </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="jacal/daliuge/DaliugeApplication.h" line="44" column="1"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespaceconf" kind="namespace" language="Python">
    <compoundname>conf</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="conf_8py_1add613ecd679055ab674d2ee479c80dbe" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string conf.read_the_docs_build</definition>
        <argsstring/>
        <name>read_the_docs_build</name>
        <initializer>=  'True'</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="9" column="1" bodyfile="docs/conf.py" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a45653c983098153b78e33600e39230eb" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string conf.project</definition>
        <argsstring/>
        <name>project</name>
        <initializer>=  u'jacal'</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="14" column="1" bodyfile="docs/conf.py" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a33fa97cf51dcb25970fbf53f10159589" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string conf.copyright</definition>
        <argsstring/>
        <name>copyright</name>
        <initializer>=  u'2020, YANDA Team'</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="15" column="1" bodyfile="docs/conf.py" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a637c239d256432248aa8d9f3ab0b8c52" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string conf.author</definition>
        <argsstring/>
        <name>author</name>
        <initializer>=  u'YANDA Team'</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="16" column="1" bodyfile="docs/conf.py" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1af51f21968ea73bb4391b0d4aed1f7ad2" prot="public" static="no" mutable="no">
        <type/>
        <definition>conf.version</definition>
        <argsstring/>
        <name>version</name>
        <initializer>=  f.read()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="18" column="1" bodyfile="docs/conf.py" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1ae475e080536acb271a0a0efe56c3ba42" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list conf.extensions</definition>
        <argsstring/>
        <name>extensions</name>
        <initializer>=  ['breathe']</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="22" column="1" bodyfile="docs/conf.py" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1acb47d2c0c2904fa7d36b63142533f383" prot="public" static="no" mutable="no">
        <type>dictionary</type>
        <definition>dictionary conf.breathe_projects</definition>
        <argsstring/>
        <name>breathe_projects</name>
        <initializer>=  {
    'jacal': 'doxygen-output/xml'
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="23" column="1" bodyfile="docs/conf.py" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a6eba2d2c7ae923054b1c49e686ec89b9" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string conf.breathe_default_project</definition>
        <argsstring/>
        <name>breathe_default_project</name>
        <initializer>=  'jacal'</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="26" column="1" bodyfile="docs/conf.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a6fcd7e5236f355b1e1a55f9d95988810" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string conf.master_doc</definition>
        <argsstring/>
        <name>master_doc</name>
        <initializer>=  'index'</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="27" column="1" bodyfile="docs/conf.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a10af2a769eb3bd3322e874f677e435b1" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string conf.source_suffix</definition>
        <argsstring/>
        <name>source_suffix</name>
        <initializer>=  '.rst'</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="28" column="1" bodyfile="docs/conf.py" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a641130e096b26cba8a5d63ed38684de7" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string conf.pygments_style</definition>
        <argsstring/>
        <name>pygments_style</name>
        <initializer>=  'sphinx'</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="29" column="1" bodyfile="docs/conf.py" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1ad76a2e6d7bfa880ebb4042c08e8b4e12" prot="public" static="no" mutable="no">
        <type/>
        <definition>conf.language</definition>
        <argsstring/>
        <name>language</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="30" column="1" bodyfile="docs/conf.py" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a7ad48fb6f3e9b129c02346ea0d3527c1" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list conf.exclude_patterns</definition>
        <argsstring/>
        <name>exclude_patterns</name>
        <initializer>=  [u'_build', 'Thumbs.db', '.DS_Store']</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="31" column="1" bodyfile="docs/conf.py" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a73e68dd47cde8437d370fa0e284c9235" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string conf.rst_prolog</definition>
        <argsstring/>
        <name>rst_prolog</name>
        <initializer>=  '''
.. |dlg| replace:: DALiuGE
.. |ys| replace:: Yandasoft
'''</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="32" column="1" bodyfile="docs/conf.py" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a6c3bfcc1a44546c1c75ce20f55bd0fd6" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string conf.html_theme</definition>
        <argsstring/>
        <name>html_theme</name>
        <initializer>=  'sphinx_rtd_theme'</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="39" column="1" bodyfile="docs/conf.py" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1af4fb5d8851ccaade135c2668dd3ced41" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list conf.html_static_path</definition>
        <argsstring/>
        <name>html_static_path</name>
        <initializer>=  ['_static']</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="40" column="1" bodyfile="docs/conf.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8py_1a7812f49970f3de0d15dd7b9b9a10e3a1" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list conf.latex_documents</definition>
        <argsstring/>
        <name>latex_documents</name>
        <initializer>=  [
    (master_doc, 'jacal.tex', u'jacal Documentation',
     author, 'manual'),
]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/conf.py" line="42" column="1" bodyfile="docs/conf.py" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="docs/conf.py" line="1" column="1"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="CMakeCCompilerId_8c" kind="file" language="C++">
    <compoundname>CMakeCCompilerId.c</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="CMakeCCompilerId_8c_1a4b0efeb7a5d59313986b3a0390f050f6" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* info_compiler</definition>
        <argsstring/>
        <name>info_compiler</name>
        <initializer>= "INFO" ":" "compiler[" COMPILER_ID "]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="319" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCCompilerId_8c_1a3183b7b04f5924048f9b117ebcb45226" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* info_simulate</definition>
        <argsstring/>
        <name>info_simulate</name>
        <initializer>= "INFO" ":" "simulate[" SIMULATE_ID "]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="321" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCCompilerId_8c_1a6369dd31ba1f7ebce2384ff8f8f32df7" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* qnxnto</definition>
        <argsstring/>
        <name>qnxnto</name>
        <initializer>= "INFO" ":" "qnxnto[]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="325" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCCompilerId_8c_1a9e28d482fff14a350c956c48524712d6" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* info_cray</definition>
        <argsstring/>
        <name>info_cray</name>
        <initializer>= "INFO" ":" "compiler_wrapper[CrayPrgEnv]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="329" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCCompilerId_8c_1a74688a78009d8531274b1c3cb63ba8aa" prot="public" static="no" mutable="no">
        <type>char const</type>
        <definition>char const info_version[]</definition>
        <argsstring>[]</argsstring>
        <name>info_version</name>
        <initializer>= {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
  COMPILER_VERSION_MAJOR,
# ifdef COMPILER_VERSION_MINOR
  '.', COMPILER_VERSION_MINOR,
#  ifdef COMPILER_VERSION_PATCH
   '.', COMPILER_VERSION_PATCH,
#   ifdef COMPILER_VERSION_TWEAK
    '.', COMPILER_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="519" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCCompilerId_8c_1a129136602504b3f22bcafe03b2f464a5" prot="public" static="no" mutable="no">
        <type>char const</type>
        <definition>char const info_version_internal[]</definition>
        <argsstring>[]</argsstring>
        <name>info_version_internal</name>
        <initializer>= {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
  'i','n','t','e','r','n','a','l','[',
  COMPILER_VERSION_INTERNAL,']','\0'}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="537" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCCompilerId_8c_1a05fcc1e67566c09b9c89ff04c20daf0a" prot="public" static="no" mutable="no">
        <type>char const</type>
        <definition>char const info_simulate_version[]</definition>
        <argsstring>[]</argsstring>
        <name>info_simulate_version</name>
        <initializer>= {
  'I', 'N', 'F', 'O', ':',
  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
  SIMULATE_VERSION_MAJOR,
# ifdef SIMULATE_VERSION_MINOR
  '.', SIMULATE_VERSION_MINOR,
#  ifdef SIMULATE_VERSION_PATCH
   '.', SIMULATE_VERSION_PATCH,
#   ifdef SIMULATE_VERSION_TWEAK
    '.', SIMULATE_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="546" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCCompilerId_8c_1a2321403dee54ee23f0c2fa849c60f7d4" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* info_platform</definition>
        <argsstring/>
        <name>info_platform</name>
        <initializer>= "INFO" ":" "platform[" PLATFORM_ID "]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="566" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCCompilerId_8c_1a59647e99d304ed33b15cb284c27ed391" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* info_arch</definition>
        <argsstring/>
        <name>info_arch</name>
        <initializer>= "INFO" ":" "arch[" ARCHITECTURE_ID "]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="567" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCCompilerId_8c_1a1ce162bad2fe6966ac8b33cc19e120b8" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* info_language_dialect_default</definition>
        <argsstring/>
        <name>info_language_dialect_default</name>
        <initializer>=
  "INFO" ":" "dialect_default[" C_DIALECT "]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="586" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="586" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="CMakeCCompilerId_8c_1acdef7a1fd863a6d3770c1268cb06add3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="592" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="592" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="CMakeCCompilerId_8c_1afced8478b91af5c169926dfa4426333d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>argv</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" line="595" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c" bodystart="595" bodyend="622"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight class="preprocessor">#<sp/>error<sp/>"A<sp/>C++<sp/>compiler<sp/>has<sp/>been<sp/>selected<sp/>for<sp/>C."</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__18CXX)</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>ID_VOID_MAIN</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__CLASSIC_C__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">/*<sp/>cv-qualifiers<sp/>did<sp/>not<sp/>exist<sp/>in<sp/>K&amp;R<sp/>C<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>const</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>volatile</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="comment">/*<sp/>Version<sp/>number<sp/>components:<sp/>V=Version,<sp/>R=Revision,<sp/>P=Patch</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>Version<sp/>date<sp/>components:<sp/><sp/><sp/>YYYY=Year,<sp/>MM=Month,<sp/><sp/><sp/>DD=Day<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__INTEL_COMPILER)<sp/>||<sp/>defined(__ICC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Intel"</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_ID<sp/>"MSVC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__INTEL_COMPILER<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__INTEL_COMPILER/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__INTEL_COMPILER/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__INTEL_COMPILER_UPDATE)</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__INTEL_COMPILER_UPDATE)</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__INTEL_COMPILER<sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__INTEL_COMPILER_BUILD_DATE)</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__INTEL_COMPILER_BUILD_DATE<sp/>=<sp/>YYYYMMDD<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(__INTEL_COMPILER_BUILD_DATE)</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_VER<sp/>=<sp/>VVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MAJOR<sp/>DEC(_MSC_VER<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MINOR<sp/>DEC(_MSC_VER<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__PATHCC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"PathScale"</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__PATHCC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__PATHCC_MINOR__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__PATHCC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__PATHCC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__BORLANDC__)<sp/>&amp;&amp;<sp/>defined(__CODEGEARC_VERSION__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Embarcadero"</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>HEX(__CODEGEARC_VERSION__&gt;&gt;24<sp/>&amp;<sp/>0x00FF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>HEX(__CODEGEARC_VERSION__&gt;&gt;16<sp/>&amp;<sp/>0x00FF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__CODEGEARC_VERSION__<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>0xFFFF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__BORLANDC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Borland"</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__BORLANDC__<sp/>=<sp/>0xVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>HEX(__BORLANDC__&gt;&gt;8)</highlight><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>HEX(__BORLANDC__<sp/>&amp;<sp/>0xFF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__WATCOMC__)<sp/>&amp;&amp;<sp/>__WATCOMC__<sp/>&lt;<sp/>1200</highlight><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Watcom"</highlight><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__WATCOMC__<sp/>=<sp/>VVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__WATCOMC__<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC((__WATCOMC__<sp/>/<sp/>10)<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>(__WATCOMC__<sp/>%<sp/>10)<sp/>&gt;<sp/>0</highlight><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__WATCOMC__<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__WATCOMC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"OpenWatcom"</highlight><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__WATCOMC__<sp/>=<sp/>VVRP<sp/>+<sp/>1100<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC((__WATCOMC__<sp/>-<sp/>1100)<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC((__WATCOMC__<sp/>/<sp/>10)<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>(__WATCOMC__<sp/>%<sp/>10)<sp/>&gt;<sp/>0</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__WATCOMC__<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__SUNPRO_C)</highlight><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"SunPro"</highlight><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>__SUNPRO_C<sp/>&gt;=<sp/>0x5100</highlight><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__SUNPRO_C<sp/>=<sp/>0xVRRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>HEX(__SUNPRO_C&gt;&gt;12)</highlight><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>HEX(__SUNPRO_C&gt;&gt;4<sp/>&amp;<sp/>0xFF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>HEX(__SUNPRO_C<sp/><sp/><sp/><sp/>&amp;<sp/>0xF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__SUNPRO_CC<sp/>=<sp/>0xVRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>HEX(__SUNPRO_C&gt;&gt;8)</highlight><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>HEX(__SUNPRO_C&gt;&gt;4<sp/>&amp;<sp/>0xF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>HEX(__SUNPRO_C<sp/><sp/><sp/><sp/>&amp;<sp/>0xF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__HP_cc)</highlight><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"HP"</highlight><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__HP_cc<sp/>=<sp/>VVRRPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__HP_cc/10000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__HP_cc/100<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="98"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__HP_cc<sp/><sp/><sp/><sp/><sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"/></codeline>
<codeline lineno="100"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__DECC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Compaq"</highlight><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__DECC_VER<sp/>=<sp/>VVRRTPPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__DECC_VER/10000000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__DECC_VER/100000<sp/><sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__DECC_VER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>10000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__IBMC__)<sp/>&amp;&amp;<sp/>defined(__COMPILER_VER__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="108"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"zOS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__ibmxl__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__ibmxl_version__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="111"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__ibmxl_release__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__ibmxl_modification__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(__ibmxl_ptf_fix_level__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="114"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__IBMC__<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__IBMC__/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__IBMC__/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__IBMC__<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__ibmxl__)<sp/>||<sp/>(defined(__IBMC__)<sp/>&amp;&amp;<sp/>!defined(__COMPILER_VER__)<sp/>&amp;&amp;<sp/>__IBMC__<sp/>&gt;=<sp/>800)</highlight><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"XL"</highlight><highlight class="normal"/></codeline>
<codeline lineno="124"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__ibmxl__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__ibmxl_version__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__ibmxl_release__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__ibmxl_modification__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="128"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(__ibmxl_ptf_fix_level__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__IBMC__<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__IBMC__/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__IBMC__/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__IBMC__<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="134"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__IBMC__)<sp/>&amp;&amp;<sp/>!defined(__COMPILER_VER__)<sp/>&amp;&amp;<sp/>__IBMC__<sp/>&lt;<sp/>800</highlight><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"VisualAge"</highlight><highlight class="normal"/></codeline>
<codeline lineno="139"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__ibmxl__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__ibmxl_version__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__ibmxl_release__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__ibmxl_modification__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(__ibmxl_ptf_fix_level__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__IBMC__<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="146"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__IBMC__/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__IBMC__/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="148"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__IBMC__<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="150"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"/></codeline>
<codeline lineno="152"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__PGI)</highlight><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"PGI"</highlight><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__PGIC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__PGIC_MINOR__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="156"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__PGIC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__PGIC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="158"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="159"><highlight class="normal"/></codeline>
<codeline lineno="160"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_CRAYC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="161"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Cray"</highlight><highlight class="normal"/></codeline>
<codeline lineno="162"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(_RELEASE_MAJOR)</highlight><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(_RELEASE_MINOR)</highlight><highlight class="normal"/></codeline>
<codeline lineno="164"><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__TI_COMPILER_VERSION__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="166"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"TI"</highlight><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__TI_COMPILER_VERSION__<sp/>=<sp/>VVVRRRPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="168"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__TI_COMPILER_VERSION__/1000000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="169"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__TI_COMPILER_VERSION__/1000<sp/><sp/><sp/>%<sp/>1000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__TI_COMPILER_VERSION__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>1000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="171"><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__FUJITSU)<sp/>||<sp/>defined(__FCC_VERSION)<sp/>||<sp/>defined(__fcc_version)</highlight><highlight class="normal"/></codeline>
<codeline lineno="173"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Fujitsu"</highlight><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__TINYC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"TinyCC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="177"><highlight class="normal"/></codeline>
<codeline lineno="178"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__BCC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="179"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Bruce"</highlight><highlight class="normal"/></codeline>
<codeline lineno="180"><highlight class="normal"/></codeline>
<codeline lineno="181"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__SCO_VERSION__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="182"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"SCO"</highlight><highlight class="normal"/></codeline>
<codeline lineno="183"><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__clang__)<sp/>&amp;&amp;<sp/>defined(__apple_build_version__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="185"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"AppleClang"</highlight><highlight class="normal"/></codeline>
<codeline lineno="186"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_ID<sp/>"MSVC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="188"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="189"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__clang_major__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="190"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__clang_minor__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="191"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__clang_patchlevel__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="192"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_VER<sp/>=<sp/>VVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="194"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MAJOR<sp/>DEC(_MSC_VER<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="195"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MINOR<sp/>DEC(_MSC_VER<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="197"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(__apple_build_version__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="198"><highlight class="normal"/></codeline>
<codeline lineno="199"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__clang__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="200"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Clang"</highlight><highlight class="normal"/></codeline>
<codeline lineno="201"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="202"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_ID<sp/>"MSVC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="203"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="204"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__clang_major__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="205"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__clang_minor__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="206"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__clang_patchlevel__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_VER<sp/>=<sp/>VVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MAJOR<sp/>DEC(_MSC_VER<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MINOR<sp/>DEC(_MSC_VER<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="211"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="212"><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="214"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"GNU"</highlight><highlight class="normal"/></codeline>
<codeline lineno="215"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__GNUC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__GNUC_MINOR__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="217"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__GNUC_MINOR__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="218"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="219"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__GNUC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="220"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__GNUC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="221"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"/></codeline>
<codeline lineno="223"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="224"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"MSVC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_VER<sp/>=<sp/>VVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="226"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(_MSC_VER<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="227"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(_MSC_VER<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_FULL_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="229"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>if<sp/>_MSC_VER<sp/>&gt;=<sp/>1400</highlight><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_FULL_VER<sp/>=<sp/>VVRRPPPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="231"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(_MSC_FULL_VER<sp/>%<sp/>100000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="232"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_FULL_VER<sp/>=<sp/>VVRRPPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="234"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(_MSC_FULL_VER<sp/>%<sp/>10000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="236"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="237"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_BUILD)</highlight><highlight class="normal"/></codeline>
<codeline lineno="238"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(_MSC_BUILD)</highlight><highlight class="normal"/></codeline>
<codeline lineno="239"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="240"><highlight class="normal"/></codeline>
<codeline lineno="241"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__VISUALDSPVERSION__)<sp/>||<sp/>defined(__ADSPBLACKFIN__)<sp/>||<sp/>defined(__ADSPTS__)<sp/>||<sp/>defined(__ADSP21000__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="242"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"ADSP"</highlight><highlight class="normal"/></codeline>
<codeline lineno="243"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__VISUALDSPVERSION__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__VISUALDSPVERSION__<sp/>=<sp/>0xVVRRPP00<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="245"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>HEX(__VISUALDSPVERSION__&gt;&gt;24)</highlight><highlight class="normal"/></codeline>
<codeline lineno="246"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>HEX(__VISUALDSPVERSION__&gt;&gt;16<sp/>&amp;<sp/>0xFF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="247"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>HEX(__VISUALDSPVERSION__&gt;&gt;8<sp/><sp/>&amp;<sp/>0xFF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="248"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="249"><highlight class="normal"/></codeline>
<codeline lineno="250"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__IAR_SYSTEMS_ICC__)<sp/>||<sp/>defined(__IAR_SYSTEMS_ICC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="251"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"IAR"</highlight><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__VER__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="253"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC((__VER__)<sp/>/<sp/>1000000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(((__VER__)<sp/>/<sp/>1000)<sp/>%<sp/>1000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="255"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC((__VER__)<sp/>%<sp/>1000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_INTERNAL<sp/>DEC(__IAR_SYSTEMS_ICC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="257"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="258"><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__ARMCC_VERSION)</highlight><highlight class="normal"/></codeline>
<codeline lineno="260"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"ARMCC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="261"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>__ARMCC_VERSION<sp/>&gt;=<sp/>1000000</highlight><highlight class="normal"/></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__ARMCC_VERSION<sp/>=<sp/>VRRPPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="263"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__ARMCC_VERSION/1000000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="264"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__ARMCC_VERSION/10000<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="265"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__ARMCC_VERSION<sp/><sp/><sp/><sp/><sp/>%<sp/>10000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="266"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__ARMCC_VERSION<sp/>=<sp/>VRPPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="268"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__ARMCC_VERSION/100000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="269"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__ARMCC_VERSION/10000<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="270"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__ARMCC_VERSION<sp/><sp/><sp/><sp/>%<sp/>10000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="271"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="272"><highlight class="normal"/></codeline>
<codeline lineno="273"><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__SDCC_VERSION_MAJOR)<sp/>||<sp/>defined(SDCC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="275"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"SDCC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="276"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__SDCC_VERSION_MAJOR)</highlight><highlight class="normal"/></codeline>
<codeline lineno="277"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__SDCC_VERSION_MAJOR)</highlight><highlight class="normal"/></codeline>
<codeline lineno="278"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__SDCC_VERSION_MINOR)</highlight><highlight class="normal"/></codeline>
<codeline lineno="279"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__SDCC_VERSION_PATCH)</highlight><highlight class="normal"/></codeline>
<codeline lineno="280"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SDCC<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="282"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(SDCC/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="283"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(SDCC/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="284"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(SDCC<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="285"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="286"><highlight class="normal"/></codeline>
<codeline lineno="287"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_SGI_COMPILER_VERSION)<sp/>||<sp/>defined(_COMPILER_VERSION)</highlight><highlight class="normal"/></codeline>
<codeline lineno="288"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"MIPSpro"</highlight><highlight class="normal"/></codeline>
<codeline lineno="289"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_SGI_COMPILER_VERSION)</highlight><highlight class="normal"/></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>_SGI_COMPILER_VERSION<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="291"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(_SGI_COMPILER_VERSION/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="292"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(_SGI_COMPILER_VERSION/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="293"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(_SGI_COMPILER_VERSION<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="294"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>_COMPILER_VERSION<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="296"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(_COMPILER_VERSION/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="297"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(_COMPILER_VERSION/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="298"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(_COMPILER_VERSION<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="299"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="300"><highlight class="normal"/></codeline>
<codeline lineno="301"><highlight class="normal"/></codeline>
<codeline lineno="302"><highlight class="normal"/><highlight class="comment">/*<sp/>These<sp/>compilers<sp/>are<sp/>either<sp/>not<sp/>known<sp/>or<sp/>too<sp/>old<sp/>to<sp/>define<sp/>an</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/>identification<sp/>macro.<sp/><sp/>Try<sp/>to<sp/>identify<sp/>the<sp/>platform<sp/>and<sp/>guess<sp/>that</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/>it<sp/>is<sp/>the<sp/>native<sp/>compiler.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="305"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__sgi)</highlight><highlight class="normal"/></codeline>
<codeline lineno="306"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"MIPSpro"</highlight><highlight class="normal"/></codeline>
<codeline lineno="307"><highlight class="normal"/></codeline>
<codeline lineno="308"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__hpux)<sp/>||<sp/>defined(__hpua)</highlight><highlight class="normal"/></codeline>
<codeline lineno="309"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"HP"</highlight><highlight class="normal"/></codeline>
<codeline lineno="310"><highlight class="normal"/></codeline>
<codeline lineno="311"><highlight class="normal"/><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>compiler<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="312"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>""</highlight><highlight class="normal"/></codeline>
<codeline lineno="313"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="314"><highlight class="normal"/></codeline>
<codeline lineno="315"><highlight class="normal"/><highlight class="comment">/*<sp/>Construct<sp/>the<sp/>string<sp/>literal<sp/>in<sp/>pieces<sp/>to<sp/>prevent<sp/>the<sp/>source<sp/>from</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/>getting<sp/>matched.<sp/><sp/>Store<sp/>it<sp/>in<sp/>a<sp/>pointer<sp/>rather<sp/>than<sp/>an<sp/>array</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/>because<sp/>some<sp/>compilers<sp/>will<sp/>just<sp/>produce<sp/>instructions<sp/>to<sp/>fill<sp/>the</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/>array<sp/>rather<sp/>than<sp/>assigning<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>static<sp/>array.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="319"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>info_compiler<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"compiler["</highlight><highlight class="normal"><sp/>COMPILER_ID<sp/></highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>SIMULATE_ID</highlight><highlight class="normal"/></codeline>
<codeline lineno="321"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>info_simulate<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"simulate["</highlight><highlight class="normal"><sp/>SIMULATE_ID<sp/></highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="323"><highlight class="normal"/></codeline>
<codeline lineno="324"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>__QNXNTO__</highlight><highlight class="normal"/></codeline>
<codeline lineno="325"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>qnxnto<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"qnxnto[]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="327"><highlight class="normal"/></codeline>
<codeline lineno="328"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__CRAYXE)<sp/>||<sp/>defined(__CRAYXC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="329"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*info_cray<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"compiler_wrapper[CrayPrgEnv]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="331"><highlight class="normal"/></codeline>
<codeline lineno="332"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>STRINGIFY_HELPER(X)<sp/>#X</highlight><highlight class="normal"/></codeline>
<codeline lineno="333"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>STRINGIFY(X)<sp/>STRINGIFY_HELPER(X)</highlight><highlight class="normal"/></codeline>
<codeline lineno="334"><highlight class="normal"/></codeline>
<codeline lineno="335"><highlight class="normal"/><highlight class="comment">/*<sp/>Identify<sp/>known<sp/>platforms<sp/>by<sp/>name.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="336"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__linux)<sp/>||<sp/>defined(__linux__)<sp/>||<sp/>defined(linux)</highlight><highlight class="normal"/></codeline>
<codeline lineno="337"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Linux"</highlight><highlight class="normal"/></codeline>
<codeline lineno="338"><highlight class="normal"/></codeline>
<codeline lineno="339"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__CYGWIN__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="340"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Cygwin"</highlight><highlight class="normal"/></codeline>
<codeline lineno="341"><highlight class="normal"/></codeline>
<codeline lineno="342"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__MINGW32__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="343"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"MinGW"</highlight><highlight class="normal"/></codeline>
<codeline lineno="344"><highlight class="normal"/></codeline>
<codeline lineno="345"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__APPLE__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="346"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Darwin"</highlight><highlight class="normal"/></codeline>
<codeline lineno="347"><highlight class="normal"/></codeline>
<codeline lineno="348"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_WIN32)<sp/>||<sp/>defined(__WIN32__)<sp/>||<sp/>defined(WIN32)</highlight><highlight class="normal"/></codeline>
<codeline lineno="349"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Windows"</highlight><highlight class="normal"/></codeline>
<codeline lineno="350"><highlight class="normal"/></codeline>
<codeline lineno="351"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__FreeBSD__)<sp/>||<sp/>defined(__FreeBSD)</highlight><highlight class="normal"/></codeline>
<codeline lineno="352"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"FreeBSD"</highlight><highlight class="normal"/></codeline>
<codeline lineno="353"><highlight class="normal"/></codeline>
<codeline lineno="354"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__NetBSD__)<sp/>||<sp/>defined(__NetBSD)</highlight><highlight class="normal"/></codeline>
<codeline lineno="355"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"NetBSD"</highlight><highlight class="normal"/></codeline>
<codeline lineno="356"><highlight class="normal"/></codeline>
<codeline lineno="357"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__OpenBSD__)<sp/>||<sp/>defined(__OPENBSD)</highlight><highlight class="normal"/></codeline>
<codeline lineno="358"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"OpenBSD"</highlight><highlight class="normal"/></codeline>
<codeline lineno="359"><highlight class="normal"/></codeline>
<codeline lineno="360"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__sun)<sp/>||<sp/>defined(sun)</highlight><highlight class="normal"/></codeline>
<codeline lineno="361"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"SunOS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="362"><highlight class="normal"/></codeline>
<codeline lineno="363"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_AIX)<sp/>||<sp/>defined(__AIX)<sp/>||<sp/>defined(__AIX__)<sp/>||<sp/>defined(__aix)<sp/>||<sp/>defined(__aix__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="364"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"AIX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="365"><highlight class="normal"/></codeline>
<codeline lineno="366"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__sgi)<sp/>||<sp/>defined(__sgi__)<sp/>||<sp/>defined(_SGI)</highlight><highlight class="normal"/></codeline>
<codeline lineno="367"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"IRIX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="368"><highlight class="normal"/></codeline>
<codeline lineno="369"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__hpux)<sp/>||<sp/>defined(__hpux__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="370"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"HP-UX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="371"><highlight class="normal"/></codeline>
<codeline lineno="372"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__HAIKU__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="373"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Haiku"</highlight><highlight class="normal"/></codeline>
<codeline lineno="374"><highlight class="normal"/></codeline>
<codeline lineno="375"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__BeOS)<sp/>||<sp/>defined(__BEOS__)<sp/>||<sp/>defined(_BEOS)</highlight><highlight class="normal"/></codeline>
<codeline lineno="376"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"BeOS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="377"><highlight class="normal"/></codeline>
<codeline lineno="378"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__QNX__)<sp/>||<sp/>defined(__QNXNTO__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="379"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"QNX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="380"><highlight class="normal"/></codeline>
<codeline lineno="381"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__tru64)<sp/>||<sp/>defined(_tru64)<sp/>||<sp/>defined(__TRU64__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="382"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Tru64"</highlight><highlight class="normal"/></codeline>
<codeline lineno="383"><highlight class="normal"/></codeline>
<codeline lineno="384"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__riscos)<sp/>||<sp/>defined(__riscos__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="385"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"RISCos"</highlight><highlight class="normal"/></codeline>
<codeline lineno="386"><highlight class="normal"/></codeline>
<codeline lineno="387"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__sinix)<sp/>||<sp/>defined(__sinix__)<sp/>||<sp/>defined(__SINIX__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="388"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"SINIX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="389"><highlight class="normal"/></codeline>
<codeline lineno="390"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__UNIX_SV__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="391"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"UNIX_SV"</highlight><highlight class="normal"/></codeline>
<codeline lineno="392"><highlight class="normal"/></codeline>
<codeline lineno="393"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__bsdos__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="394"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"BSDOS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="395"><highlight class="normal"/></codeline>
<codeline lineno="396"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_MPRAS)<sp/>||<sp/>defined(MPRAS)</highlight><highlight class="normal"/></codeline>
<codeline lineno="397"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"MP-RAS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="398"><highlight class="normal"/></codeline>
<codeline lineno="399"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__osf)<sp/>||<sp/>defined(__osf__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="400"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"OSF1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="401"><highlight class="normal"/></codeline>
<codeline lineno="402"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_SCO_SV)<sp/>||<sp/>defined(SCO_SV)<sp/>||<sp/>defined(sco_sv)</highlight><highlight class="normal"/></codeline>
<codeline lineno="403"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"SCO_SV"</highlight><highlight class="normal"/></codeline>
<codeline lineno="404"><highlight class="normal"/></codeline>
<codeline lineno="405"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__ultrix)<sp/>||<sp/>defined(__ultrix__)<sp/>||<sp/>defined(_ULTRIX)</highlight><highlight class="normal"/></codeline>
<codeline lineno="406"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"ULTRIX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="407"><highlight class="normal"/></codeline>
<codeline lineno="408"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__XENIX__)<sp/>||<sp/>defined(_XENIX)<sp/>||<sp/>defined(XENIX)</highlight><highlight class="normal"/></codeline>
<codeline lineno="409"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Xenix"</highlight><highlight class="normal"/></codeline>
<codeline lineno="410"><highlight class="normal"/></codeline>
<codeline lineno="411"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__WATCOMC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="412"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__LINUX__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="413"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>PLATFORM_ID<sp/>"Linux"</highlight><highlight class="normal"/></codeline>
<codeline lineno="414"><highlight class="normal"/></codeline>
<codeline lineno="415"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(__DOS__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="416"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>PLATFORM_ID<sp/>"DOS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="417"><highlight class="normal"/></codeline>
<codeline lineno="418"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(__OS2__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="419"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>PLATFORM_ID<sp/>"OS2"</highlight><highlight class="normal"/></codeline>
<codeline lineno="420"><highlight class="normal"/></codeline>
<codeline lineno="421"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(__WINDOWS__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="422"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>PLATFORM_ID<sp/>"Windows3x"</highlight><highlight class="normal"/></codeline>
<codeline lineno="423"><highlight class="normal"/></codeline>
<codeline lineno="424"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>platform<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="425"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>PLATFORM_ID</highlight><highlight class="normal"/></codeline>
<codeline lineno="426"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="427"><highlight class="normal"/></codeline>
<codeline lineno="428"><highlight class="normal"/><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>platform<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="429"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID</highlight><highlight class="normal"/></codeline>
<codeline lineno="430"><highlight class="normal"/></codeline>
<codeline lineno="431"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="432"><highlight class="normal"/></codeline>
<codeline lineno="433"><highlight class="normal"/><highlight class="comment">/*<sp/>For<sp/>windows<sp/>compilers<sp/>MSVC<sp/>and<sp/>Intel<sp/>we<sp/>can<sp/>determine</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/>the<sp/>architecture<sp/>of<sp/>the<sp/>compiler<sp/>being<sp/>used.<sp/><sp/>This<sp/>is<sp/>because</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/>the<sp/>compilers<sp/>do<sp/>not<sp/>have<sp/>flags<sp/>that<sp/>can<sp/>change<sp/>the<sp/>architecture,</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/>but<sp/>rather<sp/>depend<sp/>on<sp/>which<sp/>compiler<sp/>is<sp/>being<sp/>used</highlight></codeline>
<codeline lineno="437"><highlight class="comment">*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="438"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="439"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_M_IA64)</highlight><highlight class="normal"/></codeline>
<codeline lineno="440"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"IA64"</highlight><highlight class="normal"/></codeline>
<codeline lineno="441"><highlight class="normal"/></codeline>
<codeline lineno="442"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_X64)<sp/>||<sp/>defined(_M_AMD64)</highlight><highlight class="normal"/></codeline>
<codeline lineno="443"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"x64"</highlight><highlight class="normal"/></codeline>
<codeline lineno="444"><highlight class="normal"/></codeline>
<codeline lineno="445"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_IX86)</highlight><highlight class="normal"/></codeline>
<codeline lineno="446"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"X86"</highlight><highlight class="normal"/></codeline>
<codeline lineno="447"><highlight class="normal"/></codeline>
<codeline lineno="448"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_ARM64)</highlight><highlight class="normal"/></codeline>
<codeline lineno="449"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"ARM64"</highlight><highlight class="normal"/></codeline>
<codeline lineno="450"><highlight class="normal"/></codeline>
<codeline lineno="451"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_ARM)</highlight><highlight class="normal"/></codeline>
<codeline lineno="452"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>if<sp/>_M_ARM<sp/>==<sp/>4</highlight><highlight class="normal"/></codeline>
<codeline lineno="453"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"ARMV4I"</highlight><highlight class="normal"/></codeline>
<codeline lineno="454"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>elif<sp/>_M_ARM<sp/>==<sp/>5</highlight><highlight class="normal"/></codeline>
<codeline lineno="455"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"ARMV5I"</highlight><highlight class="normal"/></codeline>
<codeline lineno="456"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="457"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"ARMV"<sp/>STRINGIFY(_M_ARM)</highlight><highlight class="normal"/></codeline>
<codeline lineno="458"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="459"><highlight class="normal"/></codeline>
<codeline lineno="460"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_MIPS)</highlight><highlight class="normal"/></codeline>
<codeline lineno="461"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"MIPS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="462"><highlight class="normal"/></codeline>
<codeline lineno="463"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_SH)</highlight><highlight class="normal"/></codeline>
<codeline lineno="464"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"SHx"</highlight><highlight class="normal"/></codeline>
<codeline lineno="465"><highlight class="normal"/></codeline>
<codeline lineno="466"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>architecture<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="467"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>""</highlight><highlight class="normal"/></codeline>
<codeline lineno="468"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="469"><highlight class="normal"/></codeline>
<codeline lineno="470"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__WATCOMC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="471"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_M_I86)</highlight><highlight class="normal"/></codeline>
<codeline lineno="472"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"I86"</highlight><highlight class="normal"/></codeline>
<codeline lineno="473"><highlight class="normal"/></codeline>
<codeline lineno="474"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_IX86)</highlight><highlight class="normal"/></codeline>
<codeline lineno="475"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"X86"</highlight><highlight class="normal"/></codeline>
<codeline lineno="476"><highlight class="normal"/></codeline>
<codeline lineno="477"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>architecture<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="478"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>""</highlight><highlight class="normal"/></codeline>
<codeline lineno="479"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="480"><highlight class="normal"/></codeline>
<codeline lineno="481"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__IAR_SYSTEMS_ICC__)<sp/>||<sp/>defined(__IAR_SYSTEMS_ICC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="482"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__ICCARM__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="483"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"ARM"</highlight><highlight class="normal"/></codeline>
<codeline lineno="484"><highlight class="normal"/></codeline>
<codeline lineno="485"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(__ICCAVR__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="486"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"AVR"</highlight><highlight class="normal"/></codeline>
<codeline lineno="487"><highlight class="normal"/></codeline>
<codeline lineno="488"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>architecture<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="489"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>""</highlight><highlight class="normal"/></codeline>
<codeline lineno="490"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="491"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="492"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID</highlight><highlight class="normal"/></codeline>
<codeline lineno="493"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="494"><highlight class="normal"/></codeline>
<codeline lineno="495"><highlight class="normal"/><highlight class="comment">/*<sp/>Convert<sp/>integer<sp/>to<sp/>decimal<sp/>digit<sp/>literals.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="496"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>DEC(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="497"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>10000000)%10)),<sp/>\</highlight></codeline>
<codeline lineno="498"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>1000000)%10)),<sp/><sp/>\</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>100000)%10)),<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>10000)%10)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>1000)%10)),<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>100)%10)),<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>10)%10)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/><sp/>((n)<sp/>%<sp/>10))</highlight><highlight class="normal"/></codeline>
<codeline lineno="505"><highlight class="normal"/></codeline>
<codeline lineno="506"><highlight class="normal"/><highlight class="comment">/*<sp/>Convert<sp/>integer<sp/>to<sp/>hex<sp/>digit<sp/>literals.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="507"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>HEX(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="508"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;28<sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;24<sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;20<sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;16<sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;12<sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;8<sp/><sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;4<sp/><sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>0xF))</highlight><highlight class="normal"/></codeline>
<codeline lineno="516"><highlight class="normal"/></codeline>
<codeline lineno="517"><highlight class="normal"/><highlight class="comment">/*<sp/>Construct<sp/>a<sp/>string<sp/>literal<sp/>encoding<sp/>the<sp/>version<sp/>number<sp/>components.<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="518"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>COMPILER_VERSION_MAJOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="519"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>info_version[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'I'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'N'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'F'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'O'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">':'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'c'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'o'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'m'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'p'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'l'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'_'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'v'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'s'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'o'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'n'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'['</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>COMPILER_VERSION_MAJOR,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"/><highlight class="preprocessor">#<sp/>ifdef<sp/>COMPILER_VERSION_MINOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>COMPILER_VERSION_MINOR,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>COMPILER_VERSION_PATCH</highlight><highlight class="normal"/></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>COMPILER_VERSION_PATCH,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>COMPILER_VERSION_TWEAK</highlight><highlight class="normal"/></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>COMPILER_VERSION_TWEAK,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="530"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="531"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">']'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'\0'</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="533"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="534"><highlight class="normal"/></codeline>
<codeline lineno="535"><highlight class="normal"/><highlight class="comment">/*<sp/>Construct<sp/>a<sp/>string<sp/>literal<sp/>encoding<sp/>the<sp/>internal<sp/>version<sp/>number.<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="536"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>COMPILER_VERSION_INTERNAL</highlight><highlight class="normal"/></codeline>
<codeline lineno="537"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>info_version_internal[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'I'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'N'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'F'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'O'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">':'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'c'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'o'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'m'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'p'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'l'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'_'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'v'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'s'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'o'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'n'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'_'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'n'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'t'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'n'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'a'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'l'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'['</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>COMPILER_VERSION_INTERNAL,</highlight><highlight class="charliteral">']'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'\0'</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="542"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="543"><highlight class="normal"/></codeline>
<codeline lineno="544"><highlight class="normal"/><highlight class="comment">/*<sp/>Construct<sp/>a<sp/>string<sp/>literal<sp/>encoding<sp/>the<sp/>version<sp/>number<sp/>components.<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="545"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>SIMULATE_VERSION_MAJOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="546"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>info_simulate_version[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'I'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'N'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'F'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'O'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">':'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'s'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'m'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'u'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'l'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'a'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'t'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'_'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'v'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'s'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'o'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'n'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'['</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>SIMULATE_VERSION_MAJOR,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"/><highlight class="preprocessor">#<sp/>ifdef<sp/>SIMULATE_VERSION_MINOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>SIMULATE_VERSION_MINOR,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>SIMULATE_VERSION_PATCH</highlight><highlight class="normal"/></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>SIMULATE_VERSION_PATCH,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>SIMULATE_VERSION_TWEAK</highlight><highlight class="normal"/></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>SIMULATE_VERSION_TWEAK,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="557"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="558"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">']'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'\0'</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="560"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="561"><highlight class="normal"/></codeline>
<codeline lineno="562"><highlight class="normal"/><highlight class="comment">/*<sp/>Construct<sp/>the<sp/>string<sp/>literal<sp/>in<sp/>pieces<sp/>to<sp/>prevent<sp/>the<sp/>source<sp/>from</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/>getting<sp/>matched.<sp/><sp/>Store<sp/>it<sp/>in<sp/>a<sp/>pointer<sp/>rather<sp/>than<sp/>an<sp/>array</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/>because<sp/>some<sp/>compilers<sp/>will<sp/>just<sp/>produce<sp/>instructions<sp/>to<sp/>fill<sp/>the</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/>array<sp/>rather<sp/>than<sp/>assigning<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>static<sp/>array.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="566"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>info_platform<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"platform["</highlight><highlight class="normal"><sp/>PLATFORM_ID<sp/></highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>info_arch<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"arch["</highlight><highlight class="normal"><sp/>ARCHITECTURE_ID<sp/></highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"/></codeline>
<codeline lineno="569"><highlight class="normal"/></codeline>
<codeline lineno="570"><highlight class="normal"/></codeline>
<codeline lineno="571"><highlight class="normal"/></codeline>
<codeline lineno="572"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>!defined(__STDC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="573"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(__clang__))<sp/>\</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"><sp/><sp/>||<sp/>(defined(__ibmxl__)<sp/>||<sp/>defined(__IBMC__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="575"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>C_DIALECT<sp/>"90"</highlight><highlight class="normal"/></codeline>
<codeline lineno="576"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="577"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>C_DIALECT</highlight><highlight class="normal"/></codeline>
<codeline lineno="578"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="579"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>201000L</highlight><highlight class="normal"/></codeline>
<codeline lineno="580"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>C_DIALECT<sp/>"11"</highlight><highlight class="normal"/></codeline>
<codeline lineno="581"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"/></codeline>
<codeline lineno="582"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>C_DIALECT<sp/>"99"</highlight><highlight class="normal"/></codeline>
<codeline lineno="583"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="584"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>C_DIALECT<sp/>"90"</highlight><highlight class="normal"/></codeline>
<codeline lineno="585"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="586"><highlight class="normal"/><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>info_language_dialect_default<sp/>=</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"dialect_default["</highlight><highlight class="normal"><sp/>C_DIALECT<sp/></highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"/></codeline>
<codeline lineno="589"><highlight class="normal"/><highlight class="comment">/*--------------------------------------------------------------------------*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="590"><highlight class="normal"/></codeline>
<codeline lineno="591"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>ID_VOID_MAIN</highlight><highlight class="normal"/></codeline>
<codeline lineno="592"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>main()<sp/>{}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="594"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__CLASSIC_C__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="595"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(argc,<sp/>argv)<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="597"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="598"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>require<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_compiler[argc];</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_platform[argc];</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_arch[argc];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>COMPILER_VERSION_MAJOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_version[argc];</highlight></codeline>
<codeline lineno="606"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="607"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>COMPILER_VERSION_INTERNAL</highlight><highlight class="normal"/></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_version_internal[argc];</highlight></codeline>
<codeline lineno="609"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="610"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>SIMULATE_ID</highlight><highlight class="normal"/></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_simulate[argc];</highlight></codeline>
<codeline lineno="612"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="613"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>SIMULATE_VERSION_MAJOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_simulate_version[argc];</highlight></codeline>
<codeline lineno="615"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="616"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__CRAYXE)<sp/>||<sp/>defined(__CRAYXC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_cray[argc];</highlight></codeline>
<codeline lineno="618"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_language_dialect_default[argc];</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>(void)argv;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>require;</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="CMakeCXXCompilerId_8cpp" kind="file" language="C++">
    <compoundname>CMakeCXXCompilerId.cpp</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="CMakeCXXCompilerId_8cpp_1a4b0efeb7a5d59313986b3a0390f050f6" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* info_compiler</definition>
        <argsstring/>
        <name>info_compiler</name>
        <initializer>= "INFO" ":" "compiler[" COMPILER_ID "]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="304" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCXXCompilerId_8cpp_1a3183b7b04f5924048f9b117ebcb45226" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* info_simulate</definition>
        <argsstring/>
        <name>info_simulate</name>
        <initializer>= "INFO" ":" "simulate[" SIMULATE_ID "]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="306" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCXXCompilerId_8cpp_1a6369dd31ba1f7ebce2384ff8f8f32df7" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* qnxnto</definition>
        <argsstring/>
        <name>qnxnto</name>
        <initializer>= "INFO" ":" "qnxnto[]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="310" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCXXCompilerId_8cpp_1a9e28d482fff14a350c956c48524712d6" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* info_cray</definition>
        <argsstring/>
        <name>info_cray</name>
        <initializer>= "INFO" ":" "compiler_wrapper[CrayPrgEnv]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="314" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCXXCompilerId_8cpp_1a74688a78009d8531274b1c3cb63ba8aa" prot="public" static="no" mutable="no">
        <type>char const</type>
        <definition>char const info_version[]</definition>
        <argsstring>[]</argsstring>
        <name>info_version</name>
        <initializer>= {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
  COMPILER_VERSION_MAJOR,
# ifdef COMPILER_VERSION_MINOR
  '.', COMPILER_VERSION_MINOR,
#  ifdef COMPILER_VERSION_PATCH
   '.', COMPILER_VERSION_PATCH,
#   ifdef COMPILER_VERSION_TWEAK
    '.', COMPILER_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="504" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCXXCompilerId_8cpp_1a129136602504b3f22bcafe03b2f464a5" prot="public" static="no" mutable="no">
        <type>char const</type>
        <definition>char const info_version_internal[]</definition>
        <argsstring>[]</argsstring>
        <name>info_version_internal</name>
        <initializer>= {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
  'i','n','t','e','r','n','a','l','[',
  COMPILER_VERSION_INTERNAL,']','\0'}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="522" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCXXCompilerId_8cpp_1a05fcc1e67566c09b9c89ff04c20daf0a" prot="public" static="no" mutable="no">
        <type>char const</type>
        <definition>char const info_simulate_version[]</definition>
        <argsstring>[]</argsstring>
        <name>info_simulate_version</name>
        <initializer>= {
  'I', 'N', 'F', 'O', ':',
  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
  SIMULATE_VERSION_MAJOR,
# ifdef SIMULATE_VERSION_MINOR
  '.', SIMULATE_VERSION_MINOR,
#  ifdef SIMULATE_VERSION_PATCH
   '.', SIMULATE_VERSION_PATCH,
#   ifdef SIMULATE_VERSION_TWEAK
    '.', SIMULATE_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="531" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCXXCompilerId_8cpp_1a2321403dee54ee23f0c2fa849c60f7d4" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* info_platform</definition>
        <argsstring/>
        <name>info_platform</name>
        <initializer>= "INFO" ":" "platform[" PLATFORM_ID "]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="551" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCXXCompilerId_8cpp_1a59647e99d304ed33b15cb284c27ed391" prot="public" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* info_arch</definition>
        <argsstring/>
        <name>info_arch</name>
        <initializer>= "INFO" ":" "arch[" ARCHITECTURE_ID "]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="552" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="CMakeCXXCompilerId_8cpp_1a1ce162bad2fe6966ac8b33cc19e120b8" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* info_language_dialect_default</definition>
        <argsstring/>
        <name>info_language_dialect_default</name>
        <initializer>= "INFO" ":" "dialect_default["
#if CXX_STD &gt; 201703L
  "20"
#elif CXX_STD &gt;= 201703L
  "17"
#elif CXX_STD &gt;= 201402L
  "14"
#elif CXX_STD &gt;= 201103L
  "11"
#else
  "98"
#endif
"]"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="563" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="563" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="CMakeCXXCompilerId_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" line="579" column="1" bodyfile="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp" bodystart="579" bodyend="602"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>This<sp/>source<sp/>file<sp/>must<sp/>have<sp/>a<sp/>.cpp<sp/>extension<sp/>so<sp/>that<sp/>all<sp/>C++<sp/>compilers</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>recognize<sp/>the<sp/>extension<sp/>without<sp/>flags.<sp/><sp/>Borland<sp/>does<sp/>not<sp/>know<sp/>.cxx<sp/>for</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>example.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="preprocessor">#<sp/>error<sp/>"A<sp/>C<sp/>compiler<sp/>has<sp/>been<sp/>selected<sp/>for<sp/>C++."</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">/*<sp/>Version<sp/>number<sp/>components:<sp/>V=Version,<sp/>R=Revision,<sp/>P=Patch</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>Version<sp/>date<sp/>components:<sp/><sp/><sp/>YYYY=Year,<sp/>MM=Month,<sp/><sp/><sp/>DD=Day<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__COMO__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Comeau"</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__COMO_VERSION__<sp/>=<sp/>VRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__COMO_VERSION__<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__COMO_VERSION__<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__INTEL_COMPILER)<sp/>||<sp/>defined(__ICC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Intel"</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_ID<sp/>"MSVC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__INTEL_COMPILER<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__INTEL_COMPILER/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__INTEL_COMPILER/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__INTEL_COMPILER_UPDATE)</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__INTEL_COMPILER_UPDATE)</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__INTEL_COMPILER<sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__INTEL_COMPILER_BUILD_DATE)</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__INTEL_COMPILER_BUILD_DATE<sp/>=<sp/>YYYYMMDD<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(__INTEL_COMPILER_BUILD_DATE)</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_VER<sp/>=<sp/>VVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MAJOR<sp/>DEC(_MSC_VER<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MINOR<sp/>DEC(_MSC_VER<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__PATHCC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"PathScale"</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__PATHCC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__PATHCC_MINOR__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__PATHCC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__PATHCC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__BORLANDC__)<sp/>&amp;&amp;<sp/>defined(__CODEGEARC_VERSION__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Embarcadero"</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>HEX(__CODEGEARC_VERSION__&gt;&gt;24<sp/>&amp;<sp/>0x00FF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>HEX(__CODEGEARC_VERSION__&gt;&gt;16<sp/>&amp;<sp/>0x00FF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__CODEGEARC_VERSION__<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>0xFFFF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__BORLANDC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Borland"</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__BORLANDC__<sp/>=<sp/>0xVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>HEX(__BORLANDC__&gt;&gt;8)</highlight><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>HEX(__BORLANDC__<sp/>&amp;<sp/>0xFF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__WATCOMC__)<sp/>&amp;&amp;<sp/>__WATCOMC__<sp/>&lt;<sp/>1200</highlight><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Watcom"</highlight><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__WATCOMC__<sp/>=<sp/>VVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__WATCOMC__<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC((__WATCOMC__<sp/>/<sp/>10)<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>(__WATCOMC__<sp/>%<sp/>10)<sp/>&gt;<sp/>0</highlight><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__WATCOMC__<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__WATCOMC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"OpenWatcom"</highlight><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__WATCOMC__<sp/>=<sp/>VVRP<sp/>+<sp/>1100<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC((__WATCOMC__<sp/>-<sp/>1100)<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC((__WATCOMC__<sp/>/<sp/>10)<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>(__WATCOMC__<sp/>%<sp/>10)<sp/>&gt;<sp/>0</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__WATCOMC__<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__SUNPRO_CC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"SunPro"</highlight><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>__SUNPRO_CC<sp/>&gt;=<sp/>0x5100</highlight><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__SUNPRO_CC<sp/>=<sp/>0xVRRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>HEX(__SUNPRO_CC&gt;&gt;12)</highlight><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>HEX(__SUNPRO_CC&gt;&gt;4<sp/>&amp;<sp/>0xFF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>HEX(__SUNPRO_CC<sp/><sp/><sp/><sp/>&amp;<sp/>0xF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__SUNPRO_CC<sp/>=<sp/>0xVRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>HEX(__SUNPRO_CC&gt;&gt;8)</highlight><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>HEX(__SUNPRO_CC&gt;&gt;4<sp/>&amp;<sp/>0xF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>HEX(__SUNPRO_CC<sp/><sp/><sp/><sp/>&amp;<sp/>0xF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__HP_aCC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"HP"</highlight><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__HP_aCC<sp/>=<sp/>VVRRPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__HP_aCC/10000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__HP_aCC/100<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="98"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__HP_aCC<sp/><sp/><sp/><sp/><sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"/></codeline>
<codeline lineno="100"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__DECCXX)</highlight><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Compaq"</highlight><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__DECCXX_VER<sp/>=<sp/>VVRRTPPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__DECCXX_VER/10000000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__DECCXX_VER/100000<sp/><sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__DECCXX_VER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>10000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__IBMCPP__)<sp/>&amp;&amp;<sp/>defined(__COMPILER_VER__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="108"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"zOS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__ibmxl__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__ibmxl_version__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="111"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__ibmxl_release__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__ibmxl_modification__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(__ibmxl_ptf_fix_level__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="114"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__IBMCPP__<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__IBMCPP__/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__IBMCPP__/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__IBMCPP__<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__ibmxl__)<sp/>||<sp/>(defined(__IBMCPP__)<sp/>&amp;&amp;<sp/>!defined(__COMPILER_VER__)<sp/>&amp;&amp;<sp/>__IBMCPP__<sp/>&gt;=<sp/>800)</highlight><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"XL"</highlight><highlight class="normal"/></codeline>
<codeline lineno="124"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__ibmxl__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__ibmxl_version__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__ibmxl_release__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__ibmxl_modification__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="128"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(__ibmxl_ptf_fix_level__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__IBMCPP__<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__IBMCPP__/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__IBMCPP__/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__IBMCPP__<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="134"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__IBMCPP__)<sp/>&amp;&amp;<sp/>!defined(__COMPILER_VER__)<sp/>&amp;&amp;<sp/>__IBMCPP__<sp/>&lt;<sp/>800</highlight><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"VisualAge"</highlight><highlight class="normal"/></codeline>
<codeline lineno="139"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__ibmxl__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__ibmxl_version__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__ibmxl_release__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__ibmxl_modification__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(__ibmxl_ptf_fix_level__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__IBMCPP__<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="146"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__IBMCPP__/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__IBMCPP__/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="148"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__IBMCPP__<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="150"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"/></codeline>
<codeline lineno="152"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__PGI)</highlight><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"PGI"</highlight><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__PGIC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__PGIC_MINOR__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="156"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__PGIC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__PGIC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="158"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="159"><highlight class="normal"/></codeline>
<codeline lineno="160"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_CRAYC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="161"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Cray"</highlight><highlight class="normal"/></codeline>
<codeline lineno="162"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(_RELEASE_MAJOR)</highlight><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(_RELEASE_MINOR)</highlight><highlight class="normal"/></codeline>
<codeline lineno="164"><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__TI_COMPILER_VERSION__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="166"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"TI"</highlight><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__TI_COMPILER_VERSION__<sp/>=<sp/>VVVRRRPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="168"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__TI_COMPILER_VERSION__/1000000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="169"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__TI_COMPILER_VERSION__/1000<sp/><sp/><sp/>%<sp/>1000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__TI_COMPILER_VERSION__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>1000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="171"><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__FUJITSU)<sp/>||<sp/>defined(__FCC_VERSION)<sp/>||<sp/>defined(__fcc_version)</highlight><highlight class="normal"/></codeline>
<codeline lineno="173"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Fujitsu"</highlight><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__SCO_VERSION__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"SCO"</highlight><highlight class="normal"/></codeline>
<codeline lineno="177"><highlight class="normal"/></codeline>
<codeline lineno="178"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__clang__)<sp/>&amp;&amp;<sp/>defined(__apple_build_version__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="179"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"AppleClang"</highlight><highlight class="normal"/></codeline>
<codeline lineno="180"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="181"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_ID<sp/>"MSVC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="182"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="183"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__clang_major__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__clang_minor__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="185"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__clang_patchlevel__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="186"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_VER<sp/>=<sp/>VVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="188"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MAJOR<sp/>DEC(_MSC_VER<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="189"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MINOR<sp/>DEC(_MSC_VER<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="190"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="191"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(__apple_build_version__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="192"><highlight class="normal"/></codeline>
<codeline lineno="193"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__clang__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="194"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"Clang"</highlight><highlight class="normal"/></codeline>
<codeline lineno="195"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_ID<sp/>"MSVC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="197"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="198"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__clang_major__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="199"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__clang_minor__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="200"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__clang_patchlevel__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="201"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_VER<sp/>=<sp/>VVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="203"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MAJOR<sp/>DEC(_MSC_VER<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="204"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMULATE_VERSION_MINOR<sp/>DEC(_MSC_VER<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="205"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="206"><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/>||<sp/>defined(__GNUG__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="208"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"GNU"</highlight><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__GNUC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__GNUC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="211"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="212"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__GNUG__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="214"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__GNUC_MINOR__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="215"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__GNUC_MINOR__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="217"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__GNUC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="218"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__GNUC_PATCHLEVEL__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="219"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="221"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"MSVC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_VER<sp/>=<sp/>VVRR<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="224"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(_MSC_VER<sp/>/<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="225"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(_MSC_VER<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="226"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_FULL_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="227"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>if<sp/>_MSC_VER<sp/>&gt;=<sp/>1400</highlight><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_FULL_VER<sp/>=<sp/>VVRRPPPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="229"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(_MSC_FULL_VER<sp/>%<sp/>100000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_MSC_FULL_VER<sp/>=<sp/>VVRRPPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="232"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(_MSC_FULL_VER<sp/>%<sp/>10000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="233"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="234"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_BUILD)</highlight><highlight class="normal"/></codeline>
<codeline lineno="236"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_TWEAK<sp/>DEC(_MSC_BUILD)</highlight><highlight class="normal"/></codeline>
<codeline lineno="237"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="238"><highlight class="normal"/></codeline>
<codeline lineno="239"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__VISUALDSPVERSION__)<sp/>||<sp/>defined(__ADSPBLACKFIN__)<sp/>||<sp/>defined(__ADSPTS__)<sp/>||<sp/>defined(__ADSP21000__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="240"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"ADSP"</highlight><highlight class="normal"/></codeline>
<codeline lineno="241"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__VISUALDSPVERSION__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__VISUALDSPVERSION__<sp/>=<sp/>0xVVRRPP00<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="243"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>HEX(__VISUALDSPVERSION__&gt;&gt;24)</highlight><highlight class="normal"/></codeline>
<codeline lineno="244"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>HEX(__VISUALDSPVERSION__&gt;&gt;16<sp/>&amp;<sp/>0xFF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="245"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>HEX(__VISUALDSPVERSION__&gt;&gt;8<sp/><sp/>&amp;<sp/>0xFF)</highlight><highlight class="normal"/></codeline>
<codeline lineno="246"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="247"><highlight class="normal"/></codeline>
<codeline lineno="248"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__IAR_SYSTEMS_ICC__)<sp/>||<sp/>defined(__IAR_SYSTEMS_ICC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="249"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"IAR"</highlight><highlight class="normal"/></codeline>
<codeline lineno="250"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__VER__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="251"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC((__VER__)<sp/>/<sp/>1000000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(((__VER__)<sp/>/<sp/>1000)<sp/>%<sp/>1000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="253"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC((__VER__)<sp/>%<sp/>1000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_INTERNAL<sp/>DEC(__IAR_SYSTEMS_ICC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="255"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"/></codeline>
<codeline lineno="257"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__ARMCC_VERSION)</highlight><highlight class="normal"/></codeline>
<codeline lineno="258"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"ARMCC"</highlight><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>__ARMCC_VERSION<sp/>&gt;=<sp/>1000000</highlight><highlight class="normal"/></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__ARMCC_VERSION<sp/>=<sp/>VRRPPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="261"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__ARMCC_VERSION/1000000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="262"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__ARMCC_VERSION/10000<sp/>%<sp/>100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="263"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__ARMCC_VERSION<sp/><sp/><sp/><sp/><sp/>%<sp/>10000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="264"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>__ARMCC_VERSION<sp/>=<sp/>VRPPPP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="266"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(__ARMCC_VERSION/100000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="267"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(__ARMCC_VERSION/10000<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="268"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/>#<sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(__ARMCC_VERSION<sp/><sp/><sp/><sp/>%<sp/>10000)</highlight><highlight class="normal"/></codeline>
<codeline lineno="269"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="270"><highlight class="normal"/></codeline>
<codeline lineno="271"><highlight class="normal"/></codeline>
<codeline lineno="272"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_SGI_COMPILER_VERSION)<sp/>||<sp/>defined(_COMPILER_VERSION)</highlight><highlight class="normal"/></codeline>
<codeline lineno="273"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"MIPSpro"</highlight><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_SGI_COMPILER_VERSION)</highlight><highlight class="normal"/></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>_SGI_COMPILER_VERSION<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="276"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(_SGI_COMPILER_VERSION/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="277"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(_SGI_COMPILER_VERSION/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="278"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(_SGI_COMPILER_VERSION<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="279"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>_COMPILER_VERSION<sp/>=<sp/>VRP<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="281"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MAJOR<sp/>DEC(_COMPILER_VERSION/100)</highlight><highlight class="normal"/></codeline>
<codeline lineno="282"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_MINOR<sp/>DEC(_COMPILER_VERSION/10<sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="283"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_VERSION_PATCH<sp/>DEC(_COMPILER_VERSION<sp/><sp/><sp/><sp/>%<sp/>10)</highlight><highlight class="normal"/></codeline>
<codeline lineno="284"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="285"><highlight class="normal"/></codeline>
<codeline lineno="286"><highlight class="normal"/></codeline>
<codeline lineno="287"><highlight class="normal"/><highlight class="comment">/*<sp/>These<sp/>compilers<sp/>are<sp/>either<sp/>not<sp/>known<sp/>or<sp/>too<sp/>old<sp/>to<sp/>define<sp/>an</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/>identification<sp/>macro.<sp/><sp/>Try<sp/>to<sp/>identify<sp/>the<sp/>platform<sp/>and<sp/>guess<sp/>that</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/>it<sp/>is<sp/>the<sp/>native<sp/>compiler.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="290"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__sgi)</highlight><highlight class="normal"/></codeline>
<codeline lineno="291"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"MIPSpro"</highlight><highlight class="normal"/></codeline>
<codeline lineno="292"><highlight class="normal"/></codeline>
<codeline lineno="293"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__hpux)<sp/>||<sp/>defined(__hpua)</highlight><highlight class="normal"/></codeline>
<codeline lineno="294"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>"HP"</highlight><highlight class="normal"/></codeline>
<codeline lineno="295"><highlight class="normal"/></codeline>
<codeline lineno="296"><highlight class="normal"/><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>compiler<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="297"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>COMPILER_ID<sp/>""</highlight><highlight class="normal"/></codeline>
<codeline lineno="298"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="299"><highlight class="normal"/></codeline>
<codeline lineno="300"><highlight class="normal"/><highlight class="comment">/*<sp/>Construct<sp/>the<sp/>string<sp/>literal<sp/>in<sp/>pieces<sp/>to<sp/>prevent<sp/>the<sp/>source<sp/>from</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/>getting<sp/>matched.<sp/><sp/>Store<sp/>it<sp/>in<sp/>a<sp/>pointer<sp/>rather<sp/>than<sp/>an<sp/>array</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/>because<sp/>some<sp/>compilers<sp/>will<sp/>just<sp/>produce<sp/>instructions<sp/>to<sp/>fill<sp/>the</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/>array<sp/>rather<sp/>than<sp/>assigning<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>static<sp/>array.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="304"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>info_compiler<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"compiler["</highlight><highlight class="normal"><sp/>COMPILER_ID<sp/></highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>SIMULATE_ID</highlight><highlight class="normal"/></codeline>
<codeline lineno="306"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>info_simulate<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"simulate["</highlight><highlight class="normal"><sp/>SIMULATE_ID<sp/></highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="308"><highlight class="normal"/></codeline>
<codeline lineno="309"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>__QNXNTO__</highlight><highlight class="normal"/></codeline>
<codeline lineno="310"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>qnxnto<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"qnxnto[]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="312"><highlight class="normal"/></codeline>
<codeline lineno="313"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__CRAYXE)<sp/>||<sp/>defined(__CRAYXC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="314"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*info_cray<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"compiler_wrapper[CrayPrgEnv]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="316"><highlight class="normal"/></codeline>
<codeline lineno="317"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>STRINGIFY_HELPER(X)<sp/>#X</highlight><highlight class="normal"/></codeline>
<codeline lineno="318"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>STRINGIFY(X)<sp/>STRINGIFY_HELPER(X)</highlight><highlight class="normal"/></codeline>
<codeline lineno="319"><highlight class="normal"/></codeline>
<codeline lineno="320"><highlight class="normal"/><highlight class="comment">/*<sp/>Identify<sp/>known<sp/>platforms<sp/>by<sp/>name.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="321"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__linux)<sp/>||<sp/>defined(__linux__)<sp/>||<sp/>defined(linux)</highlight><highlight class="normal"/></codeline>
<codeline lineno="322"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Linux"</highlight><highlight class="normal"/></codeline>
<codeline lineno="323"><highlight class="normal"/></codeline>
<codeline lineno="324"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__CYGWIN__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="325"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Cygwin"</highlight><highlight class="normal"/></codeline>
<codeline lineno="326"><highlight class="normal"/></codeline>
<codeline lineno="327"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__MINGW32__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="328"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"MinGW"</highlight><highlight class="normal"/></codeline>
<codeline lineno="329"><highlight class="normal"/></codeline>
<codeline lineno="330"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__APPLE__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="331"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Darwin"</highlight><highlight class="normal"/></codeline>
<codeline lineno="332"><highlight class="normal"/></codeline>
<codeline lineno="333"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_WIN32)<sp/>||<sp/>defined(__WIN32__)<sp/>||<sp/>defined(WIN32)</highlight><highlight class="normal"/></codeline>
<codeline lineno="334"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Windows"</highlight><highlight class="normal"/></codeline>
<codeline lineno="335"><highlight class="normal"/></codeline>
<codeline lineno="336"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__FreeBSD__)<sp/>||<sp/>defined(__FreeBSD)</highlight><highlight class="normal"/></codeline>
<codeline lineno="337"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"FreeBSD"</highlight><highlight class="normal"/></codeline>
<codeline lineno="338"><highlight class="normal"/></codeline>
<codeline lineno="339"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__NetBSD__)<sp/>||<sp/>defined(__NetBSD)</highlight><highlight class="normal"/></codeline>
<codeline lineno="340"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"NetBSD"</highlight><highlight class="normal"/></codeline>
<codeline lineno="341"><highlight class="normal"/></codeline>
<codeline lineno="342"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__OpenBSD__)<sp/>||<sp/>defined(__OPENBSD)</highlight><highlight class="normal"/></codeline>
<codeline lineno="343"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"OpenBSD"</highlight><highlight class="normal"/></codeline>
<codeline lineno="344"><highlight class="normal"/></codeline>
<codeline lineno="345"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__sun)<sp/>||<sp/>defined(sun)</highlight><highlight class="normal"/></codeline>
<codeline lineno="346"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"SunOS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="347"><highlight class="normal"/></codeline>
<codeline lineno="348"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_AIX)<sp/>||<sp/>defined(__AIX)<sp/>||<sp/>defined(__AIX__)<sp/>||<sp/>defined(__aix)<sp/>||<sp/>defined(__aix__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="349"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"AIX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="350"><highlight class="normal"/></codeline>
<codeline lineno="351"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__sgi)<sp/>||<sp/>defined(__sgi__)<sp/>||<sp/>defined(_SGI)</highlight><highlight class="normal"/></codeline>
<codeline lineno="352"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"IRIX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="353"><highlight class="normal"/></codeline>
<codeline lineno="354"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__hpux)<sp/>||<sp/>defined(__hpux__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="355"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"HP-UX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="356"><highlight class="normal"/></codeline>
<codeline lineno="357"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__HAIKU__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="358"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Haiku"</highlight><highlight class="normal"/></codeline>
<codeline lineno="359"><highlight class="normal"/></codeline>
<codeline lineno="360"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__BeOS)<sp/>||<sp/>defined(__BEOS__)<sp/>||<sp/>defined(_BEOS)</highlight><highlight class="normal"/></codeline>
<codeline lineno="361"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"BeOS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="362"><highlight class="normal"/></codeline>
<codeline lineno="363"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__QNX__)<sp/>||<sp/>defined(__QNXNTO__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="364"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"QNX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="365"><highlight class="normal"/></codeline>
<codeline lineno="366"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__tru64)<sp/>||<sp/>defined(_tru64)<sp/>||<sp/>defined(__TRU64__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="367"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Tru64"</highlight><highlight class="normal"/></codeline>
<codeline lineno="368"><highlight class="normal"/></codeline>
<codeline lineno="369"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__riscos)<sp/>||<sp/>defined(__riscos__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="370"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"RISCos"</highlight><highlight class="normal"/></codeline>
<codeline lineno="371"><highlight class="normal"/></codeline>
<codeline lineno="372"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__sinix)<sp/>||<sp/>defined(__sinix__)<sp/>||<sp/>defined(__SINIX__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="373"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"SINIX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="374"><highlight class="normal"/></codeline>
<codeline lineno="375"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__UNIX_SV__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="376"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"UNIX_SV"</highlight><highlight class="normal"/></codeline>
<codeline lineno="377"><highlight class="normal"/></codeline>
<codeline lineno="378"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__bsdos__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="379"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"BSDOS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="380"><highlight class="normal"/></codeline>
<codeline lineno="381"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_MPRAS)<sp/>||<sp/>defined(MPRAS)</highlight><highlight class="normal"/></codeline>
<codeline lineno="382"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"MP-RAS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="383"><highlight class="normal"/></codeline>
<codeline lineno="384"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__osf)<sp/>||<sp/>defined(__osf__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="385"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"OSF1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="386"><highlight class="normal"/></codeline>
<codeline lineno="387"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(_SCO_SV)<sp/>||<sp/>defined(SCO_SV)<sp/>||<sp/>defined(sco_sv)</highlight><highlight class="normal"/></codeline>
<codeline lineno="388"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"SCO_SV"</highlight><highlight class="normal"/></codeline>
<codeline lineno="389"><highlight class="normal"/></codeline>
<codeline lineno="390"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__ultrix)<sp/>||<sp/>defined(__ultrix__)<sp/>||<sp/>defined(_ULTRIX)</highlight><highlight class="normal"/></codeline>
<codeline lineno="391"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"ULTRIX"</highlight><highlight class="normal"/></codeline>
<codeline lineno="392"><highlight class="normal"/></codeline>
<codeline lineno="393"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__XENIX__)<sp/>||<sp/>defined(_XENIX)<sp/>||<sp/>defined(XENIX)</highlight><highlight class="normal"/></codeline>
<codeline lineno="394"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID<sp/>"Xenix"</highlight><highlight class="normal"/></codeline>
<codeline lineno="395"><highlight class="normal"/></codeline>
<codeline lineno="396"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__WATCOMC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="397"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__LINUX__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="398"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>PLATFORM_ID<sp/>"Linux"</highlight><highlight class="normal"/></codeline>
<codeline lineno="399"><highlight class="normal"/></codeline>
<codeline lineno="400"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(__DOS__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="401"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>PLATFORM_ID<sp/>"DOS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="402"><highlight class="normal"/></codeline>
<codeline lineno="403"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(__OS2__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="404"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>PLATFORM_ID<sp/>"OS2"</highlight><highlight class="normal"/></codeline>
<codeline lineno="405"><highlight class="normal"/></codeline>
<codeline lineno="406"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(__WINDOWS__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="407"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>PLATFORM_ID<sp/>"Windows3x"</highlight><highlight class="normal"/></codeline>
<codeline lineno="408"><highlight class="normal"/></codeline>
<codeline lineno="409"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>platform<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="410"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>PLATFORM_ID</highlight><highlight class="normal"/></codeline>
<codeline lineno="411"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="412"><highlight class="normal"/></codeline>
<codeline lineno="413"><highlight class="normal"/><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>platform<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="414"><highlight class="normal"/><highlight class="preprocessor">#<sp/>define<sp/>PLATFORM_ID</highlight><highlight class="normal"/></codeline>
<codeline lineno="415"><highlight class="normal"/></codeline>
<codeline lineno="416"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="417"><highlight class="normal"/></codeline>
<codeline lineno="418"><highlight class="normal"/><highlight class="comment">/*<sp/>For<sp/>windows<sp/>compilers<sp/>MSVC<sp/>and<sp/>Intel<sp/>we<sp/>can<sp/>determine</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/>the<sp/>architecture<sp/>of<sp/>the<sp/>compiler<sp/>being<sp/>used.<sp/><sp/>This<sp/>is<sp/>because</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/>the<sp/>compilers<sp/>do<sp/>not<sp/>have<sp/>flags<sp/>that<sp/>can<sp/>change<sp/>the<sp/>architecture,</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/>but<sp/>rather<sp/>depend<sp/>on<sp/>which<sp/>compiler<sp/>is<sp/>being<sp/>used</highlight></codeline>
<codeline lineno="422"><highlight class="comment">*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="423"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_MSC_VER)</highlight><highlight class="normal"/></codeline>
<codeline lineno="424"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_M_IA64)</highlight><highlight class="normal"/></codeline>
<codeline lineno="425"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"IA64"</highlight><highlight class="normal"/></codeline>
<codeline lineno="426"><highlight class="normal"/></codeline>
<codeline lineno="427"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_X64)<sp/>||<sp/>defined(_M_AMD64)</highlight><highlight class="normal"/></codeline>
<codeline lineno="428"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"x64"</highlight><highlight class="normal"/></codeline>
<codeline lineno="429"><highlight class="normal"/></codeline>
<codeline lineno="430"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_IX86)</highlight><highlight class="normal"/></codeline>
<codeline lineno="431"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"X86"</highlight><highlight class="normal"/></codeline>
<codeline lineno="432"><highlight class="normal"/></codeline>
<codeline lineno="433"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_ARM64)</highlight><highlight class="normal"/></codeline>
<codeline lineno="434"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"ARM64"</highlight><highlight class="normal"/></codeline>
<codeline lineno="435"><highlight class="normal"/></codeline>
<codeline lineno="436"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_ARM)</highlight><highlight class="normal"/></codeline>
<codeline lineno="437"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>if<sp/>_M_ARM<sp/>==<sp/>4</highlight><highlight class="normal"/></codeline>
<codeline lineno="438"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"ARMV4I"</highlight><highlight class="normal"/></codeline>
<codeline lineno="439"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>elif<sp/>_M_ARM<sp/>==<sp/>5</highlight><highlight class="normal"/></codeline>
<codeline lineno="440"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"ARMV5I"</highlight><highlight class="normal"/></codeline>
<codeline lineno="441"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="442"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"ARMV"<sp/>STRINGIFY(_M_ARM)</highlight><highlight class="normal"/></codeline>
<codeline lineno="443"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="444"><highlight class="normal"/></codeline>
<codeline lineno="445"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_MIPS)</highlight><highlight class="normal"/></codeline>
<codeline lineno="446"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"MIPS"</highlight><highlight class="normal"/></codeline>
<codeline lineno="447"><highlight class="normal"/></codeline>
<codeline lineno="448"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_SH)</highlight><highlight class="normal"/></codeline>
<codeline lineno="449"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"SHx"</highlight><highlight class="normal"/></codeline>
<codeline lineno="450"><highlight class="normal"/></codeline>
<codeline lineno="451"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>architecture<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="452"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>""</highlight><highlight class="normal"/></codeline>
<codeline lineno="453"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="454"><highlight class="normal"/></codeline>
<codeline lineno="455"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__WATCOMC__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="456"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_M_I86)</highlight><highlight class="normal"/></codeline>
<codeline lineno="457"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"I86"</highlight><highlight class="normal"/></codeline>
<codeline lineno="458"><highlight class="normal"/></codeline>
<codeline lineno="459"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(_M_IX86)</highlight><highlight class="normal"/></codeline>
<codeline lineno="460"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"X86"</highlight><highlight class="normal"/></codeline>
<codeline lineno="461"><highlight class="normal"/></codeline>
<codeline lineno="462"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>architecture<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="463"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>""</highlight><highlight class="normal"/></codeline>
<codeline lineno="464"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="465"><highlight class="normal"/></codeline>
<codeline lineno="466"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>defined(__IAR_SYSTEMS_ICC__)<sp/>||<sp/>defined(__IAR_SYSTEMS_ICC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="467"><highlight class="normal"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__ICCARM__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="468"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"ARM"</highlight><highlight class="normal"/></codeline>
<codeline lineno="469"><highlight class="normal"/></codeline>
<codeline lineno="470"><highlight class="normal"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(__ICCAVR__)</highlight><highlight class="normal"/></codeline>
<codeline lineno="471"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>"AVR"</highlight><highlight class="normal"/></codeline>
<codeline lineno="472"><highlight class="normal"/></codeline>
<codeline lineno="473"><highlight class="normal"/><highlight class="preprocessor">#<sp/>else<sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>architecture<sp/>*/</highlight><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="474"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID<sp/>""</highlight><highlight class="normal"/></codeline>
<codeline lineno="475"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="476"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="477"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>ARCHITECTURE_ID</highlight><highlight class="normal"/></codeline>
<codeline lineno="478"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="479"><highlight class="normal"/></codeline>
<codeline lineno="480"><highlight class="normal"/><highlight class="comment">/*<sp/>Convert<sp/>integer<sp/>to<sp/>decimal<sp/>digit<sp/>literals.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="481"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>DEC(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="482"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>10000000)%10)),<sp/>\</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>1000000)%10)),<sp/><sp/>\</highlight></codeline>
<codeline lineno="484"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>100000)%10)),<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>10000)%10)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>1000)%10)),<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>100)%10)),<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>(((n)<sp/>/<sp/>10)%10)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/><sp/>((n)<sp/>%<sp/>10))</highlight><highlight class="normal"/></codeline>
<codeline lineno="490"><highlight class="normal"/></codeline>
<codeline lineno="491"><highlight class="normal"/><highlight class="comment">/*<sp/>Convert<sp/>integer<sp/>to<sp/>hex<sp/>digit<sp/>literals.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="492"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>HEX(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;28<sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;24<sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="495"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;20<sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="496"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;16<sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="497"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;12<sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="498"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;8<sp/><sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)&gt;&gt;4<sp/><sp/>&amp;<sp/>0xF)),<sp/>\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/>('0'<sp/>+<sp/>((n)<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>0xF))</highlight><highlight class="normal"/></codeline>
<codeline lineno="501"><highlight class="normal"/></codeline>
<codeline lineno="502"><highlight class="normal"/><highlight class="comment">/*<sp/>Construct<sp/>a<sp/>string<sp/>literal<sp/>encoding<sp/>the<sp/>version<sp/>number<sp/>components.<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="503"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>COMPILER_VERSION_MAJOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="504"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>info_version[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'I'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'N'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'F'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'O'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">':'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'c'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'o'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'m'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'p'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'l'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'_'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'v'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'s'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'o'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'n'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'['</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>COMPILER_VERSION_MAJOR,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"/><highlight class="preprocessor">#<sp/>ifdef<sp/>COMPILER_VERSION_MINOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>COMPILER_VERSION_MINOR,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>COMPILER_VERSION_PATCH</highlight><highlight class="normal"/></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>COMPILER_VERSION_PATCH,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>COMPILER_VERSION_TWEAK</highlight><highlight class="normal"/></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>COMPILER_VERSION_TWEAK,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="515"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="516"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">']'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'\0'</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="518"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="519"><highlight class="normal"/></codeline>
<codeline lineno="520"><highlight class="normal"/><highlight class="comment">/*<sp/>Construct<sp/>a<sp/>string<sp/>literal<sp/>encoding<sp/>the<sp/>internal<sp/>version<sp/>number.<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="521"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>COMPILER_VERSION_INTERNAL</highlight><highlight class="normal"/></codeline>
<codeline lineno="522"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>info_version_internal[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'I'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'N'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'F'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'O'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">':'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'c'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'o'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'m'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'p'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'l'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'_'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'v'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'s'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'o'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'n'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'_'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'n'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'t'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'n'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'a'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'l'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'['</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>COMPILER_VERSION_INTERNAL,</highlight><highlight class="charliteral">']'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'\0'</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="527"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="528"><highlight class="normal"/></codeline>
<codeline lineno="529"><highlight class="normal"/><highlight class="comment">/*<sp/>Construct<sp/>a<sp/>string<sp/>literal<sp/>encoding<sp/>the<sp/>version<sp/>number<sp/>components.<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="530"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>SIMULATE_VERSION_MAJOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="531"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>info_simulate_version[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'I'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'N'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'F'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'O'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">':'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'s'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'m'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'u'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'l'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'a'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'t'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'_'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'v'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'e'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'r'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'s'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'i'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'o'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'n'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'['</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>SIMULATE_VERSION_MAJOR,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"/><highlight class="preprocessor">#<sp/>ifdef<sp/>SIMULATE_VERSION_MINOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>SIMULATE_VERSION_MINOR,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>SIMULATE_VERSION_PATCH</highlight><highlight class="normal"/></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>SIMULATE_VERSION_PATCH,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>SIMULATE_VERSION_TWEAK</highlight><highlight class="normal"/></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>SIMULATE_VERSION_TWEAK,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="542"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="543"><highlight class="normal"/><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">']'</highlight><highlight class="normal">,</highlight><highlight class="charliteral">'\0'</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="545"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="546"><highlight class="normal"/></codeline>
<codeline lineno="547"><highlight class="normal"/><highlight class="comment">/*<sp/>Construct<sp/>the<sp/>string<sp/>literal<sp/>in<sp/>pieces<sp/>to<sp/>prevent<sp/>the<sp/>source<sp/>from</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/>getting<sp/>matched.<sp/><sp/>Store<sp/>it<sp/>in<sp/>a<sp/>pointer<sp/>rather<sp/>than<sp/>an<sp/>array</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/>because<sp/>some<sp/>compilers<sp/>will<sp/>just<sp/>produce<sp/>instructions<sp/>to<sp/>fill<sp/>the</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/>array<sp/>rather<sp/>than<sp/>assigning<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>static<sp/>array.<sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="551"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>info_platform<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"platform["</highlight><highlight class="normal"><sp/>PLATFORM_ID<sp/></highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"/><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>info_arch<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"arch["</highlight><highlight class="normal"><sp/>ARCHITECTURE_ID<sp/></highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"/></codeline>
<codeline lineno="554"><highlight class="normal"/></codeline>
<codeline lineno="555"><highlight class="normal"/></codeline>
<codeline lineno="556"><highlight class="normal"/></codeline>
<codeline lineno="557"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>defined(_MSVC_LANG)</highlight><highlight class="normal"/></codeline>
<codeline lineno="558"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>CXX_STD<sp/>_MSVC_LANG</highlight><highlight class="normal"/></codeline>
<codeline lineno="559"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="560"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>CXX_STD<sp/>__cplusplus</highlight><highlight class="normal"/></codeline>
<codeline lineno="561"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="562"><highlight class="normal"/></codeline>
<codeline lineno="563"><highlight class="normal"/><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>info_language_dialect_default<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"dialect_default["</highlight><highlight class="normal"/></codeline>
<codeline lineno="564"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>CXX_STD<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"/></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">"20"</highlight><highlight class="normal"/></codeline>
<codeline lineno="566"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>CXX_STD<sp/>&gt;=<sp/>201703L</highlight><highlight class="normal"/></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">"17"</highlight><highlight class="normal"/></codeline>
<codeline lineno="568"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>CXX_STD<sp/>&gt;=<sp/>201402L</highlight><highlight class="normal"/></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">"14"</highlight><highlight class="normal"/></codeline>
<codeline lineno="570"><highlight class="normal"/><highlight class="preprocessor">#elif<sp/>CXX_STD<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">"11"</highlight><highlight class="normal"/></codeline>
<codeline lineno="572"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">"98"</highlight><highlight class="normal"/></codeline>
<codeline lineno="574"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="575"><highlight class="normal"/><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"/></codeline>
<codeline lineno="577"><highlight class="normal"/><highlight class="comment">/*--------------------------------------------------------------------------*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="578"><highlight class="normal"/></codeline>
<codeline lineno="579"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>require<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_compiler[argc];</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_platform[argc];</highlight></codeline>
<codeline lineno="584"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>COMPILER_VERSION_MAJOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_version[argc];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="587"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>COMPILER_VERSION_INTERNAL</highlight><highlight class="normal"/></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_version_internal[argc];</highlight></codeline>
<codeline lineno="589"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="590"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>SIMULATE_ID</highlight><highlight class="normal"/></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_simulate[argc];</highlight></codeline>
<codeline lineno="592"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="593"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>SIMULATE_VERSION_MAJOR</highlight><highlight class="normal"/></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_simulate_version[argc];</highlight></codeline>
<codeline lineno="595"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="596"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__CRAYXE)<sp/>||<sp/>defined(__CRAYXC)</highlight><highlight class="normal"/></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_cray[argc];</highlight></codeline>
<codeline lineno="598"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_language_dialect_default[argc];</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>(void)argv;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>require;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="casacore__version_8cxx" kind="file" language="C++">
    <compoundname>casacore_version.cxx</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="casacore__version_8cxx_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/casacore_version/casacore_version.cxx" line="5" column="1" bodyfile="build/CMakeFiles/casacore_version/casacore_version.cxx" bodystart="5" bodyend="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/version.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>casacore::getVersion();</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"/></codeline>
    </programlisting>
    <location file="build/CMakeFiles/casacore_version/casacore_version.cxx"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="feature__tests_8c" kind="file" language="C++">
    <compoundname>feature_tests.c</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="feature__tests_8c_1a1582568e32f689337602a16bf8a5bff0" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char features[]</definition>
        <argsstring>[]</argsstring>
        <name>features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/feature_tests.c" line="2" column="1" bodyfile="build/CMakeFiles/feature_tests.c" bodystart="2" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="feature__tests_8c_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/feature_tests.c" line="34" column="1" bodyfile="build/CMakeFiles/feature_tests.c" bodystart="34" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>features[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">"\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="stringliteral">"C_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>304</highlight><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="stringliteral">"c_function_prototypes\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="stringliteral">"C_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>304<sp/>&amp;&amp;<sp/>defined(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="stringliteral">"c_restrict\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="stringliteral">"C_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>406<sp/>&amp;&amp;<sp/>defined(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>201000L</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="stringliteral">"c_static_assert\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="stringliteral">"C_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>304<sp/>&amp;&amp;<sp/>defined(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="stringliteral">"c_variadic_macros\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{<sp/>(void)argv;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>features[argc];<sp/>}</highlight></codeline>
    </programlisting>
    <location file="build/CMakeFiles/feature_tests.c"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="feature__tests_8cxx" kind="file" language="C++">
    <compoundname>feature_tests.cxx</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="feature__tests_8cxx_1a1582568e32f689337602a16bf8a5bff0" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char features[]</definition>
        <argsstring>[]</argsstring>
        <name>features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/feature_tests.cxx" line="2" column="1" bodyfile="build/CMakeFiles/feature_tests.cxx" bodystart="2" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="feature__tests_8cxx_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/feature_tests.cxx" line="405" column="1" bodyfile="build/CMakeFiles/feature_tests.cxx" bodystart="405" bodyend="405"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>features[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">"\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>500<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201402L</highlight><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="stringliteral">"cxx_aggregate_default_initializers\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>407<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="stringliteral">"cxx_alias_templates\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>408<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="stringliteral">"cxx_alignas\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>408<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="stringliteral">"cxx_alignof\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>408<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="stringliteral">"cxx_attributes\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>409<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/><highlight class="stringliteral">"cxx_attribute_deprecated\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="stringliteral">"cxx_auto_type\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>409<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="stringliteral">"cxx_binary_literals\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>406<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/><highlight class="stringliteral">"cxx_constexpr\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>409<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/><highlight class="stringliteral">"cxx_contextual_conversions\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/><highlight class="stringliteral">"cxx_decltype\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>409<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/><highlight class="stringliteral">"cxx_decltype_auto\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>((__GNUC__<sp/>*<sp/>10000<sp/>+<sp/>__GNUC_MINOR__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_PATCHLEVEL__)<sp/>&gt;=<sp/>40801)<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"/><highlight class="stringliteral">"cxx_decltype_incomplete_return_types\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="98"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="100"><highlight class="normal"/><highlight class="stringliteral">"cxx_default_function_template_args\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"/><highlight class="stringliteral">"cxx_defaulted_functions\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="108"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>406<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="111"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="114"><highlight class="normal"/><highlight class="stringliteral">"cxx_defaulted_move_initializers\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>407<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"/><highlight class="stringliteral">"cxx_delegating_constructors\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="124"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="128"><highlight class="normal"/><highlight class="stringliteral">"cxx_deleted_functions\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="130"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>409<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="134"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"/><highlight class="stringliteral">"cxx_digit_separators\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>406<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="139"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"/><highlight class="stringliteral">"cxx_enum_forward_declarations\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>405<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="146"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="148"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"/><highlight class="stringliteral">"cxx_explicit_conversions\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="150"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>407<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="152"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="156"><highlight class="normal"/><highlight class="stringliteral">"cxx_extended_friend_declarations\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="158"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="159"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="160"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="161"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="162"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"/><highlight class="stringliteral">"cxx_extern_templates\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="164"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>407<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="166"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="168"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="169"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"/><highlight class="stringliteral">"cxx_final\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="171"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="173"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="177"><highlight class="normal"/><highlight class="stringliteral">"cxx_func_identifier\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="178"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="179"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="180"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="181"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="182"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="183"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"/><highlight class="stringliteral">"cxx_generalized_initializers\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="185"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="186"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>409<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="188"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="189"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="190"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="191"><highlight class="normal"/><highlight class="stringliteral">"cxx_generic_lambdas\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="192"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="193"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>408<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="194"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="195"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="197"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="198"><highlight class="normal"/><highlight class="stringliteral">"cxx_inheriting_constructors\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="199"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="200"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="201"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="202"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="203"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="204"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="205"><highlight class="normal"/><highlight class="stringliteral">"cxx_inline_namespaces\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="206"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>405<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="208"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="211"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="212"><highlight class="normal"/><highlight class="stringliteral">"cxx_lambdas\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="214"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>409<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="215"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="217"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="218"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="219"><highlight class="normal"/><highlight class="stringliteral">"cxx_lambda_init_captures\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="220"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="221"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>405<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="223"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="224"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="225"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="226"><highlight class="normal"/><highlight class="stringliteral">"cxx_local_type_template_args\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="227"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="229"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="231"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="232"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="233"><highlight class="normal"/><highlight class="stringliteral">"cxx_long_long_type\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="234"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>406<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="236"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="237"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="238"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="239"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="240"><highlight class="normal"/><highlight class="stringliteral">"cxx_noexcept\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="241"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="242"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>407<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="243"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="244"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="245"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="246"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="247"><highlight class="normal"/><highlight class="stringliteral">"cxx_nonstatic_member_init\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="248"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="249"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>406<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="250"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="251"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="253"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"/><highlight class="stringliteral">"cxx_nullptr\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="255"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>407<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="257"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="258"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="260"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="261"><highlight class="normal"/><highlight class="stringliteral">"cxx_override\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="262"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="263"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>406<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="264"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="265"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="266"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="267"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="268"><highlight class="normal"/><highlight class="stringliteral">"cxx_range_for\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="269"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="270"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>405<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="271"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="272"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="273"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="275"><highlight class="normal"/><highlight class="stringliteral">"cxx_raw_string_literals\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="276"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="277"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>((__GNUC__<sp/>*<sp/>10000<sp/>+<sp/>__GNUC_MINOR__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_PATCHLEVEL__)<sp/>&gt;=<sp/>40801)<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="278"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="279"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="280"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="281"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="282"><highlight class="normal"/><highlight class="stringliteral">"cxx_reference_qualified_functions\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="283"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="284"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>500<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201402L</highlight><highlight class="normal"/></codeline>
<codeline lineno="285"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="286"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="287"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="288"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="289"><highlight class="normal"/><highlight class="stringliteral">"cxx_relaxed_constexpr\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="290"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="291"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>409<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="292"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="293"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="294"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="295"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="296"><highlight class="normal"/><highlight class="stringliteral">"cxx_return_type_deduction\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="297"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="298"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="299"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="300"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="301"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="302"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="303"><highlight class="normal"/><highlight class="stringliteral">"cxx_right_angle_brackets\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="304"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="305"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="306"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="307"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="308"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="309"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="310"><highlight class="normal"/><highlight class="stringliteral">"cxx_rvalue_references\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="311"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="312"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="313"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="314"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="315"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="316"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="317"><highlight class="normal"/><highlight class="stringliteral">"cxx_sizeof_member\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="318"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="319"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="320"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="321"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="322"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="323"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="324"><highlight class="normal"/><highlight class="stringliteral">"cxx_static_assert\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="325"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="326"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="327"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="328"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="329"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="330"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="331"><highlight class="normal"/><highlight class="stringliteral">"cxx_strong_enums\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="332"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="333"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>__cplusplus</highlight><highlight class="normal"/></codeline>
<codeline lineno="334"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="335"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="336"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="337"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="338"><highlight class="normal"/><highlight class="stringliteral">"cxx_template_template_parameters\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="339"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="340"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>408<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="341"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="342"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="343"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="344"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="345"><highlight class="normal"/><highlight class="stringliteral">"cxx_thread_local\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="346"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="347"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="348"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="349"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="350"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="351"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="352"><highlight class="normal"/><highlight class="stringliteral">"cxx_trailing_return_types\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="353"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="354"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="355"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="356"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="357"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="358"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="359"><highlight class="normal"/><highlight class="stringliteral">"cxx_unicode_literals\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="360"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="361"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="362"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="363"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="364"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="365"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="366"><highlight class="normal"/><highlight class="stringliteral">"cxx_uniform_initialization\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="367"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="368"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>406<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="369"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="370"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="371"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="372"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="373"><highlight class="normal"/><highlight class="stringliteral">"cxx_unrestricted_unions\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="374"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="375"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>407<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"/></codeline>
<codeline lineno="376"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="377"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="378"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="379"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="380"><highlight class="normal"/><highlight class="stringliteral">"cxx_user_literals\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="381"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="382"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>500<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201402L</highlight><highlight class="normal"/></codeline>
<codeline lineno="383"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="384"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="385"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="386"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="387"><highlight class="normal"/><highlight class="stringliteral">"cxx_variable_templates\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="388"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="389"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="390"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="391"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="392"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="393"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="394"><highlight class="normal"/><highlight class="stringliteral">"cxx_variadic_macros\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="395"><highlight class="normal"/><highlight class="stringliteral">"CXX_FEATURE:"</highlight><highlight class="normal"/></codeline>
<codeline lineno="396"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)<sp/>&gt;=<sp/>404<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>&amp;&amp;<sp/>__GXX_EXPERIMENTAL_CXX0X__))</highlight><highlight class="normal"/></codeline>
<codeline lineno="397"><highlight class="normal"/><highlight class="stringliteral">"1"</highlight><highlight class="normal"/></codeline>
<codeline lineno="398"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="399"><highlight class="normal"/><highlight class="stringliteral">"0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="400"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="401"><highlight class="normal"/><highlight class="stringliteral">"cxx_variadic_templates\n"</highlight><highlight class="normal"/></codeline>
<codeline lineno="402"><highlight class="normal"/></codeline>
<codeline lineno="403"><highlight class="normal">};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"/></codeline>
<codeline lineno="405"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{<sp/>(void)argv;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>features[argc];<sp/>}</highlight></codeline>
    </programlisting>
    <location file="build/CMakeFiles/feature_tests.cxx"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="test__mpi_8cpp" kind="file" language="C++">
    <compoundname>test_mpi.cpp</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__mpi_8cpp_1afeb4c0920b6a9b43ffa490c86e923445" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char mpiver_str[]</definition>
        <argsstring>[]</argsstring>
        <name>mpiver_str</name>
        <initializer>= { 'I', 'N',
                            'F', 'O',
                            ':', 'M',
                            'P', 'I',
                            '-', 'V',
                            'E', 'R',
                            '[', ('0' + MPI_VERSION),
                            '.', ('0' + MPI_SUBVERSION),
                            ']', '\0' }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/FindMPI/test_mpi.cpp" line="10" column="1" bodyfile="build/CMakeFiles/FindMPI/test_mpi.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__mpi_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/FindMPI/test_mpi.cpp" line="21" column="1" bodyfile="build/CMakeFiles/FindMPI/test_mpi.cpp" bodystart="21" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;mpi.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(MPI_VERSION)<sp/>&amp;&amp;<sp/>defined(MPI_SUBVERSION)</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mpiver_str[]<sp/>=<sp/>{<sp/></highlight><highlight class="charliteral">'I'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'N'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">'F'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'O'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">':'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'M'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">'P'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'I'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">'-'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'V'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">'E'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'R'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">'['</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="charliteral">'0'</highlight><highlight class="normal"><sp/>+<sp/>MPI_VERSION),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">'.'</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="charliteral">'0'</highlight><highlight class="normal"><sp/>+<sp/>MPI_SUBVERSION),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">']'</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">'\0'</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(MPI_VERSION)<sp/>&amp;&amp;<sp/>defined(MPI_SUBVERSION)</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>__cplusplus</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>std::puts(mpiver_str);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>puts(mpiver_str);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>TEST_MPI_MPICXX</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>MPI::MPI_Init(&amp;argc,<sp/>&amp;argv);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>MPI::MPI_Finalize();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="preprocessor">#else</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>MPI_Init(&amp;argc,<sp/>&amp;argv);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>MPI_Finalize();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="build/CMakeFiles/FindMPI/test_mpi.cpp"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="cmake__hdf5__test_8c" kind="file" language="C++">
    <compoundname>cmake_hdf5_test.c</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cmake__hdf5__test_8c_1aaf140765879e334e402b6f7c4faabf07" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* info_ver</definition>
        <argsstring/>
        <name>info_ver</name>
        <initializer>= "INFO" ":" H5_VERSION</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/hdf5/cmake_hdf5_test.c" line="3" column="1" bodyfile="build/CMakeFiles/hdf5/cmake_hdf5_test.c" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cmake__hdf5__test_8c_1aec24390925def98693cfd2964e7a0801" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* info_parallel</definition>
        <argsstring/>
        <name>info_parallel</name>
        <initializer>= "INFO" ":" "PARALLEL"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/hdf5/cmake_hdf5_test.c" line="5" column="1" bodyfile="build/CMakeFiles/hdf5/cmake_hdf5_test.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cmake__hdf5__test_8c_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/CMakeFiles/hdf5/cmake_hdf5_test.c" line="7" column="1" bodyfile="build/CMakeFiles/hdf5/cmake_hdf5_test.c" bodystart="7" bodyend="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;hdf5.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;hdf5_hl.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>info_ver<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/>H5_VERSION;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>H5_HAVE_PARALLEL</highlight><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>info_parallel<sp/>=<sp/></highlight><highlight class="stringliteral">"INFO"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">":"</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"PARALLEL"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>require<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_ver[argc];</highlight></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>H5_HAVE_PARALLEL</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_parallel[argc];</highlight></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>hid_t<sp/>fid;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>fid<sp/>=<sp/>H5Fcreate(</highlight><highlight class="stringliteral">"foo.h5"</highlight><highlight class="normal">,H5F_ACC_TRUNC,H5P_DEFAULT,H5P_DEFAULT);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="build/CMakeFiles/hdf5/cmake_hdf5_test.c"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="DartConfiguration_8tcl" kind="file" language="Tcl">
    <compoundname>DartConfiguration.tcl</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>configured<sp/>by<sp/>CMake<sp/>automatically<sp/>as<sp/>DartConfiguration.tcl</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>If<sp/>you<sp/>choose<sp/>not<sp/>to<sp/>use<sp/>CMake,<sp/>this<sp/>file<sp/>may<sp/>be<sp/>hand<sp/>configured,<sp/>by</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>filling<sp/>in<sp/>the<sp/>required<sp/>variables.</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Configuration<sp/>directories<sp/>and<sp/>files</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">SourceDirectory:<sp/>/builds/GLvxpjXw/0/ska-telescope/jacal</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">BuildDirectory:<sp/>/builds/GLvxpjXw/0/ska-telescope/jacal/build</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Where<sp/>to<sp/>place<sp/>the<sp/>cost<sp/>data<sp/>store</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">CostDataFile:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Site<sp/>is<sp/>something<sp/>like<sp/>machine.domain,<sp/>i.e.<sp/>pragmatic.crd</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">Site:<sp/>runner-GLvxpjXw-project-15942102-concurrent-0</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Build<sp/>name<sp/>is<sp/>osname-revision-compiler,<sp/>i.e.<sp/>Linux-2.4.2-2smp-c++</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">BuildName:<sp/>Linux-c++</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Subprojects</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">LabelsForSubprojects:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Submission<sp/>information</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">IsCDash:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">CDashVersion:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">QueryCDashVersion:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">DropSite:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">DropLocation:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">DropSiteUser:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">DropSitePassword:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">DropSiteMode:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">DropMethod:<sp/>http</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">TriggerSite:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">ScpCommand:<sp/>/usr/bin/scp</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Dashboard<sp/>start<sp/>time</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">NightlyStartTime:<sp/>00:00:00<sp/>EDT</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Commands<sp/>for<sp/>the<sp/>build/test/submit<sp/>cycle</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">ConfigureCommand:<sp/>"/usr/bin/cmake"<sp/>"/builds/GLvxpjXw/0/ska-telescope/jacal"</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">MakeCommand:<sp/>/usr/bin/cmake<sp/>--build<sp/>.<sp/>--config<sp/>"${CTEST_CONFIGURATION_TYPE}"</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">DefaultCTestConfigurationType:<sp/>Release</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>version<sp/>control</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">UpdateVersionOnly:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>CVS<sp/>options</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>Default<sp/>is<sp/>"-d<sp/>-P<sp/>-A"</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">CVSCommand:<sp/>CVSCOMMAND-NOTFOUND</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">CVSUpdateOptions:<sp/>-d<sp/>-A<sp/>-P</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Subversion<sp/>options</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">SVNCommand:<sp/>SVNCOMMAND-NOTFOUND</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">SVNOptions:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">SVNUpdateOptions:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Git<sp/>options</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">GITCommand:<sp/>/usr/bin/git</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">GITInitSubmodules:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">GITUpdateOptions:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">GITUpdateCustom:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Perforce<sp/>options</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">P4Command:<sp/>P4COMMAND-NOTFOUND</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">P4Client:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">P4Options:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">P4UpdateOptions:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">P4UpdateCustom:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Generic<sp/>update<sp/>command</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">UpdateCommand:<sp/>/usr/bin/git</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">UpdateOptions:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">UpdateType:<sp/>git</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Compiler<sp/>info</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">Compiler:<sp/>/usr/bin/c++</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">CompilerVersion:<sp/>8.3.0</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Dynamic<sp/>analysis<sp/>(MemCheck)</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">PurifyCommand:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">ValgrindCommand:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">ValgrindCommandOptions:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">MemoryCheckType:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">MemoryCheckSanitizerOptions:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">MemoryCheckCommand:<sp/>MEMORYCHECK_COMMAND-NOTFOUND</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">MemoryCheckCommandOptions:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">MemoryCheckSuppressionFile:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Coverage</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">CoverageCommand:<sp/>/usr/bin/gcov</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">CoverageExtraFlags:<sp/>-l</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Cluster<sp/>commands</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">SlurmBatchCommand:<sp/>SLURM_SBATCH_COMMAND-NOTFOUND</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">SlurmRunCommand:<sp/>SLURM_SRUN_COMMAND-NOTFOUND</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>Testing<sp/>options</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>TimeOut<sp/>is<sp/>the<sp/>amount<sp/>of<sp/>time<sp/>in<sp/>seconds<sp/>to<sp/>wait<sp/>for<sp/>processes</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>to<sp/>complete<sp/>during<sp/>testing.<sp/><sp/>After<sp/>TimeOut<sp/>seconds,<sp/>the</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>process<sp/>will<sp/>be<sp/>summarily<sp/>terminated.</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>Currently<sp/>set<sp/>to<sp/>25<sp/>minutes</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">TimeOut:<sp/>1500</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>During<sp/>parallel<sp/>testing<sp/>CTest<sp/>will<sp/>not<sp/>start<sp/>a<sp/>new<sp/>test<sp/>if<sp/>doing</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>so<sp/>would<sp/>cause<sp/>the<sp/>system<sp/>load<sp/>to<sp/>exceed<sp/>this<sp/>value.</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">TestLoad:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal">UseLaunchers:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">CurlOptions:</highlight><highlight class="comment"><sp/></highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>warning,<sp/>if<sp/>you<sp/>add<sp/>new<sp/>options<sp/>here<sp/>that<sp/>have<sp/>to<sp/>do<sp/>with<sp/>submit,</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>you<sp/>have<sp/>to<sp/>update<sp/>cmCTestSubmitCommand.cxx</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline><highlight class="normal"/><highlight class="comment">#<sp/>For<sp/>CTest<sp/>submissions<sp/>that<sp/>timeout,<sp/>these<sp/>options</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="comment">#<sp/>specify<sp/>behavior<sp/>for<sp/>retrying<sp/>the<sp/>submission</highlight></codeline>
<codeline><highlight class="comment"/><highlight class="normal">CTestSubmitRetryDelay:<sp/>5</highlight><highlight class="comment"/></codeline>
<codeline><highlight class="comment"/><highlight class="normal">CTestSubmitRetryCount:<sp/>3</highlight></codeline>
    </programlisting>
    <location file="build/DartConfiguration.tcl"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="conf_8py" kind="file" language="Python">
    <compoundname>conf.py</compoundname>
    <innernamespace refid="namespaceconf">conf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight class="comment">#</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">#<sp/>Configuration<sp/>file<sp/>for<sp/>the<sp/>Sphinx<sp/>documentation<sp/>builder.</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="comment">#<sp/>Run<sp/>doxygen<sp/>if<sp/>we're<sp/>in<sp/>RTD<sp/>to<sp/>generate<sp/>the<sp/>XML/HTML<sp/>documentation<sp/>from<sp/>C++</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal">read_the_docs_build<sp/>=<sp/>os.environ.get(</highlight><highlight class="stringliteral">'READTHEDOCS'</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="stringliteral">'True'</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>read_the_docs_build:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>subprocess.call(</highlight><highlight class="stringliteral">'doxygen'</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="comment">#<sp/>General<sp/>project<sp/>information</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal">project<sp/>=<sp/></highlight><highlight class="stringliteral">u'jacal'</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal">copyright<sp/>=<sp/></highlight><highlight class="stringliteral">u'2020,<sp/>YANDA<sp/>Team'</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal">author<sp/>=<sp/></highlight><highlight class="stringliteral">u'YANDA<sp/>Team'</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal">with<sp/>open(</highlight><highlight class="stringliteral">'../VERSION'</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>version<sp/>=<sp/>f.read()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="comment">#<sp/>General<sp/>configuration</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal">extensions<sp/>=<sp/>[</highlight><highlight class="stringliteral">'breathe'</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="23"><highlight class="normal">breathe_projects<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">'jacal'</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">'doxygen-output/xml'</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">breathe_default_project<sp/>=<sp/></highlight><highlight class="stringliteral">'jacal'</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal">master_doc<sp/>=<sp/></highlight><highlight class="stringliteral">'index'</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal">source_suffix<sp/>=<sp/></highlight><highlight class="stringliteral">'.rst'</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal">pygments_style<sp/>=<sp/></highlight><highlight class="stringliteral">'sphinx'</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal">language<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal">exclude_patterns<sp/>=<sp/>[</highlight><highlight class="stringliteral">u'_build'</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">'Thumbs.db'</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">'.DS_Store'</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="32"><highlight class="normal">rst_prolog<sp/>=<sp/></highlight><highlight class="stringliteral">'''</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">..<sp/>|dlg|<sp/>replace::<sp/>DALiuGE</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">..<sp/>|ys|<sp/>replace::<sp/>Yandasoft</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">'''</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="comment">#<sp/>Format-specific<sp/>options</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal">html_theme<sp/>=<sp/></highlight><highlight class="stringliteral">'sphinx_rtd_theme'</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal">html_static_path<sp/>=<sp/>[</highlight><highlight class="stringliteral">'_static'</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal">latex_documents<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>(master_doc,<sp/></highlight><highlight class="stringliteral">'jacal.tex'</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">u'jacal<sp/>Documentation'</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>author,<sp/></highlight><highlight class="stringliteral">'manual'</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="45"><highlight class="normal">]</highlight></codeline>
    </programlisting>
    <location file="docs/conf.py"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="DaliugeApplication_8h" kind="file" language="C++">
    <compoundname>DaliugeApplication.h</compoundname>
    <innerclass refid="classaskap_1_1DaliugeApplication" prot="public">askap::DaliugeApplication</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
<para>Base class for Daliuge applications. </para>    </briefdescription>
    <detaileddescription>
<para>All jacal functions inherit from this base class. It exposes the methods that the Daliuge pipeline is expecting</para><para><simplesect kind="copyright"><para>(c) 2017 CSIRO Australia Telescope National Facility (ATNF) Commonwealth Scientific and Industrial Research Organisation (CSIRO) PO Box 76, Epping NSW 1710, Australia <ulink url="mailto:atnf-enquiries@csiro.au">atnf-enquiries@csiro.au</ulink></para></simplesect>
This file is part of the ASKAP software distribution.</para><para>The ASKAP software distribution is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</para><para>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para><para>You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA</para><para><simplesect kind="author"><para>Stephen Ord <ulink url="mailto:stephen.ord@csiro.au">stephen.ord@csiro.au</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_DALIUGE_APPLICATION_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_DALIUGE_APPLICATION_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="comment">//<sp/>System<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="comment">//ASKAPSoft<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/regex.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="comment">//<sp/>daliugue<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"dlg_app.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44" refid="namespaceaskap" refkind="compound"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="51" refid="classaskap_1_1DaliugeApplication" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>think<sp/>I<sp/>need<sp/>this<sp/>because<sp/>I<sp/>need<sp/>to<sp/>know<sp/>which<sp/>app<sp/>to<sp/>instantiate</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>app<sp/>has<sp/>no<sp/>persistence<sp/>between<sp/>calls<sp/>....<sp/>maybe<sp/>it<sp/>should</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="61" refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;DaliugeApplication&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="64" refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7cb25addc65c3ad68544a3579780175f" kindref="member">DaliugeApplication</ref>(dlg_app_info<sp/>*app)<sp/>:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_dlg_app(app)<sp/>{}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="68" refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a6cb79ab32eed29d50766a7e51118d611" kindref="member">~DaliugeApplication</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ShPtr<sp/><ref refid="classaskap_1_1DaliugeApplication_1a32da094f4a6e4ac920e397b4ea8ce2e7" kindref="member">createDaliugeApplication</ref>(dlg_app_info<sp/>*app);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>be<sp/>implemented<sp/>by<sp/>sub-classes</highlight></codeline>
<codeline lineno="78"><highlight class="comment"/><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1acb7c465b5a2a1ae55beabeac87d2a899" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dlg_app_running()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_dlg_app-&gt;running();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dlg_app_done(app_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_dlg_app-&gt;done(status);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_output_info<sp/>&amp;output(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_dlg_app-&gt;outputs[i];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_output_info<sp/>&amp;output(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;tag)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::regex<sp/>exp1(tag);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::cmatch<sp/>what;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>raw_dlg_app-&gt;n_outputs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::regex_search(raw_dlg_app-&gt;outputs[i].name,<sp/>what,<sp/>exp1))<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_dlg_app-&gt;outputs[i];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"No<sp/>such<sp/>output:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tag;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(os.str());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_output(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;tag)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::regex<sp/>exp1(tag);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::cmatch<sp/>what;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>raw_dlg_app-&gt;n_outputs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::regex_search(raw_dlg_app-&gt;outputs[i].name,<sp/>what,<sp/>exp1))<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"/></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>get_inputs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;tag)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::regex<sp/>exp1(tag);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::cmatch<sp/>what;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>the_inputs;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>raw_dlg_app-&gt;n_inputs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::regex_search(raw_dlg_app-&gt;inputs[i].name,<sp/>what,<sp/>exp1))<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the_inputs.push_back(i);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>the_inputs;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_input_info<sp/>&amp;input(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_dlg_app-&gt;inputs[i];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_input_info<sp/>&amp;input(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;tag)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::regex<sp/>exp1(tag);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::cmatch<sp/>what;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>raw_dlg_app-&gt;n_inputs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::regex_search(raw_dlg_app-&gt;inputs[i].name,<sp/>what,<sp/>exp1))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_dlg_app-&gt;inputs[i];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"/></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"No<sp/>such<sp/>input:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tag;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(os.str());</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_input(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;tag)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::regex<sp/>exp1(tag);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::cmatch<sp/>what;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>raw_dlg_app-&gt;n_inputs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::regex_search(raw_dlg_app-&gt;inputs[i].name,<sp/>what,<sp/>exp1))<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"/></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_outputs()<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_dlg_app-&gt;n_outputs;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"/></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_inputs()<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_dlg_app-&gt;n_inputs;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_info<sp/>*raw_dlg_app;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"/></codeline>
<codeline lineno="191"><highlight class="normal"/></codeline>
<codeline lineno="192"><highlight class="normal"/></codeline>
<codeline lineno="193"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="194"><highlight class="normal"/></codeline>
<codeline lineno="195"><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"/></codeline>
<codeline lineno="197"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="jacal/daliuge/DaliugeApplication.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="CalcNE_8cc" kind="file" language="C++">
    <compoundname>CalcNE.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Derived from DaliugeApplication @ details Implements a test method that uses the contents of the the parset to load in a measurement set and print a summary of its contents </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>for<sp/>logging</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"CalcNE"</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1ac8cc0c23f67c2d5b0f77a74d0a7ecfe8" kindref="member">getAskapPackageVersion_CalcNE</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"CalcNE;<sp/>ASKAPsoft==Unknown"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_CalcNE()</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="CalcNE_8h" kindref="compound">factory/CalcNE.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="comment">//<sp/>Data<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableConstDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IConstDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataSelector.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>CalcNE::CalcNE(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>CalcNE::~CalcNE()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>CalcNE::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CalcNE::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CalcNE(raw_app));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1CalcNE_1a7cae1e13b97795fcd99e55c52b037298" kindref="member">CalcNE::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Argument<sp/>parsing<sp/>is<sp/>not<sp/>working<sp/>as<sp/>yet</highlight><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parset_filename<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>params<sp/>I<sp/>might<sp/>need<sp/>go<sp/>here:</highlight><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filename:</highlight><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>longer<sp/>required<sp/>as<sp/>input<sp/>comes<sp/>from<sp/>daliuge<sp/>now</highlight><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(strcmp(param[0],<sp/>"parset_filename")<sp/>==<sp/>0)<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>parset_filename<sp/>=<sp/>strdup(param[1]);</highlight><highlight class="normal"/></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>FIXME:</highlight><highlight class="normal"/></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>This<sp/>should<sp/>be<sp/>here<sp/>but<sp/>I<sp/>could<sp/>not<sp/>get<sp/>a<sp/>boost<sp/>smart<sp/>pointer<sp/>to<sp/>work</highlight><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>to_app_data(app)-&gt;parset.reset(<sp/>new<sp/>LOFAR::ParameterSet(parset_filename));</highlight><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:</highlight><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arbitrarily<sp/>setting<sp/>frequency<sp/>selection<sp/>to<sp/>1</highlight><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;freqInterval<sp/>=<sp/>casacore::IPosition(2,0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;timeInterval<sp/>=<sp/>casacore::IPosition(2,0);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;freqInterval[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;freqInterval[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CalcNE::run()<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>safety;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>input(</highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>parset.makeSubset(</highlight><highlight class="stringliteral">"Cimager."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>fill<sp/>the<sp/>local<sp/>parset<sp/>with<sp/>parameters<sp/>that<sp/>maybe<sp/>missing</highlight><highlight class="normal"/></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>NEUtils::addMissingParameters(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>colName<sp/>=<sp/>this-&gt;itsParset.getString(</highlight><highlight class="stringliteral">"datacolumn"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"DATA"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;std::string&gt;<sp/>ms<sp/>=<sp/>NEUtils::getDatasets(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"/></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>we<sp/>have<sp/>a<sp/>model?</highlight><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>differentiates<sp/>between<sp/>the<sp/>first<sp/>and<sp/>subsequent<sp/>cycles</highlight><highlight class="normal"/></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>has_model<sp/>=<sp/>has_input(</highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"/></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_model)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::receiveParams(itsModel,<sp/>input(</highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"/></codeline>
<codeline lineno="171"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Initializing<sp/>the<sp/>model<sp/>images"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>specified<sp/>images<sp/>from<sp/>the<sp/>definition<sp/>in<sp/>the</highlight><highlight class="normal"/></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>set.<sp/>We<sp/>can<sp/>solve<sp/>for<sp/>any<sp/>number<sp/>of<sp/>images</highlight><highlight class="normal"/></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>once<sp/>(but<sp/>you<sp/>may/will<sp/>run<sp/>out<sp/>of<sp/>memory!)</highlight><highlight class="normal"/></codeline>
<codeline lineno="179"><highlight class="normal"/></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::synthesis::SynthesisParamsHelper::setUpImages(itsModel,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset.makeSubset(</highlight><highlight class="stringliteral">"Images."</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Current<sp/>model<sp/>held<sp/>by<sp/>the<sp/>drop:<sp/>"</highlight><highlight class="normal">&lt;&lt;*itsModel);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"/></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>build<sp/>a<sp/>gridder</highlight><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::synthesis::IVisGridder::ShPtr<sp/>itsGridder;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::ImagingNormalEquations::ShPtr<sp/>itsNe;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsGridder<sp/>=<sp/>askap::synthesis::VisGridderFactory::make(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"/></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NE</highlight><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsNe<sp/>=<sp/>askap::scimath::ImagingNormalEquations::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>askap::scimath::ImagingNormalEquations(*itsModel));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"/></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>cant<sp/>make<sp/>the<sp/>gridder<sp/>smart<sp/>funciton<sp/>a<sp/>member<sp/>funtion<sp/>as<sp/>I<sp/>cannot<sp/>instantiate<sp/>it<sp/>until<sp/>I<sp/>have<sp/>a<sp/>parset.</highlight><highlight class="normal"/></codeline>
<codeline lineno="200"><highlight class="normal"/></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>iter<sp/>=<sp/>ms.begin();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"/></codeline>
<codeline lineno="203"><highlight class="normal"/></codeline>
<codeline lineno="204"><highlight class="normal"/></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iter<sp/>!=<sp/>ms.end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Processing<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*iter);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"/></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::TableDataSource<sp/>ds(*iter,<sp/>accessors::TableDataSource::DEFAULT,<sp/>colName);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>data<sp/>selector<sp/>for<sp/>the<sp/>measurement<sp/>set</highlight><highlight class="normal"/></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataSelectorPtr<sp/>sel<sp/>=<sp/>ds.createSelector();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel-&gt;chooseCrossCorrelations();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel-&gt;chooseChannels(1,<sp/>0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"/></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataConverterPtr<sp/>conv<sp/>=<sp/>ds.createConverter();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setFrequencyFrame(casacore::MFrequency::Ref(casacore::MFrequency::TOPO),<sp/></highlight><highlight class="stringliteral">"Hz"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setDirectionFrame(casacore::MDirection::Ref(casacore::MDirection::J2000));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setEpochFrame();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"/></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataSharedIter<sp/>it<sp/>=<sp/>ds.createIterator(sel,<sp/>conv);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"/></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>define<sp/>an<sp/>empty<sp/>model<sp/>(or<sp/>pick<sp/>one<sp/>up<sp/>from<sp/>the<sp/>parset)</highlight><highlight class="normal"/></codeline>
<codeline lineno="227"><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"/></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Not<sp/>applying<sp/>calibration"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"building<sp/>FFT/measurement<sp/>equation"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;askap::synthesis::ImageFFTEquation&gt;<sp/>fftEquation(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>askap::synthesis::ImageFFTEquation<sp/>(*itsModel,<sp/>it,<sp/>itsGridder));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(fftEquation);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftEquation-&gt;useAlternativePSF(itsParset);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>this<sp/>to<sp/>an<sp/>empty<sp/>pointer<sp/>-<sp/>no<sp/>aggregation<sp/>across<sp/>groups<sp/>for<sp/>this</highlight><highlight class="normal"/></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fftEquation-&gt;setVisUpdateObject(boost::shared_ptr&lt;askap::synthesis::GroupVisAggregator&gt;());</highlight><highlight class="normal"/></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"calculating<sp/>Imaging<sp/>Normal<sp/>Equations"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"/></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Equation</highlight><highlight class="normal"/></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Equation::ShPtr<sp/>itsEquation<sp/>=<sp/>fftEquation;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsEquation-&gt;calcEquations(*itsNe);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"/></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>dump<sp/>out<sp/>some<sp/>images</highlight><highlight class="normal"/></codeline>
<codeline lineno="244"><highlight class="normal"/></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::sendNE(itsNe,<sp/>output(</highlight><highlight class="stringliteral">"Normal"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"/></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"/></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>am<sp/>going<sp/>to<sp/>assume<sp/>a<sp/>single<sp/>Ne<sp/>output<sp/>-<sp/>even<sp/>though<sp/>I<sp/>am<sp/>not</highlight><highlight class="normal"/></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>merging<sp/>in<sp/>the<sp/>above<sp/>loop<sp/>-<sp/>I<sp/>should<sp/>tho.</highlight><highlight class="normal"/></codeline>
<codeline lineno="251"><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>just<sp/>to<sp/>test<sp/>whether<sp/>this<sp/>works<sp/>at<sp/>all.</highlight><highlight class="normal"/></codeline>
<codeline lineno="253"><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"/></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"/></codeline>
<codeline lineno="258"><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcNE::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"/></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcNE::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"/></codeline>
<codeline lineno="267"><highlight class="normal"/></codeline>
<codeline lineno="268"><highlight class="normal"/></codeline>
<codeline lineno="269"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/CalcNE.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="CalcNE_8h" kind="file" language="C++">
    <compoundname>CalcNE.h</compoundname>
    <innerclass refid="classaskap_1_1CalcNE" prot="public">askap::CalcNE</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
<para>Load a CASA Measurement Set in the DaliugeApplication Framework. </para>    </briefdescription>
    <detaileddescription>
<para>We will build on the LoadParset structure - but use the contents of the parset to load a measurement set. This also understands the concept of a model and can form residual images </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_CALCNE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_CALCNE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/MVDirection.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAPSoft<sp/>data<sp/>accessor</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34" refid="classaskap_1_1CalcNE" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1CalcNE" kindref="compound">CalcNE</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;CalcNE&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1CalcNE" kindref="compound">CalcNE</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"CalcNE"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1CalcNE" kindref="compound">CalcNE</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1CalcNE_1a7cae1e13b97795fcd99e55c52b037298" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Params::ShPtr<sp/>itsModel;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>itsParset;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>channel<sp/>of<sp/>data</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::IPosition<sp/>freqInterval;<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::IPosition<sp/>timeInterval;<sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>tangent<sp/>point</highlight><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;casacore::MVDirection&gt;<sp/>itsTangent;<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utility<sp/>to<sp/>build<sp/>an<sp/>Imaging<sp/>Normal<sp/>Equation<sp/>from<sp/>a<sp/>parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>buildNE();</highlight><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>steps<sp/>required<sp/>by<sp/>buildNE</highlight><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/CalcNE.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="DaliugeApplicationFactory_8cc" kind="file" language="C++">
    <compoundname>DaliugeApplicationFactory.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Factory class that registers and manages the different possible instances of of a DaliugeApplication. @ details Maintains a registry of possible applications and selects - based upon a name which one will be instantiated. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"DaliugeApplicationFactory"</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1a7a41f9bfeed39e4794d6ba748025c715" kindref="member">getAskapPackageVersion_DaliugeApplicationFactory</ref>()<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"DaliugeApplicationFactory"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_DaliugeApplicationFactory()</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAPsoft<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/OS/DynLib.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>dynamic<sp/>library<sp/>loading</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/BasicSL/String.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>downcase</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/program_options.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="comment">//<sp/>Local<sp/>package<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplicationFactory_8h" kindref="compound">factory/DaliugeApplicationFactory.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="comment">//<sp/>Apps<sp/>need<sp/>to<sp/>be<sp/>here<sp/>-<sp/>or<sp/>can<sp/>we<sp/>register<sp/>them<sp/>from<sp/>Somewhere<sp/>else</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LoadParset_8h" kindref="compound">factory/LoadParset.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LoadVis_8h" kindref="compound">factory/LoadVis.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="MajorCycle_8h" kindref="compound">factory/MajorCycle.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LoadNE_8h" kindref="compound">factory/LoadNE.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="SolveNE_8h" kindref="compound">factory/SolveNE.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="RestoreSolver_8h" kindref="compound">factory/RestoreSolver.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="CalcNE_8h" kindref="compound">factory/CalcNE.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="OutputParams_8h" kindref="compound">factory/OutputParams.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="SpectralCube_8h" kindref="compound">factory/SpectralCube.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NESpectralCube_8h" kindref="compound">factory/NESpectralCube.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="InitSpectralCube_8h" kindref="compound">factory/InitSpectralCube.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="JacalBPCalibrator_8h" kindref="compound">factory/JacalBPCalibrator.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>static<sp/>registry.</highlight><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>DaliugeApplicationFactory::DaliugeApplicationCreator*&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>DaliugeApplicationFactory::theirRegistry;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>registry<sp/>lock</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>std::recursive_mutex<sp/>DaliugeApplicationFactory::registry_lock;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>DaliugeApplicationFactory::DaliugeApplicationFactory()<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplicationFactory_1a115fdd8c06704bdb16d15912215d6077" kindref="member">DaliugeApplicationFactory::registerDaliugeApplication</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplicationFactory_1a2437234a2d4b97ed7a5bb9a04b9ba128" kindref="member">DaliugeApplicationFactory::DaliugeApplicationCreator</ref>*<sp/>creatorFunc)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".registerDaliugeApplication"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Adding<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name.c_str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>to<sp/>the<sp/>application<sp/>registry"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>_(registry_lock);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theirRegistry[name]<sp/>=<sp/>creatorFunc;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/><ref refid="classaskap_1_1DaliugeApplicationFactory_1ac572613b4bbb84b2dbd0fb68f6b0d0b8" kindref="member">DaliugeApplicationFactory::createDaliugeApplication</ref><sp/>(dlg_app_info<sp/>*dlg_app)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".registerDaliugeApplication"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name<sp/>=<sp/>dlg_app-&gt;appname;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Attempting<sp/>to<sp/>find<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>in<sp/>the<sp/>registry"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It's<sp/>a<sp/>kind-of-long<sp/>operation,<sp/>but<sp/>who<sp/>cares,<sp/>let's<sp/>try<sp/>at<sp/>least<sp/>to<sp/>be</highlight><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thread-safe</highlight><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>_(registry_lock);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,DaliugeApplicationCreator*&gt;::const_iterator<sp/>it<sp/>=<sp/>theirRegistry.find<sp/>(name);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>theirRegistry.end())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unknown<sp/>Application.<sp/>Try<sp/>to<sp/>load<sp/>from<sp/>a<sp/>dynamic<sp/>library</highlight><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>that<sp/>lowercase<sp/>name<sp/>(without<sp/>possible<sp/>template<sp/>extension).</highlight><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>libname(casacore::downcase(name));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string::size_type<sp/>pos<sp/>=<sp/>libname.find_first_of<sp/>(</highlight><highlight class="stringliteral">".&lt;"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libname<sp/>=<sp/>libname.substr<sp/>(0,<sp/>pos);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>take<sp/>before<sp/>.<sp/>or<sp/>&lt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>load<sp/>the<sp/>dynamic<sp/>library<sp/>and<sp/>execute<sp/>its<sp/>register<sp/>function.</highlight><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>dlclose<sp/>the<sp/>library.</highlight><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Application<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name.c_str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>is<sp/>not<sp/>in<sp/>the<sp/>Daliuge<sp/>Application<sp/>registry,<sp/>attempting<sp/>to<sp/>load<sp/>it<sp/>dynamically"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>casacore::DynLib<sp/>dl(libname,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">"libaskap_"</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">"register_"</highlight><highlight class="normal">+libname,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dl.getHandle())<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Successfully<sp/>loaded.<sp/>Get<sp/>the<sp/>creator<sp/>function.</highlight><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Dynamically<sp/>loaded<sp/>ASKAP/Daliuge<sp/>Application<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name.c_str());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>thing<sp/>the<sp/>Application<sp/>in<sp/>the<sp/>shared<sp/>library<sp/>is<sp/>supposed<sp/>to<sp/>do<sp/>is<sp/>to</highlight><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>itself.<sp/>Therefore,<sp/>its<sp/>name<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>registry.</highlight><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>theirRegistry.find<sp/>(name);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>theirRegistry.end())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPTHROW(AskapError,<sp/></highlight><highlight class="stringliteral">"factory<sp/>-<sp/>Unknown<sp/>Application<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Execute<sp/>the<sp/>registered<sp/>function.</highlight><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second(dlg_app);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"/></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"/><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::once_flag<sp/>initial_population_called;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DaliugeApplicationFactory::initial_population()<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".initial_population"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"/></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>_(registry_lock);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theirRegistry.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>first<sp/>call<sp/>of<sp/>the<sp/>method,<sp/>we<sp/>need<sp/>to<sp/>fill<sp/>the<sp/>registry<sp/>with</highlight><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>pre-defined<sp/>applications</highlight><highlight class="normal"/></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Filling<sp/>the<sp/>registry<sp/>with<sp/>predefined<sp/>applications"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;LoadParset&gt;();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;LoadVis&gt;();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;LoadNE&gt;();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;SolveNE&gt;();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;OutputParams&gt;();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;CalcNE&gt;();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;SpectralCube&gt;();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;NESpectralCube&gt;();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;InitSpectralCube&gt;();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;JacalBPCalibrator&gt;();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;MajorCycle&gt;();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>addPreDefinedDaliugeApplication&lt;RestoreSolver&gt;();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"/></codeline>
<codeline lineno="156"><highlight class="normal"/><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::once_flag<sp/>init_logging_flag;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_logging()<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPLOG_INIT(</highlight><highlight class="stringliteral">""</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"/></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>DaliugeApplicationFactory::make(dlg_app_info<sp/>*dlg_app)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>std::call_once(init_logging_flag,<sp/>init_logging);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::call_once(initial_population_called,<sp/>initial_population);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"/></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>for<sp/>the<sp/>result</highlight><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>App<sp/>=<sp/><ref refid="classaskap_1_1DaliugeApplicationFactory_1ac572613b4bbb84b2dbd0fb68f6b0d0b8" kindref="member">createDaliugeApplication</ref>(dlg_app);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPASSERT(App);<sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>App<sp/>of<sp/>that<sp/>name<sp/>is<sp/>in<sp/>the<sp/>registry<sp/>it<sp/>will<sp/>be<sp/>here</highlight><highlight class="normal"/></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>App;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"/></codeline>
<codeline lineno="173"><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/DaliugeApplicationFactory.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="DaliugeApplicationFactory_8h" kind="file" language="C++">
    <compoundname>DaliugeApplicationFactory.h</compoundname>
    <innerclass refid="classaskap_1_1DaliugeApplicationFactory" prot="public">askap::DaliugeApplicationFactory</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
<para>A Factory class for Daliuge Applications. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_DALIUGE_APPLICATION_FACTORY_H_</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_DALIUGE_APPLICATION_FACTORY_H_</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="comment">//<sp/>System<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include&lt;map&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAPsoft<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight class="comment">//<sp/>Local<sp/>package<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30" refid="classaskap_1_1DaliugeApplicationFactory" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1DaliugeApplicationFactory" kindref="compound">DaliugeApplicationFactory</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"/></codeline>
<codeline lineno="39" refid="classaskap_1_1DaliugeApplicationFactory_1a2437234a2d4b97ed7a5bb9a04b9ba128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/><ref refid="classaskap_1_1DaliugeApplicationFactory_1a2437234a2d4b97ed7a5bb9a04b9ba128" kindref="member">DaliugeApplicationCreator</ref>(dlg_app_info<sp/>*dlg_app);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplicationFactory_1a115fdd8c06704bdb16d15912215d6077" kindref="member">registerDaliugeApplication</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplicationFactory_1a2437234a2d4b97ed7a5bb9a04b9ba128" kindref="member">DaliugeApplicationCreator</ref>*<sp/>creatorFunc);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/><ref refid="classaskap_1_1DaliugeApplicationFactory_1ac572613b4bbb84b2dbd0fb68f6b0d0b8" kindref="member">createDaliugeApplication</ref><sp/>(dlg_app_info<sp/>*dlg_app);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>make(dlg_app_info<sp/>*dlg_app);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initial_population();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplicationFactory" kindref="compound">DaliugeApplicationFactory</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66" refid="classaskap_1_1DaliugeApplicationFactory_1adfc86fe0444aa38d97670d2b1a9b60f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DaliugeApplicationType&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplicationFactory_1adfc86fe0444aa38d97670d2b1a9b60f0" kindref="member">addPreDefinedDaliugeApplication</ref>()<sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplicationFactory_1a115fdd8c06704bdb16d15912215d6077" kindref="member">registerDaliugeApplication</ref>(DaliugeApplicationType::ApplicationName(),<sp/>DaliugeApplicationType::createDaliugeApplication);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::recursive_mutex<sp/>registry_lock;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>DaliugeApplicationCreator*&gt;<sp/>theirRegistry;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/DaliugeApplicationFactory.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="InitSpectralCube_8cc" kind="file" language="C++">
    <compoundname>InitSpectralCube.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="InitSpectralCube_8cc_1a4d1ddf07cbd0b13ab1f2624083b36f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>ASKAP_LOGGER</definition>
        <argsstring>(logger, ".InitSpectralCube")</argsstring>
        <name>ASKAP_LOGGER</name>
        <param>
          <type>logger</type>
        </param>
        <param>
          <type>".InitSpectralCube"</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/InitSpectralCube.cc" line="95" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>for<sp/>logging</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"InitSpectralCube"</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1a85533202ef62bb198919692d6cef7807" kindref="member">getAskapPackageVersion_InitSpectralCube</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"InitSpectralCube;<sp/>ASKAPsoft==Unknown"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_InitSpectralCube()</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="InitSpectralCube_8h" kindref="compound">factory/InitSpectralCube.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="comment">//<sp/>Data<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableConstDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IConstDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataSelector.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/><highlight class="comment">//<sp/>Image<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;imageaccess/ImageAccessFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;utils/PolConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/><highlight class="comment">//<sp/>casacore</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Arrays/IPosition.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/SpectralCoordinate.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/DirectionCoordinate.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/StokesCoordinate.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/CoordinateSystem.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/measures/Measures/Stokes.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/images/Images/PagedImage.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/Unit.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/QC.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".InitSpectralCube"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>InitSpectralCube::InitSpectralCube(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Initialised<sp/>cube<sp/>builder<sp/>-<sp/>UID<sp/>is<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>raw_app-&gt;uid);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"/></codeline>
<codeline lineno="108"><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>InitSpectralCube::~InitSpectralCube()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>InitSpectralCube::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitSpectralCube::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InitSpectralCube(raw_app));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1InitSpectralCube_1a1b437de313f52b5ed672abd322c9a05a" kindref="member">InitSpectralCube::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Argument<sp/>parsing<sp/>is<sp/>not<sp/>working<sp/>as<sp/>yet</highlight><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parset_filename<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"/></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"/></codeline>
<codeline lineno="134"><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1InitSpectralCube_1a04444452af403f87957a55cf54c0b6af" kindref="member">InitSpectralCube::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>safety;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_read<sp/>=<sp/>input(</highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"No<sp/>config<sp/>file<sp/>available"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"/></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"/></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>parset.makeSubset(</highlight><highlight class="stringliteral">"Cimager."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>fill<sp/>the<sp/>local<sp/>parset<sp/>with<sp/>parameters<sp/>that<sp/>maybe<sp/>missing</highlight><highlight class="normal"/></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>NEUtils::addMissingParameters(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Exception<sp/>thrown<sp/>in<sp/>addMissingParameters"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Getting<sp/>base<sp/>frequency"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Double<sp/>baseFrequency<sp/>=<sp/>NEUtils::getFrequency(itsParset,0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Getting<sp/>chanwidth"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Double<sp/>chanWidth<sp/>=<sp/>NEUtils::getChanWidth(itsParset,0);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Getting<sp/>nchan"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Int<sp/>nchanCube<sp/>=<sp/>NEUtils::getNChan(itsParset);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"/></codeline>
<codeline lineno="183"><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Quantity<sp/>f0(baseFrequency,</highlight><highlight class="stringliteral">"Hz"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Quantity<sp/>freqinc(chanWidth,</highlight><highlight class="stringliteral">"Hz"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"/></codeline>
<codeline lineno="190"><highlight class="normal"/></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>img_name<sp/>=<sp/></highlight><highlight class="stringliteral">"image"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>psf_name<sp/>=<sp/></highlight><highlight class="stringliteral">"psf"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>residual_name<sp/>=<sp/></highlight><highlight class="stringliteral">"residual"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>weights_name<sp/>=<sp/></highlight><highlight class="stringliteral">"weights"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>restored_name<sp/>=<sp/></highlight><highlight class="stringliteral">"restored"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"/></codeline>
<codeline lineno="197"><highlight class="normal"/></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Configuring<sp/>Spectral<sp/>Cube"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"nchan:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nchanCube<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>base<sp/>f0:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>f0.getValue(</highlight><highlight class="stringliteral">"MHz"</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>MHz<sp/>"</highlight><highlight class="normal"/></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>width:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>freqinc.getValue(</highlight><highlight class="stringliteral">"MHz"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"/></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsImageCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>nchanCube,<sp/>f0,<sp/>freqinc,img_name));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsPSFCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>nchanCube,<sp/>f0,<sp/>freqinc,<sp/>psf_name));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsResidualCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>nchanCube,<sp/>f0,<sp/>freqinc,<sp/>residual_name));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsWeightsCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>nchanCube,<sp/>f0,<sp/>freqinc,<sp/>weights_name));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"/><highlight class="comment">//<sp/>Need<sp/>to<sp/>add<sp/>the<sp/>restore<sp/>cube<sp/>test<sp/>and<sp/>build<sp/>here</highlight><highlight class="normal"/></codeline>
<codeline lineno="208"><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsParset.getBool(</highlight><highlight class="stringliteral">"restore"</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRestoredCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>nchanCube,<sp/>f0,<sp/>freqinc,<sp/>restored_name));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"/></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitSpectralCube::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitSpectralCube::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"/></codeline>
<codeline lineno="225"><highlight class="normal"/></codeline>
<codeline lineno="226"><highlight class="normal"/></codeline>
<codeline lineno="227"><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"/></codeline>
<codeline lineno="229"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/InitSpectralCube.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="InitSpectralCube_8h" kind="file" language="C++">
    <compoundname>InitSpectralCube.h</compoundname>
    <innerclass refid="classaskap_1_1InitSpectralCube" prot="public">askap::InitSpectralCube</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
<para>Build an output image cube. </para>    </briefdescription>
    <detaileddescription>
<para>This drop will be able to build an output cube of any format supported by ASKAPSoft </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_INITSPECTRALCUBE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_INITSPECTRALCUBE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;imageaccess/ImageAccessFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"distributedimager/CubeBuilder.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/images/Images/PagedImage.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/lattices/Lattices/PagedArray.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Arrays/Array.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/CoordinateSystem.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40" refid="classaskap_1_1InitSpectralCube" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1InitSpectralCube" kindref="compound">InitSpectralCube</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;InitSpectralCube&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1InitSpectralCube" kindref="compound">InitSpectralCube</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"InitSpectralCube"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1InitSpectralCube" kindref="compound">InitSpectralCube</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1InitSpectralCube_1a1b437de313f52b5ed672abd322c9a05a" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1InitSpectralCube_1a04444452af403f87957a55cf54c0b6af" kindref="member">run</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::Params::ShPtr<sp/>itsModel;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>itsParset;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsImageCube;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsPSFCube;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsResidualCube;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsWeightsCube;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsPSFimageCube;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsRestoredCube;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itsChan;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/InitSpectralCube.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="Interface_8cc" kind="file" language="C++">
    <compoundname>Interface.cc</compoundname>
    <innerclass refid="structDaliugeApplicationWrapper" prot="public">DaliugeApplicationWrapper</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="Interface_8cc_1a42c8cc2d2f7a332de949a34905463bc1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">askap::DaliugeApplication::ShPtr</ref></type>
        <definition>static askap::DaliugeApplication::ShPtr unpack</definition>
        <argsstring>(dlg_app_info *app)</argsstring>
        <name>unpack</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.cc" line="16" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="Interface_8cc_1a6763b4d97d4e2c9874aa1820ce2b57e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init</definition>
        <argsstring>(dlg_app_info *app, const char ***arguments)</argsstring>
        <name>init</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.cc" line="26" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="26" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="Interface_8cc_1a977938f73be7ab3303c4cc358e125012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int run</definition>
        <argsstring>(dlg_app_info *app)</argsstring>
        <name>run</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.cc" line="59" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="Interface_8cc_1a04ba3c58cf6108ab2f11ec70cd5610a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void data_written</definition>
        <argsstring>(dlg_app_info *app, const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.cc" line="63" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="Interface_8cc_1ab7a154484ea99e21aa7189cf3e93a791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drop_completed</definition>
        <argsstring>(dlg_app_info *app, const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.cc" line="67" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="67" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>expose<sp/>the<sp/>member<sp/>functions<sp/>to<sp/>the<sp/>outside<sp/>world<sp/>as<sp/>C<sp/>functions</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight class="comment">//<sp/>If<sp/>Daliuge<sp/>changes<sp/>its<sp/>API<sp/>-<sp/>you<sp/>will<sp/>have<sp/>to<sp/>change<sp/>these<sp/>functions</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp/>but<sp/>hopefully<sp/>all<sp/>the<sp/>issues<sp/>will<sp/>be<sp/>hidden<sp/>behind<sp/>the<sp/>structures</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="preprocessor">#include&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="preprocessor">#include&lt;<ref refid="DaliugeApplicationFactory_8h" kindref="compound">factory/DaliugeApplicationFactory.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="preprocessor">#include&lt;factory/Interface.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#include&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11" refid="structDaliugeApplicationWrapper" refkind="compound"><highlight class="normal"/><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDaliugeApplicationWrapper" kindref="compound">DaliugeApplicationWrapper</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">askap::DaliugeApplication::ShPtr</ref><sp/>daliuge_app;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">askap::DaliugeApplication::ShPtr</ref><sp/>unpack(dlg_app_info<sp/>*app)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structDaliugeApplicationWrapper" kindref="compound">DaliugeApplicationWrapper</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(app-&gt;data)-&gt;daliuge_app;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init(dlg_app_info<sp/>*app,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>means<sp/>we<sp/>have<sp/>to<sp/>instantiate<sp/>an<sp/>application</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>call<sp/>its<sp/>init</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>got_name<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*arguments<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>arguments[0];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(param[0],<sp/></highlight><highlight class="stringliteral">"name"</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;appname<sp/>=<sp/>strdup(param[1]);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got_name<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(got_name<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;appname<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">"LoadParset"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>set<sp/>the<sp/>app-&gt;appname<sp/>here<sp/>....<sp/>from<sp/>the<sp/>arguments<sp/>....</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">askap::DaliugeApplication::ShPtr</ref><sp/>thisApp<sp/>=<sp/>askap::DaliugeApplicationFactory::make(app);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>pointer<sp/>in<sp/>the<sp/>raw<sp/>dlg_app_info<sp/>for<sp/>later<sp/>retrieval</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wrapper<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structDaliugeApplicationWrapper" kindref="compound">DaliugeApplicationWrapper</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper-&gt;daliuge_app<sp/>=<sp/>thisApp;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;data<sp/>=<sp/>wrapper;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thisApp-&gt;init(arguments);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run(dlg_app_info<sp/>*app)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unpack(app)-&gt;run();</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(dlg_app_info<sp/>*app,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>unpack(app)-&gt;data_written(uid,<sp/>data,<sp/>n);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(dlg_app_info<sp/>*app,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>unpack(app)-&gt;drop_completed(uid,<sp/>status);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/Interface.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="Interface_8h" kind="file" language="C++">
    <compoundname>Interface.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="Interface_8h_1a6763b4d97d4e2c9874aa1820ce2b57e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init</definition>
        <argsstring>(dlg_app_info *app, const char ***arguments)</argsstring>
        <name>init</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.h" line="18" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="26" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="Interface_8h_1a977938f73be7ab3303c4cc358e125012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int run</definition>
        <argsstring>(dlg_app_info *app)</argsstring>
        <name>run</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.h" line="19" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="Interface_8h_1a04ba3c58cf6108ab2f11ec70cd5610a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void data_written</definition>
        <argsstring>(dlg_app_info *app, const char *uid, const char *data, size_t n)</argsstring>
        <name>data_written</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.h" line="20" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="Interface_8h_1ab7a154484ea99e21aa7189cf3e93a791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drop_completed</definition>
        <argsstring>(dlg_app_info *app, const char *uid, drop_status status)</argsstring>
        <name>drop_completed</name>
        <param>
          <type>dlg_app_info *</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>drop_status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/Interface.h" line="21" column="1" bodyfile="jacal/factory/Interface.cc" bodystart="67" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_DALIUGE_INTERFACE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_DALIUGE_INTERFACE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp/>@brief<sp/>The<sp/>Actual<sp/>Interface</highlight><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp/>@details<sp/>We<sp/>expose<sp/><sp/>class<sp/>member<sp/>functions<sp/>to<sp/>the<sp/>outside<sp/>world<sp/>as<sp/>C<sp/>functions</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="comment">//<sp/>If<sp/>Daliuge<sp/>changes<sp/>its<sp/>API<sp/>-<sp/>you<sp/>will<sp/>have<sp/>to<sp/>change<sp/>these<sp/>functions</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp/>but<sp/>hopefully<sp/>all<sp/>the<sp/>issues<sp/>will<sp/>be<sp/>hidden<sp/>behind<sp/>the<sp/>structures</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include&lt;<ref refid="DaliugeApplicationFactory_8h" kindref="compound">factory/DaliugeApplicationFactory.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"C"</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init(dlg_app_info<sp/>*app,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run(dlg_app_info<sp/>*app);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(dlg_app_info<sp/>*app,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(dlg_app_info<sp/>*app,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,drop_status<sp/>status);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/Interface.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="JacalBPCalibrator_8cc" kind="file" language="C++">
    <compoundname>JacalBPCalibrator.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>ASKAP_LOGGER</definition>
        <argsstring>(logger, ".parallel")</argsstring>
        <name>ASKAP_LOGGER</name>
        <param>
          <type>logger</type>
        </param>
        <param>
          <type>".parallel"</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Usage in graphs:</para><para>The assumption is that there will be a scatter over some number of channels at the moment a drop only does a single channel in its allocation - but I might be able to change that.</para><para>The output needs to be attached to a drop outside the scatter - or perhaps talk to Chen about a /// gather </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/JacalBPCalibrator.cc" line="44" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>JacalBPCalibrator: part of the specialised tool to do optimised bandpass calibration with limited functionality. This class <verbatim> * solves for bandpass only
 * works only with preaveraging calibration approach
 * does not support multiple chunks in time (i.e. only one solution is made for the whole dataset)
 * does not support data distribution except per beam
 * does not support a distributed model (e.h. with individual workers dealing with individual Taylor terms)
 * does not require exact match between number of workers and number of channel chunks, data are dealt with
   serially by each worker with multiple iterations over data, if required.
 * solves normal equations at the worker level in the parallel case
</verbatim></para><para>This specialised tool is simply all that is required to get bandpass calibration into a Daliuge drop <simplesect kind="copyright"><para>(c) 2018 CSIRO Australia Telescope National Facility (ATNF) Commonwealth Scientific and Industrial Research Organisation (CSIRO) PO Box 76, Epping NSW 1710, Australia <ulink url="mailto:atnf-enquiries@csiro.au">atnf-enquiries@csiro.au</ulink></para></simplesect>
This file is part of the JACAL software distribution.</para><para>This file is based in part on BPCalibratorParallel.cc from the ASKAP distribution </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"/>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="comment">//<sp/>Include<sp/>own<sp/>header<sp/>file<sp/>first</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"<ref refid="JacalBPCalibrator_8h" kindref="compound">JacalBPCalibrator.h</ref>"</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"<ref refid="NEUtils_8h" kindref="compound">NEUtils.h</ref>"</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="comment">//<sp/>logging<sp/>stuff</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="comment">//<sp/>rtobar:<sp/>is<sp/>this<sp/>really<sp/>needed?<sp/>It<sp/>doesn't<sp/>ship<sp/>now<sp/>with<sp/>yandasoft</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(probably<sp/>an<sp/>oversight<sp/>though)</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="comment">//<sp/>#include<sp/>&lt;askap_synthesis.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".parallel"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="comment">//<sp/>own<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/askap/AskapUtil.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/profile/AskapProfiler.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/dataaccess/TableDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/dataaccess/ParsetInterface.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/scimath/fitting/LinearSolver.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/scimath/fitting/GenericNormalEquations.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/scimath/fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/MEParsetInterface.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/CalibrationME.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/PreAvgCalMEBase.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/ComponentEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/NoXPolGain.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/NoXPolFreqDependentGain.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/NoXPolBeamIndependentGain.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/ImagingEquationAdapter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/measurementequation/IMeasurementEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/parallel/CalibratorParallel.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/askapparallel/AskapParallel.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/calibaccess/CalParamNameHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/calibaccess/CalibAccessFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/><highlight class="comment">//<sp/>casa<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/aips.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/OS/Timer.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="classaskap_1_1JacalBPCalibrator_1a117c1878d3d684910ec9b8732d8fa706" kindref="member">JacalBPCalibrator::JacalBPCalibrator</ref>(dlg_app_info<sp/>*raw_app)<sp/>:<sp/>DaliugeApplication(raw_app),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsPerfectModel(new<sp/>scimath::Params()),<sp/>itsRefAntenna(-1),<sp/>itsSolutionID(-1),<sp/>itsSolutionIDValid(false),itsModel(new<sp/>scimath::Params()),itsSolver(scimath::Solver::ShPtr(new<sp/>scimath::Solver)),itsNe(new<sp/>scimath::ImagingNormalEquations(*itsModel))</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>this-&gt;itsChan<sp/>=<sp/>NEUtils::getChan(raw_app-&gt;uid);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;itsChan<sp/>&lt;<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>outside<sp/>a<sp/>loop<sp/>we<sp/>are<sp/>going<sp/>to<sp/>do<sp/>this<sp/>ourselves</highlight><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;isMaster<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;isWorker<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;isParallel<sp/>=<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"/></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>in<sp/>a<sp/>loop<sp/>-<sp/>assume<sp/>it<sp/>is<sp/>over<sp/>frequency<sp/>and<sp/>all<sp/>work<sp/>is<sp/>distributed</highlight><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;isWorker<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;isMaster<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;isParallel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"/></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>beam<sp/>0<sp/>for<sp/>the<sp/>moment</highlight><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>this-&gt;itsBeam<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal">DaliugeApplication::ShPtr<sp/>JacalBPCalibrator::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JacalBPCalibrator::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>JacalBPCalibrator(raw_app));</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"/></codeline>
<codeline lineno="128"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JacalBPCalibrator::init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"/></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Argument<sp/>parsing<sp/>is<sp/>not<sp/>working<sp/>as<sp/>yet</highlight><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parset_filename<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>params<sp/>I<sp/>might<sp/>need<sp/>go<sp/>here:</highlight><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filename:</highlight><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>longer<sp/>required<sp/>as<sp/>input<sp/>comes<sp/>from<sp/>daliuge<sp/>now</highlight><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(strcmp(param[0],<sp/>"parset_filename")<sp/>==<sp/>0)<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>parset_filename<sp/>=<sp/>strdup(param[1]);</highlight><highlight class="normal"/></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"/></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>FIXME:</highlight><highlight class="normal"/></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>This<sp/>should<sp/>be<sp/>here<sp/>but<sp/>I<sp/>could<sp/>not<sp/>get<sp/>a<sp/>boost<sp/>smart<sp/>pointer<sp/>to<sp/>work</highlight><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>to_app_data(app)-&gt;parset.reset(<sp/>new<sp/>LOFAR::ParameterSet(parset_filename));</highlight><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"/></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:</highlight><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Arbitrarily<sp/>setting<sp/>frequency<sp/>selection<sp/>to<sp/>1</highlight><highlight class="normal"/></codeline>
<codeline lineno="158"><highlight class="normal"/></codeline>
<codeline lineno="159"><highlight class="normal"/></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>this-&gt;freqInterval<sp/>=<sp/>casacore::IPosition(2,0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>this-&gt;timeInterval<sp/>=<sp/>casacore::IPosition(2,0);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>this-&gt;freqInterval[0]<sp/>=<sp/>this-&gt;itsChan;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>this-&gt;freqInterval[1]<sp/>=<sp/>this-&gt;itsChan+1;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"/></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"/></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JacalBPCalibrator::run()<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>itsModelInputs<sp/>=<sp/>get_inputs(</highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"/></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>input(</highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_read<sp/>==<sp/>64*1024)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n_read--;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>buf[n_read]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>parset.makeSubset(</highlight><highlight class="stringliteral">"Cbpcalibrator."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"/></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Bandpass<sp/>will<sp/>be<sp/>solved<sp/>for<sp/>using<sp/>a<sp/>specialised<sp/>pipeline"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isMaster)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>solution<sp/>source<sp/>(or<sp/>sink<sp/>to<sp/>be<sp/>exact,<sp/>because<sp/>we're<sp/>writing<sp/>the<sp/>solution<sp/>here)</highlight><highlight class="normal"/></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsSolutionSource<sp/>=<sp/>accessors::CalibAccessFactory::rwCalSolutionSource(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPASSERT(itsSolutionSource);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"/></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isParallel)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"The<sp/>work<sp/>will<sp/>be<sp/>distributed<sp/>between<sp/>workers"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"The<sp/>work<sp/>will<sp/>be<sp/>done<sp/>in<sp/>the<sp/>serial<sp/>by<sp/>the<sp/>current<sp/>process"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"/></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>calAccType<sp/>=<sp/>this-&gt;itsParset.getString(</highlight><highlight class="stringliteral">"calibaccess"</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">"parset"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"/></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isWorker)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>datasets<sp/>(we<sp/>cannot<sp/>rely<sp/>on<sp/>the<sp/>code<sp/>in<sp/>base<sp/>classes<sp/>because<sp/>we<sp/>don't<sp/>distribute<sp/>by<sp/>node<sp/>here</highlight><highlight class="normal"/></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setMeasurementSets(itsParset.getStringVector(</highlight><highlight class="stringliteral">"dataset"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::LinearSolver(1e3));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(itsSolver,<sp/></highlight><highlight class="stringliteral">"Solver<sp/>not<sp/>defined<sp/>correctly"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"/></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>solver<sp/>parameters.</highlight><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>solverType<sp/>=<sp/>itsParset.getString(</highlight><highlight class="stringliteral">"solver"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"SVD"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver-&gt;setAlgorithm(solverType);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solverType<sp/>==<sp/></highlight><highlight class="stringliteral">"LSQR"</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"/></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"solver<sp/>type<sp/>LSQR"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>solverParams<sp/>=<sp/>synthesis::CalibratorParallel::getLSQRSolverParameters(itsParset);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverParams[</highlight><highlight class="stringliteral">"nChan"</highlight><highlight class="normal">]<sp/>=<sp/>itsParset.getString(</highlight><highlight class="stringliteral">"nChan"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver-&gt;setParameters(solverParams);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"solver<sp/>type<sp/>SVD"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(!itsParset.isDefined(</highlight><highlight class="stringliteral">"refgain"</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">"usage<sp/>of<sp/>refgain<sp/>is<sp/>deprecated,<sp/>define<sp/>reference<sp/>antenna<sp/>instead"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsRefAntenna<sp/>=<sp/>itsParset.getInt32(</highlight><highlight class="stringliteral">"refantenna"</highlight><highlight class="normal">,-1);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsRefAntenna<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Phases<sp/>will<sp/>be<sp/>rotated,<sp/>so<sp/>antenna<sp/>"</highlight><highlight class="normal">&lt;&lt;itsRefAntenna&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>has<sp/>zero<sp/>phase<sp/>for<sp/>all<sp/>channels<sp/>and<sp/>beams<sp/>in<sp/>the<sp/>first<sp/>polarisation"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(itsRefAntenna<sp/>&lt;<sp/>static_cast&lt;int&gt;(nAnt()),<sp/></highlight><highlight class="stringliteral">"Requested<sp/>reference<sp/>antenna<sp/>doesn't<sp/>exist,<sp/>nAnt="</highlight><highlight class="normal">&lt;&lt;nAnt());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"No<sp/>phase<sp/>rotation<sp/>will<sp/>be<sp/>done<sp/>between<sp/>iterations"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>sky<sp/>model,<sp/>populate<sp/>itsPerfectModel</highlight><highlight class="normal"/></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readModels();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isParallel)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>work<sp/>units<sp/>in<sp/>the<sp/>parallel<sp/>case,<sp/>make<sp/>beams<sp/>the<sp/>first<sp/>(fastest<sp/>to<sp/>change)<sp/>parameter<sp/>to<sp/>achieve</highlight><highlight class="normal"/></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>greater<sp/>benefits<sp/>if<sp/>multiple<sp/>measurement<sp/>sets<sp/>are<sp/>present<sp/>(more<sp/>likely<sp/>to<sp/>be<sp/>scheduled<sp/>for<sp/>different<sp/>ranks)</highlight><highlight class="normal"/></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Work<sp/>for<sp/>"</highlight><highlight class="normal">&lt;&lt;nBeam()&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>beams<sp/>and<sp/>"</highlight><highlight class="normal">&lt;&lt;nChan()&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>channels<sp/>will<sp/>be<sp/>split<sp/>between<sp/>ranks,<sp/>this<sp/>one<sp/>handles<sp/>a<sp/>single<sp/>channel<sp/>-<sp/>but<sp/>we<sp/>could<sp/>define<sp/>a<sp/>chunk"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"/></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allocation<sp/>=<sp/>nChanPerRank();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"/></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::IPosition<sp/>start(2,<sp/>this-&gt;itsBeam,<sp/>(this-&gt;itsChan)*allocation);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::IPosition<sp/>stop(2,<sp/>this-&gt;itsBeam,<sp/>(this-&gt;itsChan+1)*allocation-1);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Allocation<sp/>of<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>allocation<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>starts<sp/>at<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>start<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>stop<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stop);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsWorkUnitIterator.init(casacore::IPosition(2,<sp/>nBeam(),<sp/>nChan()),<sp/>start,<sp/>stop);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//itsWorkUnitIterator.init(casacore::IPosition(2,<sp/>nBeam(),<sp/>nChan()),<sp/>1,<sp/>this-&gt;itsChan);</highlight><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Initialised<sp/>iterator"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK((measurementSets().size()<sp/>==<sp/>1)<sp/>||<sp/>(measurementSets().size()<sp/>==<sp/>nBeam()),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"Number<sp/>of<sp/>measurement<sp/>sets<sp/>given<sp/>in<sp/>the<sp/>parset<sp/>("</highlight><highlight class="normal">&lt;&lt;measurementSets().size()&lt;&lt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">")<sp/>should<sp/>be<sp/>either<sp/>1<sp/>or<sp/>equal<sp/>the<sp/>number<sp/>of<sp/>beams<sp/>("</highlight><highlight class="normal">&lt;&lt;nBeam()&lt;&lt;</highlight><highlight class="stringliteral">")"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isParallel)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>work<sp/>units<sp/>in<sp/>the<sp/>serial<sp/>case<sp/>-<sp/>all<sp/>work<sp/>to<sp/>be<sp/>done<sp/>here</highlight><highlight class="normal"/></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"All<sp/>work<sp/>for<sp/>"</highlight><highlight class="normal">&lt;&lt;nBeam()&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>beams<sp/>and<sp/>"</highlight><highlight class="normal">&lt;&lt;nChan()&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>channels<sp/>will<sp/>be<sp/>handled<sp/>by<sp/>this<sp/>rank"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsWorkUnitIterator.init(casacore::IPosition(2,<sp/>nBeam(),<sp/>nChan()));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"/></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isMaster)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>only<sp/>one<sp/>rank<sp/>does<sp/>this</highlight><highlight class="normal"/></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"About<sp/>to<sp/>set<sp/>the<sp/>solution<sp/>accessor"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itsSolutionIDValid)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>obtain<sp/>solution<sp/>ID<sp/>only<sp/>once,<sp/>the<sp/>results<sp/>can<sp/>come<sp/>in<sp/>random<sp/>order<sp/>and<sp/>the</highlight><highlight class="normal"/></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accessor<sp/>is<sp/>responsible<sp/>for<sp/>aggregating<sp/>all<sp/>of<sp/>them<sp/>together.<sp/>This<sp/>is<sp/>done<sp/>based<sp/>on<sp/>this<sp/>ID.</highlight><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//@todo<sp/>Can<sp/>probably<sp/>get<sp/>rid<sp/>of<sp/>this</highlight><highlight class="normal"/></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsSolutionID<sp/>=<sp/>itsSolutionSource-&gt;newSolutionID(solutionTime());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsSolutionIDValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Have<sp/>set<sp/>solutionID"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"/></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"/></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isWorker)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsModel);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"/></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>std::mutex<sp/>safety;</highlight><highlight class="normal"/></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight><highlight class="normal"/></codeline>
<codeline lineno="287"><highlight class="normal"/></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCycles<sp/>=<sp/>this-&gt;parset().getInt32(</highlight><highlight class="stringliteral">"ncycles"</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(nCycles<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">"<sp/>Number<sp/>of<sp/>calibration<sp/>iterations<sp/>should<sp/>be<sp/>a<sp/>non-negative<sp/>number,<sp/>you<sp/>have<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nCycles);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itsWorkUnitIterator.origin();<sp/>itsWorkUnitIterator.hasMore();<sp/>itsWorkUnitIterator.next())<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>force<sp/>creation<sp/>of<sp/>the<sp/>new<sp/>measurement<sp/>equation<sp/>for<sp/>this<sp/>beam/channel<sp/>pair</highlight><highlight class="normal"/></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsEquation.reset();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"/></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;casacore::uInt,<sp/>casacore::uInt&gt;<sp/>indices<sp/>=<sp/>currentBeamAndChannel();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"/></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Initialise<sp/>(unknowns<sp/>gains)<sp/>for<sp/>"</highlight><highlight class="normal">&lt;&lt;nAnt()&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>antennas<sp/>for<sp/>beam="</highlight><highlight class="normal">&lt;&lt;indices.first&lt;&lt;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"<sp/>and<sp/>channel="</highlight><highlight class="normal">&lt;&lt;indices.second);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;reset();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(casacore::uInt<sp/>ant<sp/>=<sp/>0;<sp/>ant&lt;nAnt();<sp/>++ant)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;add(accessors::CalParamNameHelper::paramName(ant,<sp/>indices.first,<sp/>casacore::Stokes::XX),<sp/>casacore::Complex(1.,0.));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;add(accessors::CalParamNameHelper::paramName(ant,<sp/>indices.first,<sp/>casacore::Stokes::YY),<sp/>casacore::Complex(1.,0.));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"/></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>reference<sp/>gain,<sp/>if<sp/>needed</highlight><highlight class="normal"/></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsRefAntenna<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//itsRefGain<sp/>=<sp/>accessors::CalParamNameHelper::paramName(itsRefAntenna,<sp/>indices.first,<sp/>casacore::Stokes::XX);</highlight><highlight class="normal"/></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wasim<sp/>was<sp/>here</highlight><highlight class="normal"/></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRefGainXX<sp/>=<sp/>accessors::CalParamNameHelper::paramName(itsRefAntenna,<sp/>indices.first,<sp/>casacore::Stokes::XX);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRefGainYY<sp/>=<sp/>accessors::CalParamNameHelper::paramName(itsRefAntenna,<sp/>indices.first,<sp/>casacore::Stokes::YY);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRefGainXX<sp/>=<sp/></highlight><highlight class="stringliteral">""</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRefGainYY<sp/>=<sp/></highlight><highlight class="stringliteral">""</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"/></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cycle<sp/>=<sp/>0;<sp/>(cycle<sp/>&lt;<sp/>nCycles)<sp/>&amp;&amp;<sp/>validSolution();<sp/>++cycle)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"/></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"***<sp/>Starting<sp/>calibration<sp/>iteration<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cycle<sp/>+<sp/>1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>for<sp/>beam="</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.first&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>and<sp/>channel="</highlight><highlight class="normal">&lt;&lt;indices.second&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>***"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterator<sp/>is<sp/>used<sp/>to<sp/>access<sp/>the<sp/>current<sp/>work<sp/>unit<sp/>inside<sp/>calcNE</highlight><highlight class="normal"/></codeline>
<codeline lineno="320"><highlight class="normal"/></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calcNE();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solveNE();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;itsChan<sp/>&gt;=0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>proxy<sp/>for<sp/>in<sp/>a<sp/>loop<sp/>over<sp/>channels</highlight><highlight class="normal"/></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>model<sp/>to<sp/>the<sp/>master,<sp/>add<sp/>beam<sp/>and<sp/>channel<sp/>tags<sp/>first</highlight><highlight class="normal"/></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;add(</highlight><highlight class="stringliteral">"beam"</highlight><highlight class="normal">,static_cast&lt;double&gt;(indices.first));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;add(</highlight><highlight class="stringliteral">"channel"</highlight><highlight class="normal">,static_cast&lt;double&gt;(indices.second));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;fix(</highlight><highlight class="stringliteral">"beam"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;fix(</highlight><highlight class="stringliteral">"channel"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendModelToMaster();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"/></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isParallel){</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>serial<sp/>operation,<sp/>just<sp/>write<sp/>the<sp/>result</highlight><highlight class="normal"/></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validSolution())<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeModel();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isMaster<sp/>&amp;&amp;<sp/>this-&gt;isParallel)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>master<sp/>rank<sp/>has<sp/>to<sp/>wait<sp/>for<sp/>the<sp/>workers</highlight><highlight class="normal"/></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"There<sp/>are<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;itsModelInputs.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>inputs<sp/>to<sp/>iterate<sp/>over"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;int&gt;::const_iterator<sp/>it<sp/>=<sp/><sp/>this-&gt;itsModelInputs.begin();<sp/>it<sp/>!=<sp/>this-&gt;itsModelInputs.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"/></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::uInt<sp/>numberOfWorkUnits<sp/>=<sp/>nBeam()<sp/>*<sp/>nChanPerRank();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Master<sp/>waiting<sp/>for<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numberOfWorkUnits<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"work<sp/>units<sp/>on<sp/>this<sp/>input"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(casacore::uInt<sp/>chunk<sp/>=<sp/>0;<sp/>chunk<sp/>&lt;<sp/>numberOfWorkUnits;<sp/>++chunk)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>asynchronously<sp/>receive<sp/>result<sp/>from<sp/>workers</highlight><highlight class="normal"/></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receiveModelFromWorker(*it);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validSolution())<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Writing<sp/>Model<sp/>from<sp/>Worker"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeModel();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"/></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>an<sp/>accessor,<sp/>which<sp/>should<sp/>call<sp/>syncCache<sp/>and<sp/>write<sp/>the<sp/>table<sp/>out.</highlight><highlight class="normal"/></codeline>
<codeline lineno="361"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(this-&gt;isMaster)<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="362"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/>"Syncing<sp/>the<sp/>cached<sp/>bandpass<sp/>table<sp/>to<sp/>disk");</highlight><highlight class="normal"/></codeline>
<codeline lineno="363"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>begin<sp/>check</highlight><highlight class="normal"/></codeline>
<codeline lineno="364"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsModel);</highlight><highlight class="normal"/></codeline>
<codeline lineno="365"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ASKAPASSERT(itsSolutionSource);</highlight><highlight class="normal"/></codeline>
<codeline lineno="366"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>itsSolAcc<sp/>=<sp/>itsSolutionSource-&gt;rwSolution(itsSolutionID);</highlight><highlight class="normal"/></codeline>
<codeline lineno="367"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/>"Have<sp/>set<sp/>solution<sp/>accessor");</highlight><highlight class="normal"/></codeline>
<codeline lineno="368"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ASKAPASSERT(itsSolAcc);</highlight><highlight class="normal"/></codeline>
<codeline lineno="369"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="370"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>parlist<sp/>=<sp/>itsModel-&gt;freeNames();</highlight><highlight class="normal"/></codeline>
<codeline lineno="371"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(casacore::uInt<sp/>chan<sp/>;<sp/>chan<sp/>&lt;<sp/>nChan();<sp/>++chan<sp/>)<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="372"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="373"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(std::vector&lt;std::string&gt;::const_iterator<sp/>it<sp/>=<sp/>parlist.begin();<sp/>it<sp/>!=<sp/>parlist.end();<sp/>++it)<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="374"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="375"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>ASKAPLOG_INFO_STR(logger,"Value<sp/>"<sp/>&lt;&lt;<sp/>val<sp/>&lt;&lt;<sp/>"<sp/>Param<sp/>"<sp/>&lt;&lt;<sp/>*it);</highlight><highlight class="normal"/></codeline>
<codeline lineno="376"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="377"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::pair&lt;accessors::JonesIndex,<sp/>casacore::Stokes::StokesTypes&gt;<sp/>paramType<sp/>=</highlight><highlight class="normal"/></codeline>
<codeline lineno="378"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::CalParamNameHelper::parseParam(*it);</highlight><highlight class="normal"/></codeline>
<codeline lineno="379"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>beam<sp/>is<sp/>also<sp/>coded<sp/>in<sp/>the<sp/>parameters,<sp/>although<sp/>we<sp/>don't<sp/>need<sp/>it<sp/>because<sp/>the<sp/>data<sp/>are<sp/>partitioned</highlight><highlight class="normal"/></codeline>
<codeline lineno="380"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>just<sp/>cross-check<sp/>it</highlight><highlight class="normal"/></codeline>
<codeline lineno="381"><highlight class="normal"/><highlight class="comment">//<sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"bandpass:"<sp/>&lt;&lt;<sp/>itsSolAcc-&gt;bandpass(paramType.first,chan).g1()<sp/>&lt;&lt;<sp/>":"<sp/>&lt;&lt;<sp/>itsSolAcc-&gt;bandpass(paramType.first,chan).g2());</highlight><highlight class="normal"/></codeline>
<codeline lineno="382"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="383"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"/></codeline>
<codeline lineno="384"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"/></codeline>
<codeline lineno="385"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>end<sp/>check</highlight><highlight class="normal"/></codeline>
<codeline lineno="386"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>the<sp/>SolAcc<sp/>is<sp/>actually<sp/>a<sp/>MemCalSolutionAccessor<sp/>lets<sp/>see<sp/>if<sp/>we<sp/>can<sp/>cast<sp/>it</highlight><highlight class="normal"/></codeline>
<codeline lineno="387"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>it<sp/>is<sp/>supposed<sp/>to<sp/>sync<sp/>when<sp/>it<sp/>is<sp/>reset</highlight><highlight class="normal"/></codeline>
<codeline lineno="388"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"Current<sp/>use_count<sp/>for<sp/>accessor<sp/>is<sp/>"<sp/>&lt;&lt;<sp/>itsSolAcc.use_count());</highlight><highlight class="normal"/></codeline>
<codeline lineno="389"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>itsSolAcc.reset();</highlight><highlight class="normal"/></codeline>
<codeline lineno="390"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="391"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/>"Table<sp/>should<sp/>be<sp/>synced<sp/>on<sp/>disk");</highlight><highlight class="normal"/></codeline>
<codeline lineno="392"><highlight class="normal"/><highlight class="comment">//}</highlight><highlight class="normal"/></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"/></codeline>
<codeline lineno="403"><highlight class="normal">LOFAR::ParameterSet<sp/>JacalBPCalibrator::emptyDatasetKeyword(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet<sp/>&amp;parset)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>LOFAR::ParameterSet<sp/>result(parset.makeSubset(</highlight><highlight class="stringliteral">""</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>result.replace(</highlight><highlight class="stringliteral">"dataset"</highlight><highlight class="normal">,std::string());</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"/></codeline>
<codeline lineno="410"><highlight class="normal"/></codeline>
<codeline lineno="417"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>JacalBPCalibrator::validSolution()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="418"><highlight class="keyword"/><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsModel)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!itsModel-&gt;has(</highlight><highlight class="stringliteral">"invalid"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"/></codeline>
<codeline lineno="431"><highlight class="normal">std::pair&lt;casacore::uInt,<sp/>casacore::uInt&gt;<sp/>JacalBPCalibrator::currentBeamAndChannel()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="432"><highlight class="keyword"/><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isMaster<sp/>&amp;&amp;<sp/>this-&gt;isParallel)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsModel);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsModel-&gt;has(</highlight><highlight class="stringliteral">"beam"</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>itsModel-&gt;has(</highlight><highlight class="stringliteral">"channel"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beam<sp/>=<sp/>itsModel-&gt;scalarValue(</highlight><highlight class="stringliteral">"beam"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>channel<sp/>=<sp/>itsModel-&gt;scalarValue(</highlight><highlight class="stringliteral">"channel"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT((beam<sp/>&gt;=<sp/>0.)<sp/>&amp;&amp;<sp/>(channel<sp/>&gt;=<sp/>0.));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;casacore::uInt,casacore::uInt&gt;<sp/>result(static_cast&lt;casacore::uInt&gt;(beam),<sp/>static_cast&lt;casacore::uInt&gt;(channel));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(result.first<sp/>&lt;<sp/>nBeam());</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(result.second<sp/>&lt;<sp/>nChan());</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::IPosition<sp/>cursor<sp/>=<sp/>itsWorkUnitIterator.cursor();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(cursor.nelements()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT((cursor[0]<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(cursor[1]<sp/>&gt;=<sp/>0));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;casacore::uInt,casacore::uInt&gt;<sp/>result(static_cast&lt;casacore::uInt&gt;(cursor[0]),<sp/>static_cast&lt;casacore::uInt&gt;(cursor[1]));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(result.first<sp/>&lt;<sp/>nBeam());</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(result.second<sp/>&lt;<sp/>nChan());</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"/></codeline>
<codeline lineno="454"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>BPCALIBRATOR_PARALLEL_BLOB_STREAM_VERSION<sp/>1</highlight><highlight class="normal"/></codeline>
<codeline lineno="455"><highlight class="normal"/></codeline>
<codeline lineno="459"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::sendModelToMaster()</highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"/></codeline>
<codeline lineno="462"><highlight class="normal"/></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME<sp/>-<sp/>send<sp/>this<sp/>to<sp/>the<sp/>correct<sp/>OUTPUT<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/>ASKAPDEBUGTRACE("JacalBPCalibrator::sendModelToMaster");</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/>ASKAPLOG_DEBUG_STR(logger,<sp/>"Sending<sp/>results<sp/>to<sp/>the<sp/>master");</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/>itsComms.notifyMaster();</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsModel);</highlight></codeline>
<codeline lineno="469"><highlight class="comment"/></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/>askapparallel::BlobOBufMW<sp/>bobmw(itsComms,<sp/>0);</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/>LOFAR::BlobOStream<sp/>out(bobmw);</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/>out.putStart("calmodel",<sp/>BPCALIBRATOR_PARALLEL_BLOB_STREAM_VERSION);</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>*itsModel;</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/>out.putEnd();</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/>bobmw.flush();</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>NEUtils::sendParams(itsModel,output(</highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"/></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"/></codeline>
<codeline lineno="485"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::receiveModelFromWorker()</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"/></codeline>
<codeline lineno="488"><highlight class="normal"/></codeline>
<codeline lineno="489"><highlight class="normal"/></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/>itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>NEUtils::receiveParams(itsModel,<sp/>input(</highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>THis<sp/>is<sp/>the<sp/>old<sp/>receive<sp/>once<sp/>the<sp/>above<sp/>works<sp/>-<sp/>just<sp/>remove<sp/>this</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/>//<sp/>wait<sp/>for<sp/>the<sp/>notification</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/>const<sp/>int<sp/>source<sp/>=<sp/>itsComms.waitForNotification().first;</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/>ASKAPLOG_DEBUG_STR(logger,<sp/>"Receiving<sp/>results<sp/>from<sp/>rank<sp/>"&lt;&lt;source);</highlight></codeline>
<codeline lineno="496"><highlight class="comment"/></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/>askapparallel::BlobIBufMW<sp/>bibmw(itsComms,<sp/>source);</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/>LOFAR::BlobIStream<sp/>in(bibmw);</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/>const<sp/>int<sp/>version<sp/>=<sp/>in.getStart("calmodel");</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/>ASKAPASSERT(version<sp/>==<sp/>BPCALIBRATOR_PARALLEL_BLOB_STREAM_VERSION);</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/>in<sp/>&gt;&gt;<sp/>*itsModel;</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/>in.getEnd();</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="504"><highlight class="normal"/></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"/></codeline>
<codeline lineno="507"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::receiveModelFromWorker(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>theInput)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"/></codeline>
<codeline lineno="510"><highlight class="normal"/></codeline>
<codeline lineno="511"><highlight class="normal"/></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/>itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/>NEUtils::receiveParams(itsModel,<sp/>input(theInput));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>THis<sp/>is<sp/>the<sp/>old<sp/>receive<sp/>once<sp/>the<sp/>above<sp/>works<sp/>-<sp/>just<sp/>remove<sp/>this</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/>//<sp/>wait<sp/>for<sp/>the<sp/>notification</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/>const<sp/>int<sp/>source<sp/>=<sp/>itsComms.waitForNotification().first;</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/>ASKAPLOG_DEBUG_STR(logger,<sp/>"Receiving<sp/>results<sp/>from<sp/>rank<sp/>"&lt;&lt;source);</highlight></codeline>
<codeline lineno="518"><highlight class="comment"/></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/>askapparallel::BlobIBufMW<sp/>bibmw(itsComms,<sp/>source);</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/>LOFAR::BlobIStream<sp/>in(bibmw);</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/>const<sp/>int<sp/>version<sp/>=<sp/>in.getStart("calmodel");</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/>ASKAPASSERT(version<sp/>==<sp/>BPCALIBRATOR_PARALLEL_BLOB_STREAM_VERSION);</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/>in<sp/>&gt;&gt;<sp/>*itsModel;</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/>in.getEnd();</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="526"><highlight class="normal"/></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"/></codeline>
<codeline lineno="532"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::calcNE()</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>ASKAPDEBUGASSERT(this-&gt;isWorker);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"/></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>new<sp/>instance<sp/>of<sp/>the<sp/>normal<sp/>equations<sp/>class</highlight><highlight class="normal"/></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>boost::shared_ptr&lt;scimath::GenericNormalEquations&gt;<sp/>gne(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::GenericNormalEquations);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>itsNe<sp/>=<sp/>gne;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"/></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>gridder<sp/>too</highlight><highlight class="normal"/></codeline>
<codeline lineno="541"><highlight class="normal"/></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>itsGridder<sp/>=<sp/>askap::synthesis::VisGridderFactory::make(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"/></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>ASKAPDEBUGASSERT(itsNe);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>ASKAPDEBUGASSERT(itsGridder);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"/></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>obtain<sp/>details<sp/>on<sp/>the<sp/>current<sp/>iteration,<sp/>i.e.<sp/>beam<sp/>and<sp/>channel</highlight><highlight class="normal"/></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>ASKAPDEBUGASSERT(itsWorkUnitIterator.hasMore());</highlight></codeline>
<codeline lineno="549"><highlight class="normal"/></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>is<sp/>beam,<sp/>second<sp/>is<sp/>channel</highlight><highlight class="normal"/></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;casacore::uInt,<sp/>casacore::uInt&gt;<sp/>indices<sp/>=<sp/>currentBeamAndChannel();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"/></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Processing<sp/>beam<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>indices.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>and<sp/>channel<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>indices.second);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"/></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>ASKAPDEBUGASSERT((measurementSets().size()<sp/>==<sp/>1)<sp/>||<sp/>(indices.first<sp/>&lt;<sp/>measurementSets().size()));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"/></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>ms<sp/>=<sp/>(measurementSets().size()<sp/>==<sp/>1<sp/>?<sp/>measurementSets()[0]<sp/>:<sp/>measurementSets()[indices.first]);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"/></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>computation</highlight><highlight class="normal"/></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>calcOne(ms,<sp/>indices.second,<sp/>indices.first);</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"/></codeline>
<codeline lineno="564"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::invalidateSolution()<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsModel);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/>itsModel-&gt;add(</highlight><highlight class="stringliteral">"invalid"</highlight><highlight class="normal">,1.);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/>itsModel-&gt;fix(</highlight><highlight class="stringliteral">"invalid"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"/></codeline>
<codeline lineno="570"><highlight class="normal"/></codeline>
<codeline lineno="573"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::solveNE()</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isWorker)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Solving<sp/>normal<sp/>equations"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsNe);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsNe-&gt;unknowns().size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"Normal<sp/>equations<sp/>are<sp/>empty<sp/>-<sp/>no<sp/>valid<sp/>data<sp/>found,<sp/>flagging<sp/>the<sp/>solution<sp/>as<sp/>bad"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidateSolution();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Timer<sp/>timer;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer.mark();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scimath::Quality<sp/>q;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsSolver);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsModel);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver-&gt;init();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver-&gt;addNormalEquations(*itsNe);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver-&gt;solveNormalEquations(*itsModel,q);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Solved<sp/>normal<sp/>equations<sp/>in<sp/>"</highlight><highlight class="normal">&lt;&lt;<sp/>timer.real()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>seconds<sp/>"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Solution<sp/>quality:<sp/>"</highlight><highlight class="normal">&lt;&lt;q);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"/></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minRank<sp/>=<sp/>this-&gt;parset().getUint32(</highlight><highlight class="stringliteral">"minrank"</highlight><highlight class="normal">,15u);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q.rank()<sp/>&lt;<sp/>minRank)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"Solution<sp/>failed<sp/>-<sp/>minimum<sp/>rank<sp/>is<sp/>"</highlight><highlight class="normal">&lt;&lt;minRank&lt;&lt;</highlight><highlight class="stringliteral">",<sp/>normal<sp/>matrix<sp/>has<sp/>rank<sp/>=<sp/>"</highlight><highlight class="normal">&lt;&lt;q.rank());</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidateSolution();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"/></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wasim<sp/>was<sp/>here</highlight><highlight class="normal"/></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(itsRefGain<sp/>!=<sp/>"")<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/>"Rotating<sp/>phases<sp/>to<sp/>have<sp/>that<sp/>of<sp/>"&lt;&lt;itsRefGain&lt;&lt;"<sp/>equal<sp/>to<sp/>0");</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotatePhases();</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsRefGainXX<sp/>!=<sp/></highlight><highlight class="stringliteral">""</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsRefGainXX<sp/>==<sp/>itsRefGainYY){</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Rotating<sp/>both<sp/>XX<sp/>and<sp/>YY<sp/>phases<sp/>to<sp/>have<sp/>that<sp/>of<sp/>"</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRefGainXX&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>equal<sp/>to<sp/>0"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Rotating<sp/>XX<sp/>phases<sp/>to<sp/>have<sp/>that<sp/>of<sp/>"</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRefGainXX&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>equal<sp/>to<sp/>0<sp/>and<sp/>YY<sp/>phases<sp/>to<sp/>have<sp/>that<sp/>of<sp/>"</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRefGainYY&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>equal<sp/>to<sp/>0"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotatePhases();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"/></codeline>
<codeline lineno="624"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::writeModel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;)</highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>ASKAPDEBUGASSERT(this-&gt;isMaster);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"/></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;casacore::uInt,<sp/>casacore::uInt&gt;<sp/>indices<sp/>=<sp/>currentBeamAndChannel();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"/></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Writing<sp/>results<sp/>of<sp/>the<sp/>calibration<sp/>for<sp/>beam="</highlight><highlight class="normal">&lt;&lt;indices.first&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>channel="</highlight><highlight class="normal">&lt;&lt;indices.second);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"/></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>ASKAPCHECK(itsSolutionSource,<sp/></highlight><highlight class="stringliteral">"Solution<sp/>source<sp/>has<sp/>to<sp/>be<sp/>defined<sp/>by<sp/>this<sp/>stage"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>boost::shared_ptr&lt;accessors::ICalSolutionAccessor&gt;<sp/>itsSolAcc<sp/>=<sp/>itsSolutionSource-&gt;rwSolution(itsSolutionID);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"/></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>ASKAPASSERT(itsSolAcc);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"/></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>ASKAPDEBUGASSERT(itsModel);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>parlist<sp/>=<sp/>itsModel-&gt;freeNames();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;std::string&gt;::const_iterator<sp/>it<sp/>=<sp/>parlist.begin();<sp/>it<sp/>!=<sp/>parlist.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::Complex<sp/>val<sp/>=<sp/>itsModel-&gt;complexValue(*it);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_DEBUG_STR(logger,</highlight><highlight class="stringliteral">"Value<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>val<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>Param<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"/></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;accessors::JonesIndex,<sp/>casacore::Stokes::StokesTypes&gt;<sp/>paramType<sp/>=</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::CalParamNameHelper::parseParam(*it);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>beam<sp/>is<sp/>also<sp/>coded<sp/>in<sp/>the<sp/>parameters,<sp/>although<sp/>we<sp/>don't<sp/>need<sp/>it<sp/>because<sp/>the<sp/>data<sp/>are<sp/>partitioned</highlight><highlight class="normal"/></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>cross-check<sp/>it</highlight><highlight class="normal"/></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(static_cast&lt;casacore::uInt&gt;(paramType.first.beam())<sp/>==<sp/>indices.first);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsSolAcc-&gt;setBandpassElement(paramType.first,<sp/>paramType.second,<sp/>indices.second,<sp/>val);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Done<sp/>writing<sp/>results<sp/>of<sp/>the<sp/>calibration<sp/>for<sp/>beam="</highlight><highlight class="normal">&lt;&lt;indices.first&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>channel="</highlight><highlight class="normal">&lt;&lt;indices.second);</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"/></codeline>
<codeline lineno="663"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::createCalibrationME(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>accessors::IDataSharedIter<sp/>&amp;dsi,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;synthesis::IMeasurementEquation<sp/>const&gt;<sp/>&amp;perfectME)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsModel);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/>ASKAPDEBUGASSERT(perfectME);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"/></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>handy<sp/>to<sp/>have<sp/>a<sp/>shared<sp/>pointer<sp/>to<sp/>the<sp/>base<sp/>type<sp/>because<sp/>it<sp/>is</highlight><highlight class="normal"/></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>templated</highlight><highlight class="normal"/></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/>boost::shared_ptr&lt;synthesis::PreAvgCalMEBase&gt;<sp/>preAvgME;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>as<sp/>normal<sp/>gains<sp/>(rather<sp/>than<sp/>bandpass)<sp/>because<sp/>only<sp/>one<sp/>channel<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>selected</highlight><highlight class="normal"/></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>also<sp/>opens<sp/>a<sp/>possibility<sp/>to<sp/>use<sp/>several<sp/>(e.g.<sp/>54<sp/>=<sp/>coarse<sp/>resolution)<sp/>channels<sp/>to<sp/>get<sp/>one<sp/>gain</highlight><highlight class="normal"/></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solution<sp/>which<sp/>is<sp/>then<sp/>replicated<sp/>to<sp/>all<sp/>channels<sp/>involved.<sp/>We<sp/>can<sp/>also<sp/>add<sp/>frequency-dependent<sp/>leakage,<sp/>if</highlight><highlight class="normal"/></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tests<sp/>show<sp/>it<sp/>is<sp/>required<sp/>(currently<sp/>it<sp/>is<sp/>not<sp/>in<sp/>the<sp/>calibration<sp/>model)</highlight><highlight class="normal"/></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/>preAvgME.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>synthesis::CalibrationME&lt;synthesis::NoXPolGain,<sp/>synthesis::PreAvgCalMEBase&gt;());</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/>ASKAPDEBUGASSERT(preAvgME);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"/></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/>ASKAPDEBUGASSERT(dsi.hasMore());</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/>preAvgME-&gt;accumulate(dsi,perfectME);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/>itsEquation<sp/>=<sp/>preAvgME;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"/></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>just<sp/>because<sp/>we<sp/>bypass<sp/>setting<sp/>the<sp/>model<sp/>for<sp/>the<sp/>first<sp/>major<sp/>cycle</highlight><highlight class="normal"/></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>case<sp/>without<sp/>pre-averaging</highlight><highlight class="normal"/></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/>itsEquation-&gt;setParameters(*itsModel);</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"/></codeline>
<codeline lineno="696"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::rotatePhases()</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>intention<sp/>is<sp/>to<sp/>rotate<sp/>phases<sp/>in<sp/>worker<sp/>(for<sp/>this<sp/>class)</highlight><highlight class="normal"/></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>ASKAPDEBUGASSERT(this-&gt;isWorker);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>ASKAPDEBUGASSERT(itsModel);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//wasim<sp/>was<sp/>here</highlight><highlight class="normal"/></codeline>
<codeline lineno="702"><highlight class="normal"><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/>ASKAPCHECK(itsModel-&gt;has(itsRefGain),<sp/>"phase<sp/>rotation<sp/>to<sp/>`"&lt;&lt;itsRefGain&lt;&lt;</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>"`<sp/>is<sp/>impossible<sp/>because<sp/>this<sp/>parameter<sp/>is<sp/>not<sp/>present<sp/>in<sp/>the<sp/>model");</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/>casacore::Complex<sp/><sp/>refPhaseTerm<sp/>=<sp/>casacore::polar(1.f,-arg(itsModel-&gt;complexValue(itsRefGain)));</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>ASKAPCHECK(itsModel-&gt;has(itsRefGainXX),<sp/></highlight><highlight class="stringliteral">"phase<sp/>rotation<sp/>to<sp/>`"</highlight><highlight class="normal">&lt;&lt;itsRefGainXX&lt;&lt;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"`<sp/>is<sp/>impossible<sp/>because<sp/>this<sp/>parameter<sp/>is<sp/>not<sp/>present<sp/>in<sp/>the<sp/>model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>ASKAPCHECK(itsModel-&gt;has(itsRefGainYY),<sp/></highlight><highlight class="stringliteral">"phase<sp/>rotation<sp/>to<sp/>`"</highlight><highlight class="normal">&lt;&lt;itsRefGainYY&lt;&lt;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"`<sp/>is<sp/>impossible<sp/>because<sp/>this<sp/>parameter<sp/>is<sp/>not<sp/>present<sp/>in<sp/>the<sp/>model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>casacore::Complex<sp/><sp/>refPhaseTermXX<sp/>=<sp/>casacore::polar(1.f,-arg(itsModel-&gt;complexValue(itsRefGainXX)));</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>casacore::Complex<sp/><sp/>refPhaseTermYY<sp/>=<sp/>casacore::polar(1.f,-arg(itsModel-&gt;complexValue(itsRefGainYY)));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>names(itsModel-&gt;freeNames());</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;std::string&gt;::const_iterator<sp/>it=names.begin();<sp/>it!=names.end();++it)<sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>parname<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wasim<sp/>was<sp/>here</highlight><highlight class="normal"/></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(parname.find("gain")<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;update(parname,<sp/>itsModel-&gt;complexValue(parname)<sp/>*<sp/>refPhaseTerm);</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parname.find(</highlight><highlight class="stringliteral">"gain.g11"</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;update(parname,<sp/>itsModel-&gt;complexValue(parname)<sp/>*<sp/>refPhaseTermXX);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parname.find(</highlight><highlight class="stringliteral">"gain.g22"</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;update(parname,<sp/>itsModel-&gt;complexValue(parname)<sp/>*<sp/>refPhaseTermYY);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"/></codeline>
<codeline lineno="738"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>JacalBPCalibrator::solutionTime()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="739"><highlight class="keyword"/><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>earliest<sp/>time<sp/>corresponding<sp/>to<sp/>the<sp/>data<sp/>used<sp/>to<sp/>make<sp/>this<sp/>calibration<sp/>solution</highlight><highlight class="normal"/></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>tag<sp/>the<sp/>solution.<sp/>A<sp/>request<sp/>for<sp/>any<sp/>latest<sp/>time<sp/>than<sp/>this<sp/>would<sp/>automatically</highlight><highlight class="normal"/></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>this<sp/>solution<sp/>as<sp/>most<sp/>recent.</highlight><highlight class="normal"/></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>ASKAPASSERT(itsNe);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"/></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>boost::shared_ptr&lt;scimath::GenericNormalEquations&gt;<sp/>gne<sp/>=<sp/>boost::dynamic_pointer_cast&lt;scimath::GenericNormalEquations&gt;(itsNe);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gne)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scimath::Params&amp;<sp/>metadata<sp/>=<sp/>gne-&gt;metadata();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata.has(</highlight><highlight class="stringliteral">"min_time"</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metadata.scalarValue(</highlight><highlight class="stringliteral">"min_time"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"/></codeline>
<codeline lineno="759"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::calcOne(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>ms,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::uInt<sp/>chan,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::uInt<sp/>beam)</highlight></codeline>
<codeline lineno="760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>casacore::Timer<sp/>timer;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>timer.mark();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Calculating<sp/>normal<sp/>equations<sp/>for<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ms<sp/>&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>channel<sp/>"</highlight><highlight class="normal">&lt;&lt;chan&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>beam<sp/>"</highlight><highlight class="normal">&lt;&lt;beam);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>time<sp/>around<sp/>we<sp/>need<sp/>to<sp/>generate<sp/>the<sp/>equation</highlight><highlight class="normal"/></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itsEquation)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Creating<sp/>measurement<sp/>equation"</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Creating<sp/>table<sp/>data<sp/>source"</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accessors::TableDataSource<sp/>ds(ms,<sp/>accessors::TableDataSource::DEFAULT,<sp/>dataColumn());</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Creating<sp/>selector<sp/>from<sp/>parset"</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataSelectorPtr<sp/>sel=ds.createSelector();</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sel<sp/>&lt;&lt;<sp/>this-&gt;parset();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sel-&gt;chooseChannels(1,chan);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sel-&gt;chooseFeed(beam);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Creating<sp/>converter<sp/>for<sp/>selector"</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataConverterPtr<sp/>conv=ds.createConverter();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setFrequencyFrame(casacore::MFrequency::Ref(casacore::MFrequency::TOPO),<sp/></highlight><highlight class="stringliteral">"Hz"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setDirectionFrame(casacore::MDirection::Ref(casacore::MDirection::J2000));</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>that<sp/>time<sp/>is<sp/>counted<sp/>in<sp/>seconds<sp/>since<sp/>0<sp/>MJD</highlight><highlight class="normal"/></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setEpochFrame();</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Creating<sp/>iterator"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"/></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataSharedIter<sp/>it=ds.createIterator(sel,<sp/>conv);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(it.hasMore(),<sp/></highlight><highlight class="stringliteral">"No<sp/>data<sp/>seem<sp/>to<sp/>be<sp/>available<sp/>for<sp/>channel<sp/>"</highlight><highlight class="normal">&lt;&lt;chan&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>and<sp/>beam<sp/>"</highlight><highlight class="normal">&lt;&lt;beam);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"/></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(itsModel,<sp/></highlight><highlight class="stringliteral">"Initial<sp/>assumption<sp/>of<sp/>parameters<sp/>is<sp/>not<sp/>defined"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"/></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itsPerfectME)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Constructing<sp/>measurement<sp/>equation<sp/>corresponding<sp/>to<sp/>the<sp/>uncorrupted<sp/>model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(itsPerfectModel,<sp/></highlight><highlight class="stringliteral">"Uncorrupted<sp/>model<sp/>not<sp/>defined"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(synthesis::SynthesisParamsHelper::hasImage(itsPerfectModel))<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(!synthesis::SynthesisParamsHelper::hasComponent(itsPerfectModel),</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"Image<sp/>+<sp/>component<sp/>case<sp/>has<sp/>not<sp/>yet<sp/>been<sp/>implemented"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>to<sp/>create<sp/>an<sp/>image-specific<sp/>equation</highlight><highlight class="normal"/></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;synthesis::ImagingEquationAdapter&gt;<sp/>ieAdapter(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>synthesis::ImagingEquationAdapter);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(itsGridder,<sp/></highlight><highlight class="stringliteral">"Gridder<sp/>not<sp/>defined"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ieAdapter-&gt;assign&lt;synthesis::ImageFFTEquation&gt;(*itsPerfectModel,<sp/>itsGridder);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsPerfectME<sp/>=<sp/>ieAdapter;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>model<sp/>is<sp/>a<sp/>number<sp/>of<sp/>components,<sp/>don't<sp/>need<sp/>an<sp/>adapter<sp/>here</highlight><highlight class="normal"/></codeline>
<codeline lineno="802"><highlight class="normal"/></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>doesn't<sp/>matter<sp/>which<sp/>iterator<sp/>is<sp/>passed<sp/>below.<sp/>It<sp/>is<sp/>not<sp/>used</highlight><highlight class="normal"/></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;synthesis::ComponentEquation&gt;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compEq(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>synthesis::ComponentEquation(*itsPerfectModel,it));</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsPerfectME<sp/>=<sp/>compEq;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>could've<sp/>used<sp/>class<sp/>data<sp/>members<sp/>directly<sp/>instead<sp/>of<sp/>passing<sp/>them<sp/>to<sp/>createCalibrationME</highlight><highlight class="normal"/></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>createCalibrationME(it,itsPerfectME);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(itsEquation,<sp/></highlight><highlight class="stringliteral">"Equation<sp/>is<sp/>not<sp/>defined"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Reusing<sp/>measurement<sp/>equation"</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>update<sp/>the<sp/>model<sp/>held<sp/>by<sp/>measurement<sp/>equation</highlight><highlight class="normal"/></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>it<sp/>has<sp/>been<sp/>cloned<sp/>at<sp/>construction</highlight><highlight class="normal"/></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(itsEquation,<sp/></highlight><highlight class="stringliteral">"Equation<sp/>is<sp/>not<sp/>defined"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(itsModel,<sp/></highlight><highlight class="stringliteral">"Model<sp/>is<sp/>not<sp/>defined"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsEquation-&gt;setParameters(*itsModel);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>ASKAPCHECK(itsNe,<sp/></highlight><highlight class="stringliteral">"NormalEquations<sp/>are<sp/>not<sp/>defined"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>itsEquation-&gt;calcEquations(*itsNe);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Calculated<sp/>normal<sp/>equations<sp/>for<sp/>"</highlight><highlight class="normal">&lt;&lt;<sp/>ms<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>channel<sp/>"</highlight><highlight class="normal">&lt;&lt;chan&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>beam<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;beam&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>in<sp/>"</highlight><highlight class="normal">&lt;&lt;<sp/>timer.real()</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>seconds<sp/>"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"/></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"/></codeline>
<codeline lineno="830"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JacalBPCalibrator::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"/></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"/></codeline>
<codeline lineno="835"><highlight class="normal"/></codeline>
<codeline lineno="836"><highlight class="normal"/></codeline>
<codeline lineno="837"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/JacalBPCalibrator.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="JacalBPCalibrator_8h" kind="file" language="C++">
    <compoundname>JacalBPCalibrator.h</compoundname>
    <innerclass refid="classaskap_1_1JacalBPCalibrator" prot="public">askap::JacalBPCalibrator</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>JacalBPCalibrator: part of the specialised tool to do optimised bandpass calibration with limited functionality.</para><para><simplesect kind="copyright"><para>(c) 2018 CSIRO Australia Telescope National Facility (ATNF) Commonwealth Scientific and Industrial Research Organisation (CSIRO) PO Box 76, Epping NSW 1710, Australia <ulink url="mailto:atnf-enquiries@csiro.au">atnf-enquiries@csiro.au</ulink></para></simplesect>
This file is part of the JACAL software distribution.</para><para><simplesect kind="author"><para>Stephen Ord <ulink url="mailto:stephen.ord@csiro.au">stephen.ord@csiro.au</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_BP_CALIBRATOR_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_BP_CALIBRATOR_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="comment">//<sp/>own<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"<ref refid="NEUtils_8h" kindref="compound">NEUtils.h</ref>"</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="comment">//<sp/>askap<sp/>ones</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askapparallel/AskapParallel.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/MEParallelApp.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/IMeasurementEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;calibaccess/ICalSolutionSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;utils/MultiDimPosIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="comment">//<sp/>std<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="comment">//<sp/>boost<sp/>includes</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48" refid="classaskap_1_1JacalBPCalibrator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1JacalBPCalibrator" kindref="compound">JacalBPCalibrator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;JacalBPCalibrator&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1JacalBPCalibrator_1a117c1878d3d684910ec9b8732d8fa706" kindref="member">JacalBPCalibrator</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"JacalBPCalibrator"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1JacalBPCalibrator_1a4013f9a29cac8dfd1a41fb1c896b443c" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1JacalBPCalibrator_1a83eb45b3ee4a0507bc94f6e128e43a9b" kindref="member">run</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>set</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet&amp;<sp/>parset()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itsParset;}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>Meaasurement<sp/>Set<sp/>Vector</highlight><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMeasurementSets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>ms)<sp/>{<sp/>itsMs<sp/>=<sp/>ms;}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>measurementSets()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itsMs;}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>methods<sp/>of<sp/>the<sp/>abstract<sp/>base,<sp/>define<sp/>them<sp/>as<sp/>protected<sp/>because<sp/>they</highlight><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>no<sp/>longer<sp/>supposed<sp/>to<sp/>be<sp/>called<sp/>directly<sp/>from<sp/>the<sp/>application<sp/>level</highlight><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1JacalBPCalibrator_1ae82ef4391be535bdce8cae8a71dc686d" kindref="member">calcNE</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1JacalBPCalibrator_1adaf500fef2e24498a3ec41349463b8a4" kindref="member">solveNE</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1JacalBPCalibrator_1a740de3dd4fbc08140a22df036c1b9309" kindref="member">writeModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;postfix<sp/>=<sp/>std::string());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1JacalBPCalibrator_1a43f3df335173c7e71f2ebb953636a502" kindref="member">createCalibrationME</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>accessors::IDataSharedIter<sp/>&amp;dsi,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;synthesis::IMeasurementEquation<sp/>const&gt;<sp/>&amp;perfectME);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1JacalBPCalibrator_1aa309613c3b85900a1a5a1f2057feb0dd" kindref="member">rotatePhases</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1JacalBPCalibrator_1a551d04ab7b78bfc2cff01e232c2c43a4" kindref="member">solutionTime</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet<sp/>emptyDatasetKeyword(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet<sp/>&amp;parset);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"/></codeline>
<codeline lineno="139"><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readModels()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="classaskap_1_1NEUtils_1ab8a3a4fd387a08fbbf2fba61d220da77" kindref="member">NEUtils::readModels</ref>(itsParset,itsPerfectModel);<sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>casacore::uInt<sp/>nAnt()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parset().getInt32(</highlight><highlight class="stringliteral">"nAnt"</highlight><highlight class="normal">,<sp/>36);<sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>casacore::uInt<sp/>nBeam()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parset().getInt32(</highlight><highlight class="stringliteral">"nBeam"</highlight><highlight class="normal">,<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>casacore::uInt<sp/>nChan()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parset().getInt32(</highlight><highlight class="stringliteral">"nChan"</highlight><highlight class="normal">,<sp/>304);<sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"/></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>casacore::uInt<sp/>nChanPerRank()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parset().getInt32(</highlight><highlight class="stringliteral">"nChanPerRank"</highlight><highlight class="normal">,<sp/>54);<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"/></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>dataColumn()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;itsParset.getString(</highlight><highlight class="stringliteral">"datacolumn"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"DATA"</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;casacore::uInt,<sp/>casacore::uInt&gt;<sp/>currentBeamAndChannel()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"/></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>invalidateSolution();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"/></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>validSolution()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calcOne(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>ms,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::uInt<sp/>chan,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::uInt<sp/>beam);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"/></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sendModelToMaster();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"/></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>receiveModelFromWorker();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>receiveModelFromWorker(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"/></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Params::ShPtr<sp/>itsPerfectModel;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itsRefAntenna;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"/></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wasim<sp/>was<sp/>here</highlight><highlight class="normal"/></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>itsRefGain;</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>itsRefGainXX;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>itsRefGainYY;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;accessors::ICalSolutionSource&gt;<sp/>itsSolutionSource;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"/></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"/></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;synthesis::IMeasurementEquation<sp/>const&gt;<sp/>itsPerfectME;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scimath::MultiDimPosIter<sp/>itsWorkUnitIterator;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"/></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>itsSolutionID;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"/></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>itsSolutionIDValid;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"/></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>set</highlight><highlight class="normal"/></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>itsParset;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"/></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>channel<sp/>number<sp/>we<sp/>are<sp/>Solving</highlight><highlight class="normal"/></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itsChan;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"/></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>beam<sp/>we<sp/>are<sp/>solving</highlight><highlight class="normal"/></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itsBeam;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"/></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bool<sp/>flag<sp/>for<sp/>whether<sp/>we<sp/>are<sp/>the<sp/>Master<sp/>or<sp/>Worker.<sp/>I've<sp/>kept<sp/>some<sp/>of<sp/>the<sp/>MPIComms<sp/>ideas</highlight><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probably<sp/>not<sp/>ideal<sp/>-<sp/>but<sp/>it<sp/>gets<sp/>us<sp/>into<sp/>the<sp/>drops<sp/>refPhaseTerm</highlight><highlight class="normal"/></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMaster;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isWorker;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isParallel;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>should<sp/>use<sp/>these<sp/>to<sp/>make<sp/>the<sp/>drop<sp/>smaller</highlight><highlight class="normal"/></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>casacore::IPosition<sp/>freqInterval;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>casacore::IPosition<sp/>timeInterval;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"/></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Measurement<sp/>sets</highlight><highlight class="normal"/></codeline>
<codeline lineno="264"><highlight class="normal"/></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>itsMs;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"/></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>Solver</highlight><highlight class="normal"/></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Solver::ShPtr<sp/>itsSolver;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"/></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Equation::ShPtr<sp/>itsEquation;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"/></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Params::ShPtr<sp/>itsModel;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::INormalEquations::ShPtr<sp/>itsNe;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"/></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>askap::synthesis::IVisGridder::ShPtr<sp/>itsGridder;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"/></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>itsModelInputs;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"/></codeline>
<codeline lineno="280"><highlight class="normal"/></codeline>
<codeline lineno="281"><highlight class="normal"/></codeline>
<codeline lineno="282"><highlight class="normal"/></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="284"><highlight class="normal"/></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"/></codeline>
<codeline lineno="287"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>#ifndef<sp/>ASKAP_SYNTHESIS_BP_CALIBRATOR_PARALLEL_H</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/JacalBPCalibrator.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="LoadNE_8cc" kind="file" language="C++">
    <compoundname>LoadNE.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Derived from DaliugeApplication @ details Implements a test method that uses the contents of the the parset to load in a measurement set and print a summary of its contents </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>for<sp/>logging</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"LoadNE"</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1a392ef14bd11a2eaf8f6638d269681933" kindref="member">getAskapPackageVersion_LoadNE</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"LoadNE"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_LoadNE()</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LoadNE_8h" kindref="compound">factory/LoadNE.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="comment">//<sp/>Data<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableConstDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IConstDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataSelector.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>LoadNE::LoadNE(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>LoadNE::~LoadNE()<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>LoadNE::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LoadNE::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LoadNE(raw_app));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1LoadNE_1a01e9bb86833223440b77d322af9a55ed" kindref="member">LoadNE::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LoadNE::run()<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"/></codeline>
<codeline lineno="114"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>safety;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::ImagingNormalEquations::ShPtr<sp/>itsNe<sp/>=<sp/>askap::scimath::ImagingNormalEquations::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>askap::scimath::ImagingNormalEquations());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"/></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::receiveNE(itsNe,<sp/>input(0));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>toFitParams<sp/>=<sp/>itsNe-&gt;unknowns();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>iter2<sp/>=<sp/>toFitParams.begin();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iter2<sp/>!=<sp/>toFitParams.end();<sp/>iter2++)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"/></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Param<sp/>name:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*iter2);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadNE::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadNE::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/LoadNE.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="LoadNE_8h" kind="file" language="C++">
    <compoundname>LoadNE.h</compoundname>
    <innerclass refid="classaskap_1_1LoadNE" prot="public">askap::LoadNE</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"/>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_LOADNE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_LOADNE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/MVDirection.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="30" refid="classaskap_1_1LoadNE" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1LoadNE" kindref="compound">LoadNE</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;LoadNE&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1LoadNE" kindref="compound">LoadNE</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"LoadNE"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1LoadNE" kindref="compound">LoadNE</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1LoadNE_1a01e9bb86833223440b77d322af9a55ed" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utility<sp/>to<sp/>build<sp/>an<sp/>Imaging<sp/>Normal<sp/>Equation<sp/>from<sp/>a<sp/>parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>buildNE();</highlight><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>steps<sp/>required<sp/>by<sp/>buildNE</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/LoadNE.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="LoadParset_8cc" kind="file" language="C++">
    <compoundname>LoadParset.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LoadParset_8h" kindref="compound">factory/LoadParset.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>LoadParset::LoadParset(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>LoadParset::~LoadParset()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>LoadParset::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LoadParset::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LoadParset(raw_app));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1LoadParset_1a5c6e6c83bd5251c36b4b820412b170ca" kindref="member">LoadParset::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no-op</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LoadParset::run()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>open<sp/>the<sp/>input<sp/>and<sp/>read<sp/>it</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>input(0).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>it<sp/>to<sp/>the<sp/>outputs</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_outputs();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(i).write(buf,<sp/>n_read);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadParset::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadParset::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/LoadParset.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="LoadParset_8h" kind="file" language="C++">
    <compoundname>LoadParset.h</compoundname>
    <innerclass refid="classaskap_1_1LoadParset" prot="public">askap::LoadParset</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"/>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_LOADPARSET_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_LOADPARSET_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="22" refid="classaskap_1_1LoadParset" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1LoadParset" kindref="compound">LoadParset</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;LoadParset&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1LoadParset" kindref="compound">LoadParset</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"LoadParset"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1LoadParset" kindref="compound">LoadParset</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1LoadParset_1a5c6e6c83bd5251c36b4b820412b170ca" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/LoadParset.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="LoadVis_8cc" kind="file" language="C++">
    <compoundname>LoadVis.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Loads a visibility set grids it onto the UV plane and FFTs the grid @ details </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>for<sp/>logging</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"LoadVis"</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="12"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1ac8c1996be4146d9fb17e38a42571456d" kindref="member">getAskapPackageVersion_LoadVis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"LoadVis;<sp/>ASKAPsoft==Unknown"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_LoadVis()</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LoadVis_8h" kindref="compound">factory/LoadVis.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="comment">//<sp/>Data<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableConstDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IConstDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataSelector.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>LoadVis::LoadVis(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsChan<sp/>=<sp/>NEUtils::getChan(raw_app-&gt;uid);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;itsChan<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsChan<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>LoadVis::~LoadVis()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>LoadVis::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LoadVis::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LoadVis(raw_app));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1LoadVis_1a457b6e83405798b5266ae3dd0dd76f2b" kindref="member">LoadVis::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Argument<sp/>parsing<sp/>is<sp/>not<sp/>working<sp/>as<sp/>yet</highlight><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"/></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parset_filename<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>params<sp/>I<sp/>might<sp/>need<sp/>go<sp/>here:</highlight><highlight class="normal"/></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filename:</highlight><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>longer<sp/>required<sp/>as<sp/>input<sp/>comes<sp/>from<sp/>daliuge<sp/>now</highlight><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(strcmp(param[0],<sp/>"parset_filename")<sp/>==<sp/>0)<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>parset_filename<sp/>=<sp/>strdup(param[1]);</highlight><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"/></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>FIXME:</highlight><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>This<sp/>should<sp/>be<sp/>here<sp/>but<sp/>I<sp/>could<sp/>not<sp/>get<sp/>a<sp/>boost<sp/>smart<sp/>pointer<sp/>to<sp/>work</highlight><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>to_app_data(app)-&gt;parset.reset(<sp/>new<sp/>LOFAR::ParameterSet(parset_filename));</highlight><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:</highlight><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arbitrarily<sp/>setting<sp/>frequency<sp/>selection<sp/>to<sp/>1</highlight><highlight class="normal"/></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;freqInterval<sp/>=<sp/>casacore::IPosition(2,0);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;timeInterval<sp/>=<sp/>casacore::IPosition(2,0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;freqInterval[0]<sp/>=<sp/>this-&gt;itsChan;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;freqInterval[1]<sp/>=<sp/>this-&gt;itsChan+1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1LoadVis_1a702b9675ad4047c1b76cb6794e772841" kindref="member">LoadVis::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>safety;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>input(</highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_read<sp/>==<sp/>64*1024)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_read--;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[n_read]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"/></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>parset.makeSubset(</highlight><highlight class="stringliteral">"Cimager."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>fill<sp/>the<sp/>local<sp/>parset<sp/>with<sp/>parameters<sp/>that<sp/>maybe<sp/>missing</highlight><highlight class="normal"/></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>NEUtils::addMissingParameters(this-&gt;itsParset,<sp/>this-&gt;itsChan);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>colName<sp/>=<sp/>this-&gt;itsParset.getString(</highlight><highlight class="stringliteral">"datacolumn"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"DATA"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;std::string&gt;<sp/>ms<sp/>=<sp/>this-&gt;getDatasets(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>look<sp/>at<sp/>the<sp/>model</highlight><highlight class="normal"/></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::ImagingNormalEquations::ShPtr<sp/>itsNe;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::synthesis::IVisGridder::ShPtr<sp/>itsGridder;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Initializing<sp/>the<sp/>model<sp/>images"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"/></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::receiveParams(itsModel,<sp/>input(</highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Failed<sp/>to<sp/>receive<sp/>model<sp/>setting<sp/>up<sp/>empty<sp/>one"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::synthesis::SynthesisParamsHelper::setUpImages(itsModel,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset.makeSubset(</highlight><highlight class="stringliteral">"Images."</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"/></codeline>
<codeline lineno="190"><highlight class="normal"/></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Current<sp/>model<sp/>held<sp/>by<sp/>the<sp/>drop:<sp/>"</highlight><highlight class="normal">&lt;&lt;*itsModel);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"/></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>build<sp/>a<sp/>gridder</highlight><highlight class="normal"/></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsGridder<sp/>=<sp/>askap::synthesis::VisGridderFactory::make(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NE</highlight><highlight class="normal"/></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsNe<sp/>=<sp/>askap::scimath::ImagingNormalEquations::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>askap::scimath::ImagingNormalEquations(*itsModel));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"/></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"/></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>cant<sp/>make<sp/>the<sp/>gridder<sp/>smart<sp/>funciton<sp/>a<sp/>member<sp/>funtion<sp/>as<sp/>I<sp/>cannot<sp/>instantiate<sp/>it<sp/>until<sp/>I<sp/>have<sp/>a<sp/>parset.</highlight><highlight class="normal"/></codeline>
<codeline lineno="202"><highlight class="normal"/></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>iter<sp/>=<sp/>ms.begin();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"/></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iter<sp/>!=<sp/>ms.end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"/></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Processing<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*iter);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::TableDataSource<sp/>ds(*iter,<sp/>accessors::TableDataSource::DEFAULT,<sp/>colName);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"/></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>data<sp/>selector<sp/>for<sp/>the<sp/>measurement<sp/>set</highlight><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataSelectorPtr<sp/>sel<sp/>=<sp/>ds.createSelector();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"/></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel-&gt;chooseCrossCorrelations();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel-&gt;chooseChannels(1,<sp/>this-&gt;freqInterval[0]);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Use<sp/>time<sp/>interval<sp/>and<sp/>perhaps<sp/>beam?</highlight><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"/></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataConverterPtr<sp/>conv<sp/>=<sp/>ds.createConverter();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setFrequencyFrame(casacore::MFrequency::Ref(casacore::MFrequency::TOPO),<sp/></highlight><highlight class="stringliteral">"Hz"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setDirectionFrame(casacore::MDirection::Ref(casacore::MDirection::J2000));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setEpochFrame();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataSharedIter<sp/>it<sp/>=<sp/>ds.createIterator(sel,<sp/>conv);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>define<sp/>an<sp/>empty<sp/>model<sp/>(or<sp/>pick<sp/>one<sp/>up<sp/>from<sp/>the<sp/>parset)</highlight><highlight class="normal"/></codeline>
<codeline lineno="231"><highlight class="normal"/></codeline>
<codeline lineno="232"><highlight class="normal"/></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Not<sp/>applying<sp/>calibration"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"building<sp/>FFT/measurement<sp/>equation"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;askap::synthesis::ImageFFTEquation&gt;<sp/>fftEquation(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>askap::synthesis::ImageFFTEquation<sp/>(*itsModel,<sp/>it,<sp/>itsGridder));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(fftEquation);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftEquation-&gt;useAlternativePSF(itsParset);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>this<sp/>to<sp/>an<sp/>empty<sp/>pointer<sp/>-<sp/>no<sp/>aggregation<sp/>across<sp/>groups<sp/>for<sp/>this</highlight><highlight class="normal"/></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fftEquation-&gt;setVisUpdateObject(boost::shared_ptr&lt;askap::synthesis::GroupVisAggregator&gt;());</highlight><highlight class="normal"/></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"calculating<sp/>Imaging<sp/>Normal<sp/>Equations"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"/></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Equation</highlight><highlight class="normal"/></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Equation::ShPtr<sp/>itsEquation<sp/>=<sp/>fftEquation;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsEquation-&gt;calcEquations(*itsNe);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"/></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>dump<sp/>out<sp/>some<sp/>images</highlight><highlight class="normal"/></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"sending<sp/>data<sp/>to<sp/>the<sp/>output<sp/>port<sp/>'Normal'"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::sendNE(itsNe,<sp/>output(</highlight><highlight class="stringliteral">"Normal"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>am<sp/>going<sp/>to<sp/>assume<sp/>a<sp/>single<sp/>Ne<sp/>output<sp/>-<sp/>even<sp/>though<sp/>I<sp/>am<sp/>not</highlight><highlight class="normal"/></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>merging<sp/>in<sp/>the<sp/>above<sp/>loop<sp/>-<sp/>I<sp/>should<sp/>tho.</highlight><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"/></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>just<sp/>to<sp/>test<sp/>whether<sp/>this<sp/>works<sp/>at<sp/>all.</highlight><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"/></codeline>
<codeline lineno="257"><highlight class="normal"/></codeline>
<codeline lineno="258"><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"/></codeline>
<codeline lineno="262"><highlight class="normal"/></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadVis::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"/></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadVis::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"/></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"/></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>LoadVis::getDatasets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet&amp;<sp/>parset)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parset.isDefined(</highlight><highlight class="stringliteral">"dataset"</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>parset.isDefined(</highlight><highlight class="stringliteral">"dataset0"</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPTHROW(std::runtime_error,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"Both<sp/>dataset<sp/>and<sp/>dataset0<sp/>are<sp/>specified<sp/>in<sp/>the<sp/>parset"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"/></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>look<sp/>for<sp/>"dataset"<sp/>and<sp/>if<sp/>that<sp/>does<sp/>not<sp/>exist<sp/>try<sp/>"dataset0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>ms;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parset.isDefined(</highlight><highlight class="stringliteral">"dataset"</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms<sp/>=<sp/>parset.getStringVector(</highlight><highlight class="stringliteral">"dataset"</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key<sp/>=<sp/></highlight><highlight class="stringliteral">"dataset0"</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>key<sp/>to<sp/>look<sp/>for</highlight><highlight class="normal"/></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parset.isDefined(key))<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>parset.getString(key);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms.push_back(value);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"/></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"dataset"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>ss.str();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++idx;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"/></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ms;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"/></codeline>
<codeline lineno="300"><highlight class="normal"/></codeline>
<codeline lineno="301"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/LoadVis.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="LoadVis_8h" kind="file" language="C++">
    <compoundname>LoadVis.h</compoundname>
    <innerclass refid="classaskap_1_1LoadVis" prot="public">askap::LoadVis</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
<para>Load a CASA Measurement Set in the DaliugeApplication Framework. </para>    </briefdescription>
    <detaileddescription>
<para>*/ ``` or ```python /## #</para><para><programlisting><codeline><highlight class="normal">###<sp/>**Description**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">A<sp/>brief<sp/>description<sp/>of<sp/>the<sp/>purpose<sp/>of<sp/>this<sp/>component. A<sp/>detailed<sp/>description<sp/>is<sp/>also<sp/>included<sp/>here.</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```c++</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">**<sp/></highlight></codeline>
<codeline/>
<codeline><highlight class="normal">We<sp/>will<sp/>build<sp/>on<sp/>the<sp/>LoadParset<sp/>structure<sp/>-<sp/>but<sp/>use<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>parset<sp/>to<sp/>load<sp/>a<sp/>measurement<sp/>set.</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">/##</highlight></codeline>
<codeline><highlight class="normal">#Load<sp/>a<sp/>CASA<sp/>Measurement<sp/>Set<sp/>in<sp/>the<sp/>DaliugeApplication<sp/>Framework</highlight></codeline>
<codeline><highlight class="normal">#</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">We<sp/>will<sp/>build<sp/>on<sp/>the<sp/>LoadParset<sp/>structure<sp/>-<sp/>but<sp/>use<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>parset<sp/>to<sp/>load<sp/>a<sp/>measurement<sp/>set.</highlight></codeline>
</programlisting> <heading level="3">Location</heading>
</para><para>The location of the file that generated this component description. Contains repository location, file path within repository and git commit hash. </para><para>Note: the value of  will be substituted at run-time.</para><para><programlisting><codeline><highlight class="normal">{c++}</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param<sp/>gitrepo<sp/>$(GIT_REPO)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
</programlisting> ### <programlisting><codeline><highlight class="normal">/##</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param<sp/>gitrepo<sp/>$(GIT_REPO)</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_END</highlight></codeline>
</programlisting> <heading level="3">**Version**</heading>
</para><para>The version of the code file. </para><para>Note: the value of 087ed04 will be substituted at run-time, and also give value to PROJECT_NUMBER in the Doxygen configuration file "Doxyfile" ( PROJECT_NUMBER = 087ed04 ).</para><para><programlisting><codeline><highlight class="normal">{c++}</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param<sp/>version<sp/>$(PROJECT_VERSION)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">/##</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param<sp/>version<sp/>$(PROJECT_VERSION)</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_END</highlight></codeline>
</programlisting> <heading level="3">**Category**</heading>
</para><para>DynlibApp, DynlibProcApp, PythonApp, BashShellApp</para><para><programlisting><codeline><highlight class="normal">{c++}</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param<sp/>category<sp/>DynlibApp</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
</programlisting> ## <programlisting><codeline><highlight class="normal">/##</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param<sp/>category<sp/>DynlibApp</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_END</highlight></codeline>
</programlisting> <heading level="2">Parameters (Fields)</heading>
</para><para><heading level="3">**Name, Description, Direction, Default Value, Data Type**</heading>
</para><para>The pattern is:</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"/>
<codeline lineno="6"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_LOADVIS_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_LOADVIS_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/MVDirection.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAPSoft<sp/>data<sp/>accessor</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="32" refid="classaskap_1_1LoadVis" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1LoadVis" kindref="compound">LoadVis</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;LoadVis&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1LoadVis" kindref="compound">LoadVis</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"LoadVis"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1LoadVis" kindref="compound">LoadVis</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1LoadVis_1a457b6e83405798b5266ae3dd0dd76f2b" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1LoadVis_1a702b9675ad4047c1b76cb6794e772841" kindref="member">run</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>getDatasets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet&amp;<sp/>parset);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Params::ShPtr<sp/>itsModel;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>set</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>itsParset;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>channel<sp/>of<sp/>data</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::IPosition<sp/>freqInterval;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::IPosition<sp/>timeInterval;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>tangent<sp/>point</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;casacore::MVDirection&gt;<sp/>itsTangent;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itsChan;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utility<sp/>to<sp/>build<sp/>an<sp/>Imaging<sp/>Normal<sp/>Equation<sp/>from<sp/>a<sp/>parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>buildNE();</highlight><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>steps<sp/>required<sp/>by<sp/>buildNE</highlight><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/LoadVis.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="MajorCycle_8cc" kind="file" language="C++">
    <compoundname>MajorCycle.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Loads a visibility set grids it onto the UV plane and FFTs the grid @ details </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>for<sp/>logging</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"MajorCycle"</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="12"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1a8687bad6dc09af6ccb8447cc92f234d1" kindref="member">getAskapPackageVersion_MajorCycle</ref>()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"MajorCycle;<sp/>ASKAPsoft==Unknown"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_MajorCycle()</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="MajorCycle_8h" kindref="compound">factory/MajorCycle.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="comment">//<sp/>Data<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableConstDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IConstDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataSelector.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>MajorCycle::MajorCycle(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsChan<sp/>=<sp/>NEUtils::getChan(raw_app-&gt;uid);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;itsChan<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsChan<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>MajorCycle::~MajorCycle()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>MajorCycle::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MajorCycle::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MajorCycle(raw_app));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1MajorCycle_1a65db2521a701c58c64e63ea46e849fa2" kindref="member">MajorCycle::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Argument<sp/>parsing<sp/>is<sp/>not<sp/>working<sp/>as<sp/>yet</highlight><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"/></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parset_filename<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>params<sp/>I<sp/>might<sp/>need<sp/>go<sp/>here:</highlight><highlight class="normal"/></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filename:</highlight><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>longer<sp/>required<sp/>as<sp/>input<sp/>comes<sp/>from<sp/>daliuge<sp/>now</highlight><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(strcmp(param[0],<sp/>"parset_filename")<sp/>==<sp/>0)<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>parset_filename<sp/>=<sp/>strdup(param[1]);</highlight><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"/></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>FIXME:</highlight><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>This<sp/>should<sp/>be<sp/>here<sp/>but<sp/>I<sp/>could<sp/>not<sp/>get<sp/>a<sp/>boost<sp/>smart<sp/>pointer<sp/>to<sp/>work</highlight><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>to_app_data(app)-&gt;parset.reset(<sp/>new<sp/>LOFAR::ParameterSet(parset_filename));</highlight><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:</highlight><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arbitrarily<sp/>setting<sp/>frequency<sp/>selection<sp/>to<sp/>1</highlight><highlight class="normal"/></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;freqInterval<sp/>=<sp/>casacore::IPosition(2,0);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;timeInterval<sp/>=<sp/>casacore::IPosition(2,0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;freqInterval[0]<sp/>=<sp/>this-&gt;itsChan;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;freqInterval[1]<sp/>=<sp/>this-&gt;itsChan+1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1MajorCycle_1ae618bdf8100d7fc83907d42fb49f332b" kindref="member">MajorCycle::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>safety;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>input(</highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_read<sp/>==<sp/>64*1024)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_read--;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[n_read]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"/></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>parset.makeSubset(</highlight><highlight class="stringliteral">"Cimager."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>fill<sp/>the<sp/>local<sp/>parset<sp/>with<sp/>parameters<sp/>that<sp/>maybe<sp/>missing</highlight><highlight class="normal"/></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>NEUtils::addMissingParameters(this-&gt;itsParset,<sp/>this-&gt;itsChan);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>colName<sp/>=<sp/>this-&gt;itsParset.getString(</highlight><highlight class="stringliteral">"datacolumn"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"DATA"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;std::string&gt;<sp/>ms<sp/>=<sp/>NEUtils::getDatasets(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>look<sp/>at<sp/>the<sp/>model</highlight><highlight class="normal"/></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::ImagingNormalEquations::ShPtr<sp/>itsNe;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::synthesis::IVisGridder::ShPtr<sp/>itsGridder;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Initializing<sp/>the<sp/>model<sp/>images"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"/></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::receiveParams(itsModel,<sp/>input(</highlight><highlight class="stringliteral">"Solved<sp/>Model"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Received<sp/>model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Failed<sp/>to<sp/>receive<sp/>model<sp/>setting<sp/>up<sp/>empty<sp/>one"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::synthesis::SynthesisParamsHelper::setUpImages(itsModel,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset.makeSubset(</highlight><highlight class="stringliteral">"Images."</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"/></codeline>
<codeline lineno="191"><highlight class="normal"/></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Current<sp/>model<sp/>held<sp/>by<sp/>the<sp/>drop:<sp/>"</highlight><highlight class="normal">&lt;&lt;*itsModel);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"/></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>build<sp/>a<sp/>gridder</highlight><highlight class="normal"/></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsGridder<sp/>=<sp/>askap::synthesis::VisGridderFactory::make(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"/></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NE</highlight><highlight class="normal"/></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsNe<sp/>=<sp/>askap::scimath::ImagingNormalEquations::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>askap::scimath::ImagingNormalEquations(*itsModel));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"/></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"/></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>cant<sp/>make<sp/>the<sp/>gridder<sp/>smart<sp/>funciton<sp/>a<sp/>member<sp/>funtion<sp/>as<sp/>I<sp/>cannot<sp/>instantiate<sp/>it<sp/>until<sp/>I<sp/>have<sp/>a<sp/>parset.</highlight><highlight class="normal"/></codeline>
<codeline lineno="203"><highlight class="normal"/></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>iter<sp/>=<sp/>ms.begin();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"/></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iter<sp/>!=<sp/>ms.end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"/></codeline>
<codeline lineno="208"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="211"><highlight class="normal"/></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Processing<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*iter);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"/></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::TableDataSource<sp/>ds(*iter,<sp/>accessors::TableDataSource::DEFAULT,<sp/>colName);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>data<sp/>selector<sp/>for<sp/>the<sp/>measurement<sp/>set</highlight><highlight class="normal"/></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataSelectorPtr<sp/>sel<sp/>=<sp/>ds.createSelector();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"/></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel-&gt;chooseCrossCorrelations();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel-&gt;chooseChannels(1,<sp/>this-&gt;freqInterval[0]);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Use<sp/>time<sp/>interval<sp/>and<sp/>perhaps<sp/>beam?</highlight><highlight class="normal"/></codeline>
<codeline lineno="223"><highlight class="normal"/></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataConverterPtr<sp/>conv<sp/>=<sp/>ds.createConverter();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setFrequencyFrame(casacore::MFrequency::Ref(casacore::MFrequency::TOPO),<sp/></highlight><highlight class="stringliteral">"Hz"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setDirectionFrame(casacore::MDirection::Ref(casacore::MDirection::J2000));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv-&gt;setEpochFrame();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"/></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessors::IDataSharedIter<sp/>it<sp/>=<sp/>ds.createIterator(sel,<sp/>conv);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"/></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>define<sp/>an<sp/>empty<sp/>model<sp/>(or<sp/>pick<sp/>one<sp/>up<sp/>from<sp/>the<sp/>parset)</highlight><highlight class="normal"/></codeline>
<codeline lineno="232"><highlight class="normal"/></codeline>
<codeline lineno="233"><highlight class="normal"/></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Not<sp/>applying<sp/>calibration"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"building<sp/>FFT/measurement<sp/>equation"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;askap::synthesis::ImageFFTEquation&gt;<sp/>fftEquation(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>askap::synthesis::ImageFFTEquation<sp/>(*itsModel,<sp/>it,<sp/>itsGridder));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(fftEquation);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftEquation-&gt;useAlternativePSF(itsParset);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>this<sp/>to<sp/>an<sp/>empty<sp/>pointer<sp/>-<sp/>no<sp/>aggregation<sp/>across<sp/>groups<sp/>for<sp/>this</highlight><highlight class="normal"/></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fftEquation-&gt;setVisUpdateObject(boost::shared_ptr&lt;askap::synthesis::GroupVisAggregator&gt;());</highlight><highlight class="normal"/></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"calculating<sp/>Imaging<sp/>Normal<sp/>Equations"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"/></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Equation</highlight><highlight class="normal"/></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Equation::ShPtr<sp/>itsEquation<sp/>=<sp/>fftEquation;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsEquation-&gt;calcEquations(*itsNe);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"/></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>dump<sp/>out<sp/>some<sp/>images</highlight><highlight class="normal"/></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::sendNE(itsNe,<sp/>output(</highlight><highlight class="stringliteral">"Normal"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>am<sp/>going<sp/>to<sp/>assume<sp/>a<sp/>single<sp/>Ne<sp/>output<sp/>-<sp/>even<sp/>though<sp/>I<sp/>am<sp/>not</highlight><highlight class="normal"/></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>merging<sp/>in<sp/>the<sp/>above<sp/>loop<sp/>-<sp/>I<sp/>should<sp/>tho.</highlight><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"/></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>just<sp/>to<sp/>test<sp/>whether<sp/>this<sp/>works<sp/>at<sp/>all.</highlight><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"/></codeline>
<codeline lineno="257"><highlight class="normal"/></codeline>
<codeline lineno="258"><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"/></codeline>
<codeline lineno="262"><highlight class="normal"/></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MajorCycle::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"/></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MajorCycle::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"/></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"/></codeline>
<codeline lineno="272"><highlight class="normal"/></codeline>
<codeline lineno="273"><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"/></codeline>
<codeline lineno="275"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/MajorCycle.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="MajorCycle_8h" kind="file" language="C++">
    <compoundname>MajorCycle.h</compoundname>
    <innerclass refid="classaskap_1_1MajorCycle" prot="public">askap::MajorCycle</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"/>
<codeline lineno="6"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_MAJORCYCLE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_MAJORCYCLE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/MVDirection.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAPSoft<sp/>data<sp/>accessor</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="31" refid="classaskap_1_1MajorCycle" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1MajorCycle" kindref="compound">MajorCycle</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;MajorCycle&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1MajorCycle" kindref="compound">MajorCycle</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"MajorCycle"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1MajorCycle" kindref="compound">MajorCycle</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1MajorCycle_1a65db2521a701c58c64e63ea46e849fa2" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1MajorCycle_1ae618bdf8100d7fc83907d42fb49f332b" kindref="member">run</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Params::ShPtr<sp/>itsModel;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>set</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>itsParset;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>channel<sp/>of<sp/>data</highlight><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::IPosition<sp/>freqInterval;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::IPosition<sp/>timeInterval;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>tangent<sp/>point</highlight><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;casacore::MVDirection&gt;<sp/>itsTangent;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itsChan;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utility<sp/>to<sp/>build<sp/>an<sp/>Imaging<sp/>Normal<sp/>Equation<sp/>from<sp/>a<sp/>parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>buildNE();</highlight><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>steps<sp/>required<sp/>by<sp/>buildNE</highlight><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/MajorCycle.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="NESpectralCube_8cc" kind="file" language="C++">
    <compoundname>NESpectralCube.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="NESpectralCube_8cc_1a44373b96ceeb651820dcaade822a652d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>ASKAP_LOGGER</definition>
        <argsstring>(logger, ".NESpectralCube")</argsstring>
        <name>ASKAP_LOGGER</name>
        <param>
          <type>logger</type>
        </param>
        <param>
          <type>".NESpectralCube"</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/NESpectralCube.cc" line="95" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Derived from DaliugeApplication @ details Implements a method to generate a cube of NormalEquation slices </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"NESpectralCube"</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="11"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1a67157b7f485b4c84c1966a853fed27fb" kindref="member">getAskapPackageVersion_NESpectralCube</ref>()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"NESpectralCube;<sp/>ASKAPsoft==Unknown"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_NESpectralCube()</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;regex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NESpectralCube_8h" kindref="compound">factory/NESpectralCube.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="comment">//<sp/>Data<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableConstDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IConstDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataSelector.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/><highlight class="comment">//<sp/>Image<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;imageaccess/ImageAccessFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;utils/PolConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/><highlight class="comment">//<sp/>casacore</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Arrays/IPosition.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/SpectralCoordinate.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/DirectionCoordinate.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/StokesCoordinate.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/CoordinateSystem.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/measures/Measures/Stokes.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/images/Images/PagedImage.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/Unit.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/QC.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;imageaccess/ImageAccessFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".NESpectralCube"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>NESpectralCube::NESpectralCube(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Initialised<sp/>cube<sp/>builder<sp/>-<sp/>UID<sp/>is<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>raw_app-&gt;uid);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsChan<sp/>=<sp/>NEUtils::getChan(raw_app-&gt;uid);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>NESpectralCube::~NESpectralCube()<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>NESpectralCube::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NESpectralCube::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NESpectralCube(raw_app));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1NESpectralCube_1a5b7442fc0db70bf07551cb139032ccdd" kindref="member">NESpectralCube::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Argument<sp/>parsing<sp/>is<sp/>not<sp/>working<sp/>as<sp/>yet</highlight><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parset_filename<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>params<sp/>I<sp/>might<sp/>need<sp/>go<sp/>here:</highlight><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filename:</highlight><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>longer<sp/>required<sp/>as<sp/>input<sp/>comes<sp/>from<sp/>daliuge<sp/>now</highlight><highlight class="normal"/></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(strcmp(param[0],<sp/>"parset_filename")<sp/>==<sp/>0)<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>parset_filename<sp/>=<sp/>strdup(param[1]);</highlight><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1NESpectralCube_1a4f8d34d17697800c438d9583140f2f53" kindref="member">NESpectralCube::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"/></codeline>
<codeline lineno="148"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>safety;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"/><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"/></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_read<sp/>=<sp/>input(</highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"No<sp/>config<sp/>file<sp/>available"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"/></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>parset.makeSubset(</highlight><highlight class="stringliteral">"Cimager."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>fill<sp/>the<sp/>local<sp/>parset<sp/>with<sp/>parameters<sp/>that<sp/>maybe<sp/>missing</highlight><highlight class="normal"/></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>NEUtils::addMissingParameters(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"/></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsNe<sp/>=<sp/>askap::scimath::ImagingNormalEquations::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>askap::scimath::ImagingNormalEquations());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"/></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::receiveNE(itsNe,<sp/>input(</highlight><highlight class="stringliteral">"Normal"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Failed<sp/>to<sp/>receive<sp/>NE"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"/></codeline>
<codeline lineno="193"><highlight class="normal"/></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Double<sp/>baseFrequency<sp/>=<sp/>NEUtils::getFrequency(itsParset,0);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Double<sp/>chanWidth<sp/>=<sp/>NEUtils::getChanWidth(itsParset,0);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Int<sp/>nchanCube<sp/>=<sp/>NEUtils::getNChan(itsParset);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Double<sp/>channelFrequency<sp/>=<sp/>NEUtils::getFrequency(itsParset,itsChan);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"/></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Quantity<sp/>f0(baseFrequency,</highlight><highlight class="stringliteral">"Hz"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Quantity<sp/>freqinc(chanWidth,</highlight><highlight class="stringliteral">"Hz"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"/></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>toFitParams<sp/>=<sp/>itsNe-&gt;unknowns();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>iterCol<sp/>=<sp/>toFitParams.begin();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iterCol<sp/>!=<sp/>toFitParams.end();<sp/>iterCol++)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Param<sp/>name:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*iterCol);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsChan<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"/></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>img_name<sp/>=<sp/>*iterCol<sp/>+<sp/></highlight><highlight class="stringliteral">".chan."</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(itsChan);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>img_name_arr<sp/>=<sp/><sp/>*iterCol<sp/>+<sp/></highlight><highlight class="stringliteral">".chan."</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(itsChan)<sp/>+<sp/></highlight><highlight class="stringliteral">".data"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"/></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Image<sp/>name:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>img_name);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scimath::ImagingNormalEquations<sp/>&amp;other<sp/>=</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">scimath::ImagingNormalEquations&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*itsNe);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>dataVector</highlight><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.dataVector().find(*iterCol)<sp/>==<sp/>other.dataVector().end())<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>new<sp/>data<sp/>for<sp/>this<sp/>parameter</highlight><highlight class="normal"/></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"/></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>record<sp/>how<sp/>data<sp/>are<sp/>updated</highlight><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>updateType_t{<sp/>overwrite,<sp/>add,<sp/>linmos<sp/>};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>updateType;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"/></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>coordinate<sp/>systems<sp/>and<sp/>record<sp/>how<sp/>data<sp/>are<sp/>updated</highlight><highlight class="normal"/></codeline>
<codeline lineno="232"><highlight class="normal"/></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(other.dataVector().find(*iterCol)<sp/>!=<sp/>other.dataVector().end());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::Vector&lt;double&gt;<sp/>&amp;newDataVec<sp/>=<sp/>other.dataVector().find(*iterCol)-&gt;second;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::CoordinateSystem<sp/>&amp;newCoordSys<sp/>=<sp/>other.coordSys().find(*iterCol)-&gt;second;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::IPosition<sp/>&amp;newShape<sp/>=<sp/>other.shape().find(*iterCol)-&gt;second;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>writing<sp/>out<sp/>as<sp/>image<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;double&gt;<sp/>newDataArr(newShape,newDataVec.data());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"/></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::write_array(newDataArr,img_name_arr);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"/></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boost::shared_ptr&lt;accessors::IImageAccess&gt;<sp/>itsImageAccessor;</highlight><highlight class="normal"/></codeline>
<codeline lineno="244"><highlight class="normal"/></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>itsImageAccessor<sp/>=<sp/>accessors::imageAccessFactory(parset);</highlight><highlight class="normal"/></codeline>
<codeline lineno="246"><highlight class="normal"/></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>itsImageAccessor-&gt;create(img_name,<sp/>newShape,<sp/>newCoordSys);</highlight><highlight class="normal"/></codeline>
<codeline lineno="248"><highlight class="normal"/></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//itsImageAccessor-&gt;write(img_name,newDataArr);</highlight><highlight class="normal"/></codeline>
<codeline lineno="250"><highlight class="normal"/></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"/></codeline>
<codeline lineno="253"><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"/><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleImageParams();</highlight><highlight class="normal"/></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"/></codeline>
<codeline lineno="257"><highlight class="normal"/></codeline>
<codeline lineno="258"><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"/></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"/></codeline>
<codeline lineno="263"><highlight class="normal"/></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NESpectralCube::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"/></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NESpectralCube::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"/></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NESpectralCube::handleImageParams()</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"In<sp/>handleImageParams");</highlight></codeline>
<codeline lineno="276"><highlight class="comment"/></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>images=itsModel-&gt;names();</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::smatch<sp/>m;</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex<sp/>peak_residual("^peak_residual");</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex<sp/>residual("^residual");</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex<sp/>image("^image");</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex<sp/>psf("^psf");</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex<sp/>weights("^weights");</highlight></codeline>
<codeline lineno="285"><highlight class="comment"/></codeline>
<codeline lineno="286"><highlight class="comment"/></codeline>
<codeline lineno="287"><highlight class="comment"/></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(vector&lt;string&gt;::const_iterator<sp/>it=images.begin();<sp/>it<sp/>!=images.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/>"Will<sp/>parse<sp/>for<sp/>an<sp/>image<sp/>name<sp/>"&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(std::regex_search(*it,m,peak_residual))<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="comment"/></codeline>
<codeline lineno="294"><highlight class="comment"/></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>image</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(std::regex_search(*it,m,image))</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/>"Matched<sp/>image<sp/>and<sp/>writing<sp/>"&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value(*it));</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsImageCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="comment"/></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>PSF</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(std::regex_search(*it,m,psf))</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"Matched<sp/>PSF<sp/>and<sp/>writing<sp/>"<sp/>&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value(*it));</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsPSFCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="comment"/></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>residual</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(std::regex_search(*it,m,residual))</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"Matched<sp/>residual<sp/>and<sp/>writing<sp/>"<sp/>&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value(*it));</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsResidualCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="comment"/></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>weights</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(std::regex_search(*it,m,weights))</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"Matched<sp/>weights<sp/>and<sp/>writing<sp/>"<sp/>&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value(*it));</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsWeightsCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>restored</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>if<sp/>(std::regex_search(*it,restored))</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"Writing<sp/>"<sp/>&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/>const<sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value(*it));</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/>itsRestoredCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>catch<sp/>(std::regex_error<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>"regex_error<sp/>caught:<sp/>"<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>'\n';</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>catch<sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>"Unknown<sp/>exception<sp/>caught:<sp/>"<sp/>&lt;&lt;<sp/>'\n';</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(itsParset.getBool("restore",<sp/>false))<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="comment"/></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(itsDoingPreconditioning)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>preconditioned<sp/>PSF<sp/>image</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"Writing<sp/>preconditioned<sp/>PSF");</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(params-&gt;value("psf.image.slice"));</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsPSFimageCube-&gt;writeSlice(floatImagePixels,<sp/>chan);</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>Restored<sp/>image</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"Writing<sp/>Restored<sp/>Image");</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value("image.slice"));</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRestoredCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="comment"/></codeline>
<codeline lineno="373"><highlight class="comment">*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="374"><highlight class="normal"/></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"/></codeline>
<codeline lineno="377"><highlight class="normal"/></codeline>
<codeline lineno="378"><highlight class="normal"/></codeline>
<codeline lineno="379"><highlight class="normal"/></codeline>
<codeline lineno="380"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/NESpectralCube.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="NESpectralCube_8h" kind="file" language="C++">
    <compoundname>NESpectralCube.h</compoundname>
    <innerclass refid="classaskap_1_1NESpectralCube" prot="public">askap::NESpectralCube</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
<para>Build an output image cube from Normal Equations - not Params. SO dont assume we know the names of the slices. </para>    </briefdescription>
    <detaileddescription>
<para>This drop will be able to build an output cube of any format supported by ASKAPSoft </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_NESPECTRALCUBE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_NESPECTRALCUBE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;imageaccess/ImageAccessFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"distributedimager/CubeBuilder.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/images/Images/PagedImage.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/lattices/Lattices/PagedArray.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Arrays/Array.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/CoordinateSystem.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/ImagingNormalEquations.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42" refid="classaskap_1_1NESpectralCube" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1NESpectralCube" kindref="compound">NESpectralCube</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;NESpectralCube&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1NESpectralCube" kindref="compound">NESpectralCube</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"NESpectralCube"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1NESpectralCube" kindref="compound">NESpectralCube</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1NESpectralCube_1a5b7442fc0db70bf07551cb139032ccdd" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1NESpectralCube_1a4f8d34d17697800c438d9583140f2f53" kindref="member">run</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleImageParams();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>itsParset;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Normal<sp/>Equations</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::ImagingNormalEquations::ShPtr<sp/>itsNe;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsNECube;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itsChan;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/NESpectralCube.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="NEUtils_8cc" kind="file" language="C++">
    <compoundname>NEUtils.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Just some static utility funcitons</para><para>@ details Implements a test method that uses the contents of the the parset to load in a measurement set and print a summary of its contents </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>for<sp/>logging</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"NEUtils"</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1a18d154e8541ff37cbb7fa5efcba802a1" kindref="member">getAskapPackageVersion_NEUtils</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"NEUtils"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_NEUtils()</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/SynParallel.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/ImagingNormalEquations.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/regex.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/BasicSL.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/aips.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/OS/Timer.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/ms/MeasurementSets/MeasurementSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/ms/MeasurementSets/MSColumns.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/ms/MSOper/MSReader.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Arrays/ArrayIO.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/iostream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/namespace.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/MVTime.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NEUtils::getNChan(LOFAR::ParameterSet&amp;<sp/>parset)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>from<sp/>the<sp/>configruation<sp/>the<sp/>list<sp/>of<sp/>datasets<sp/>to<sp/>process</highlight><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;string&gt;<sp/>ms<sp/>=<sp/>getDatasets(parset);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::MeasurementSet<sp/>in(ms[0]);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>casacore::ROScalarColumn&lt;casacore::Int&gt;(in.spectralWindow(),</highlight><highlight class="stringliteral">"NUM_CHAN"</highlight><highlight class="normal">)(0);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"/><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>NEUtils::getChanWidth(LOFAR::ParameterSet&amp;<sp/>parset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//FIXME:<sp/>Assumes<sp/>all<sp/>datasets<sp/>have<sp/>the<sp/>same<sp/>chanWidth</highlight><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;string&gt;<sp/>ms<sp/>=<sp/>getDatasets(parset);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::MeasurementSet<sp/>in(ms[0]);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::ROMSColumns<sp/>srcCols(in);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::ROMSSpWindowColumns&amp;<sp/>sc<sp/>=<sp/>srcCols.spectralWindow();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srow<sp/>=<sp/>sc.nrow()-1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc.chanWidth()(srow)(casacore::IPosition(1,<sp/>chan));</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"/><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>NEUtils::getFrequency(LOFAR::ParameterSet&amp;<sp/>parset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>barycentre)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>from<sp/>the<sp/>configruation<sp/>the<sp/>list<sp/>of<sp/>datasets<sp/>to<sp/>process</highlight><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;string&gt;<sp/>ms<sp/>=<sp/>getDatasets(parset);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::MeasurementSet<sp/>in(ms[0]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::ROMSColumns<sp/>srcCols(in);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::ROMSSpWindowColumns&amp;<sp/>sc<sp/>=<sp/>srcCols.spectralWindow();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::ROMSFieldColumns&amp;<sp/>fc<sp/>=<sp/>srcCols.field();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::ROMSObservationColumns&amp;<sp/>oc<sp/>=<sp/>srcCols.observation();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::ROMSAntennaColumns&amp;<sp/>ac<sp/>=<sp/>srcCols.antenna();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::ROArrayColumn&lt;casacore::Double&gt;<sp/>times<sp/>=<sp/>casacore::ROArrayColumn&lt;casacore::Double&gt;(oc.timeRange());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::ROArrayColumn&lt;casacore::Double&gt;<sp/>ants<sp/>=<sp/>casacore::ROArrayColumn&lt;casacore::Double&gt;(ac.position());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::uInt<sp/>thisRef<sp/>=<sp/>casacore::ROScalarColumn&lt;casacore::Int&gt;(in.spectralWindow(),</highlight><highlight class="stringliteral">"MEAS_FREQ_REF"</highlight><highlight class="normal">)(0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>casacore::MVDirection<sp/>Tangent;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>casacore::Vector&lt;casacore::MDirection&gt;<sp/>DirVec;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>casacore::MVEpoch<sp/>Epoch;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>casacore::MPosition<sp/>Position;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>DirVec<sp/>=<sp/>fc.phaseDirMeasCol()(0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>Tangent<sp/>=<sp/>DirVec(0).getValue();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>position<sp/>on<sp/>Antenna<sp/>0</highlight><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>Array&lt;casacore::Double&gt;<sp/>posval;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>ants.get(0,posval,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>vector&lt;double&gt;<sp/>pval<sp/>=<sp/>posval.tovector();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>MVPosition<sp/>mvobs(Quantity(pval[0],<sp/></highlight><highlight class="stringliteral">"m"</highlight><highlight class="normal">).getBaseValue(),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>Quantity(pval[1],<sp/></highlight><highlight class="stringliteral">"m"</highlight><highlight class="normal">).getBaseValue(),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>Quantity(pval[2],<sp/></highlight><highlight class="stringliteral">"m"</highlight><highlight class="normal">).getBaseValue());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>Position<sp/>=<sp/>MPosition(mvobs,casacore::MPosition::ITRF);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>Epoch</highlight><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>Array&lt;casacore::Double&gt;<sp/>tval;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>vector&lt;double&gt;<sp/>tvals;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>times.get(0,tval,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>tvals<sp/>=<sp/>tval.tovector();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mjd<sp/>=<sp/>tvals[0]/(86400.);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>casacore::MVTime<sp/>dat(mjd);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"/></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>Epoch<sp/>=<sp/>MVEpoch(dat.day());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srow<sp/>=<sp/>sc.nrow()-1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(barycentre<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc.chanFreq()(srow)(casacore::IPosition(1,<sp/>chan));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:</highlight><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>put<sp/>the<sp/>barycentreing<sp/>in<sp/>here<sp/>-<sp/>the<sp/>logic<sp/>is<sp/>all<sp/>in<sp/>the<sp/>AdviseDI</highlight><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"/></codeline>
<codeline lineno="156"><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"/></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"/></codeline>
<codeline lineno="161"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NEUtils::getChan(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>make<sp/>this<sp/>more<sp/>robust</highlight><highlight class="normal"/></codeline>
<codeline lineno="164"><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*token,<sp/>*string,<sp/>*tofree;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>tofree<sp/>=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/>strdup(uid);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>sessionID<sp/>=<sp/>strsep(&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"_"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>logicalGraphID<sp/>=<sp/>strsep(&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"_"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>contextID<sp/>=<sp/>strsep(&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"_"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contextID<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/>strdup(contextID);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"/></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>branchID<sp/>=<sp/>strsep(&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">"/"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"/></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>chanNum<sp/>=<sp/>strsep(&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">"/"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"/></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chanNum<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi(chanNum);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"/></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"/></codeline>
<codeline lineno="190"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NEUtils::receiveNE(askap::scimath::ImagingNormalEquations::ShPtr<sp/>itsNE,<sp/>dlg_input_info<sp/>&amp;input)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPCHECK(itsNE,<sp/></highlight><highlight class="stringliteral">"NormalEquations<sp/>not<sp/>defined"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>itsNESize;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>input.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;itsNESize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(itsNESize));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>LOFAR::BlobString<sp/>b1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>b1.resize(itsNESize);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>n_read<sp/>=<sp/>input.read(b1.data(),<sp/>itsNESize);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"/></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPCHECK(n_read<sp/>==<sp/>itsNESize,<sp/></highlight><highlight class="stringliteral">"Unable<sp/>to<sp/>read<sp/>NE<sp/>of<sp/>expected<sp/>size"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"/></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>LOFAR::BlobIBufString<sp/>bib(b1);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>LOFAR::BlobIStream<sp/>bis(bib);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>bis<sp/>&gt;&gt;<sp/>*itsNE;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"/></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NEUtils::sendNE(askap::scimath::ImagingNormalEquations::ShPtr<sp/>itsNe,<sp/>dlg_output_info<sp/>&amp;output)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(itsNe,<sp/></highlight><highlight class="stringliteral">"NormalEquations<sp/>not<sp/>defined"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::BlobString<sp/>b1;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::BlobOBufString<sp/>bob(b1);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::BlobOStream<sp/>bos(bob);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bos<sp/>&lt;&lt;<sp/>*itsNe;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>itsNeSize<sp/>=<sp/>b1.size();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(itsNeSize<sp/>&gt;<sp/>0,</highlight><highlight class="stringliteral">"Zero<sp/>size<sp/>NE"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>the<sp/>size</highlight><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;itsNeSize,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(itsNeSize));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>actual<sp/>data</highlight><highlight class="normal"/></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output.write(b1.data(),<sp/>b1.size());</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NEUtils::sendParams(askap::scimath::Params::ShPtr<sp/>Params,<sp/>dlg_output_info<sp/>&amp;output)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>LOFAR::BlobString<sp/>b1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>LOFAR::BlobOBufString<sp/>bob(b1);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>LOFAR::BlobOStream<sp/>bos(bob);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"/></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>bos<sp/>&lt;&lt;<sp/>*Params;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ParamsSize<sp/>=<sp/>b1.size();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPCHECK(ParamsSize<sp/>&gt;<sp/>0,</highlight><highlight class="stringliteral">"Zero<sp/>size<sp/>NE"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>the<sp/>size</highlight><highlight class="normal"/></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;ParamsSize,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ParamsSize));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>actual<sp/>data</highlight><highlight class="normal"/></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(b1.data(),<sp/>b1.size());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NEUtils::receiveParams(askap::scimath::Params::ShPtr<sp/>Params,<sp/>dlg_input_info<sp/>&amp;input)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(Params,<sp/></highlight><highlight class="stringliteral">"Params<sp/>not<sp/>defined"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ParamsSize;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>input.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;ParamsSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ParamsSize));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::BlobString<sp/>b1;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b1.resize(ParamsSize);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n_read<sp/>=<sp/>input.read(b1.data(),<sp/>ParamsSize);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"/></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_read<sp/>==<sp/>ParamsSize)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"/></codeline>
<codeline lineno="246"><highlight class="normal"/></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::BlobIBufString<sp/>bib(b1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::BlobIStream<sp/>bis(bib);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bis<sp/>&gt;&gt;<sp/>*Params;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"/></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>LOFAR::ParameterSet<sp/>NEUtils::addMissingParameters(LOFAR::ParameterSet&amp;<sp/>parset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"/></codeline>
<codeline lineno="257"><highlight class="normal"/></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>get<sp/>some<sp/>information<sp/>from<sp/>the<sp/>input<sp/>dataset</highlight><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>done<sp/>in<sp/>"prepare"<sp/>in<sp/>AdviseDI<sp/>-<sp/>need<sp/>to<sp/>get<sp/>the<sp/>minimum</highlight><highlight class="normal"/></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>-<sp/>or<sp/>just<sp/>throw<sp/>an<sp/>exception<sp/>and<sp/>make<sp/>the<sp/>user<sp/>add</highlight><highlight class="normal"/></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>info<sp/>....</highlight><highlight class="normal"/></codeline>
<codeline lineno="262"><highlight class="normal"/></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>for<sp/>missing<sp/>image-specific<sp/>parameters:</highlight><highlight class="normal"/></codeline>
<codeline lineno="264"><highlight class="normal"/></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>parameters<sp/>can<sp/>be<sp/>set<sp/>globally<sp/>or<sp/>individually</highlight><highlight class="normal"/></codeline>
<codeline lineno="266"><highlight class="normal"/></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".addMissingParameters"</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"/></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>cellsizeNeeded<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shapeNeeded<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>directionNeeded<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"/></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTerms<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"/></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"/></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>vector&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;<sp/>imageNames<sp/>=<sp/>parset.getStringVector("Images.Names",<sp/>false);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"/></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/>"Images.direction";</highlight></codeline>
<codeline lineno="280"><highlight class="normal"/></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!parset.isDefined(param)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directionNeeded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directionNeeded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/></highlight><highlight class="stringliteral">"Images.restFrequency"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"/></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!parset.isDefined(param)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>pstr;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>J2000<sp/>is<sp/>implemented<sp/>at<sp/>the<sp/>moment.</highlight><highlight class="normal"/></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstr&lt;&lt;</highlight><highlight class="stringliteral">"HI"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"/></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.add(param,<sp/>pstr.str().c_str());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"/></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>img<sp/>=<sp/>0;<sp/>img<sp/>&lt;<sp/>imageNames.size();<sp/>++img)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"/></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/></highlight><highlight class="stringliteral">"Images."</highlight><highlight class="normal">+imageNames[img]+</highlight><highlight class="stringliteral">".cellsize"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!parset.isDefined(param)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellsizeNeeded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/></highlight><highlight class="stringliteral">"Images.cellsize"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parset.isDefined(param)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;string&gt;<sp/>cellSizeVector<sp/>=<sp/>parset.getStringVector(</highlight><highlight class="stringliteral">"Images.cellsize"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>pstr;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstr&lt;&lt;</highlight><highlight class="stringliteral">"["</highlight><highlight class="normal">&lt;&lt;<sp/>cellSizeVector[0].c_str()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">"arcsec,"</highlight><highlight class="normal">&lt;&lt;cellSizeVector[1].c_str()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">"arcsec]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"/></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.add(param,<sp/>pstr.str().c_str());</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/></highlight><highlight class="stringliteral">"Images."</highlight><highlight class="normal">+imageNames[img]+</highlight><highlight class="stringliteral">".shape"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!parset.isDefined(param)<sp/>)<sp/>shapeNeeded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"/></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/></highlight><highlight class="stringliteral">"Images."</highlight><highlight class="normal">+imageNames[img]+</highlight><highlight class="stringliteral">".frequency"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"/></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parset.isDefined(param)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"Frequency<sp/>in<sp/>Parset<sp/>and<sp/>it<sp/>may<sp/>need<sp/>to<sp/>be<sp/>overridden"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Int<sp/>nchanCube<sp/>=<sp/>NEUtils::getNChan(parset);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nchanCube<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"Overridding<sp/>parset<sp/>frequency<sp/>with<sp/>channel<sp/>based<sp/>information<sp/>from<sp/>measurement<sp/>set<sp/>-<sp/>Am<sp/>I<sp/>half<sp/>a<sp/>channel<sp/>out?"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"/></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Getting<sp/>base<sp/>frequency"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Double<sp/>baseFrequency<sp/>=<sp/>NEUtils::getFrequency(parset,chan);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Getting<sp/>chanwidth"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Double<sp/>chanWidth<sp/>=<sp/>NEUtils::getChanWidth(parset,chan);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Setting<sp/>chanwidth<sp/>in<sp/>parset"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>pstr;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstr&lt;&lt;</highlight><highlight class="stringliteral">"["</highlight><highlight class="normal">&lt;&lt;<sp/>baseFrequency<sp/>&lt;&lt;</highlight><highlight class="stringliteral">","</highlight><highlight class="normal">&lt;&lt;baseFrequency+chanWidth<sp/>&lt;&lt;</highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parset.isDefined(param)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.replace(param,<sp/>pstr.str().c_str());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.add(param,<sp/>pstr.str().c_str());</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ASKAPTHROW(std::runtime_error,"Frequency<sp/>not<sp/>in<sp/>parset");</highlight><highlight class="normal"/></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"Overridden<sp/>frequency<sp/>in<sp/>parset"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"/></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=</highlight><highlight class="stringliteral">"Images."</highlight><highlight class="normal">+imageNames[img]+</highlight><highlight class="stringliteral">".direction"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!parset.isDefined(param)<sp/>&amp;&amp;<sp/>directionNeeded)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"/></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"Direction<sp/>not<sp/>in<sp/>Parset<sp/>and<sp/>it<sp/>needs<sp/>to<sp/>be"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPTHROW(std::runtime_error,</highlight><highlight class="stringliteral">"direction<sp/>not<sp/>in<sp/>parset"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parset.isDefined(param)<sp/>&amp;&amp;<sp/>!directionNeeded)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"/></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;string&gt;<sp/>directionVector<sp/>=<sp/>parset.getStringVector(</highlight><highlight class="stringliteral">"Images.direction"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"/></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>pstr;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstr&lt;&lt;</highlight><highlight class="stringliteral">"["</highlight><highlight class="normal">&lt;&lt;<sp/>directionVector[0].c_str()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">","</highlight><highlight class="normal">&lt;&lt;directionVector[1].c_str()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">","</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>directionVector[2].c_str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"]"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.add(param,<sp/>pstr.str().c_str());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"/></codeline>
<codeline lineno="356"><highlight class="normal"/></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/></highlight><highlight class="stringliteral">"Images."</highlight><highlight class="normal">+imageNames[img]+</highlight><highlight class="stringliteral">".nterms"</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>nterms<sp/>is<sp/>set,<sp/>store<sp/>it<sp/>for<sp/>later</highlight><highlight class="normal"/></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parset.isDefined(param))<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nTerms&gt;1)<sp/>&amp;&amp;<sp/>(nTerms!=parset.getInt(param)))<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"Imaging<sp/>with<sp/>different<sp/>nterms<sp/>may<sp/>not<sp/>work"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTerms<sp/>=<sp/>parset.getInt(param);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/></highlight><highlight class="stringliteral">"Images."</highlight><highlight class="normal">+imageNames[img]+</highlight><highlight class="stringliteral">".nchan"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!parset.isDefined(param))<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"Setting<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>param);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>pstr;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstr&lt;&lt;</highlight><highlight class="stringliteral">"1"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.add(param,<sp/>pstr.str().c_str());</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"Overriding<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>param);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>pstr;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstr&lt;&lt;</highlight><highlight class="stringliteral">"1"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.replace(param,<sp/>pstr.str().c_str());</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"/></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTerms<sp/>&gt;<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>check<sp/>required<sp/>MFS<sp/>parameters</highlight><highlight class="normal"/></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/></highlight><highlight class="stringliteral">"visweights"</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>"MFS"<sp/>if<sp/>unset<sp/>and<sp/>nTerms<sp/>&gt;<sp/>1</highlight><highlight class="normal"/></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parset.isDefined(param))<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>pstr;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"MFS"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Advising<sp/>on<sp/>parameter<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>param<sp/>&lt;&lt;</highlight><highlight class="stringliteral">":<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pstr.str().c_str());</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.add(param,<sp/>pstr.str().c_str());</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"/></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/></highlight><highlight class="stringliteral">"visweights.MFS.reffreq"</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>average<sp/>frequency<sp/>if<sp/>unset<sp/>and<sp/>nTerms<sp/>&gt;<sp/>1</highlight><highlight class="normal"/></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((parset.getString(</highlight><highlight class="stringliteral">"visweights"</highlight><highlight class="normal">)==</highlight><highlight class="stringliteral">"MFS"</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parset.isDefined(param))<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"Param<sp/>not<sp/>found:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>param<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>and<sp/>cannot<sp/>be<sp/>predicted"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPTHROW(std::runtime_error,</highlight><highlight class="stringliteral">"MFS<sp/>reference<sp/>frequency<sp/>not<sp/>in<sp/>parset"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"/></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"/></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>for<sp/>general<sp/>missing<sp/>parameters:</highlight><highlight class="normal"/></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cellsizeNeeded<sp/>&amp;&amp;<sp/>!parset.isDefined(</highlight><highlight class="stringliteral">"nUVWMachines"</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"/></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cellsizeNeeded<sp/>&amp;&amp;<sp/>!parset.isDefined(</highlight><highlight class="stringliteral">"Images.cellsize"</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"/></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>shapeNeeded<sp/>&amp;&amp;<sp/>!parset.isDefined(</highlight><highlight class="stringliteral">"Images.shape"</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"/></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"/></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_DEBUG_STR(logger,<sp/></highlight><highlight class="stringliteral">"Done<sp/>adding<sp/>missing<sp/>params"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"/></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parset;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>NEUtils::getDatasets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet&amp;<sp/>parset)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parset.isDefined(</highlight><highlight class="stringliteral">"dataset"</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>parset.isDefined(</highlight><highlight class="stringliteral">"dataset0"</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPTHROW(std::runtime_error,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"Both<sp/>dataset<sp/>and<sp/>dataset0<sp/>are<sp/>specified<sp/>in<sp/>the<sp/>parset"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"/></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>look<sp/>for<sp/>"dataset"<sp/>and<sp/>if<sp/>that<sp/>does<sp/>not<sp/>exist<sp/>try<sp/>"dataset0"</highlight><highlight class="normal"/></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>ms;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parset.isDefined(</highlight><highlight class="stringliteral">"dataset"</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms<sp/>=<sp/>parset.getStringVector(</highlight><highlight class="stringliteral">"dataset"</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key<sp/>=<sp/></highlight><highlight class="stringliteral">"dataset0"</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>key<sp/>to<sp/>look<sp/>for</highlight><highlight class="normal"/></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parset.isDefined(key))<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>parset.getString(key);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms.push_back(value);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"/></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"dataset"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>ss.str();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++idx;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"/></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ms;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"/></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1NEUtils_1ab8a3a4fd387a08fbbf2fba61d220da77" kindref="member">NEUtils::readModels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet&amp;<sp/>parset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scimath::Params::ShPtr<sp/>&amp;pModel)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"/></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".readModels"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPCHECK(pModel,<sp/></highlight><highlight class="stringliteral">"model<sp/>is<sp/>not<sp/>initialised<sp/>prior<sp/>to<sp/>call<sp/>to<sp/>SynParallel::readModels"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"/></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>sources<sp/>=<sp/>parset.getStringVector(</highlight><highlight class="stringliteral">"sources.names"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;std::string&gt;<sp/>loadedImageModels;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sources.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>modelPar<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">"sources."</highlight><highlight class="normal">)+sources[i]+</highlight><highlight class="stringliteral">".model"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>compPar<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">"sources."</highlight><highlight class="normal">)+sources[i]+</highlight><highlight class="stringliteral">".components"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>only<sp/>one<sp/>is<sp/>defined</highlight><highlight class="normal"/></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(parset.isDefined(compPar)<sp/>!=<sp/>parset.isDefined(modelPar),</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"The<sp/>model<sp/>should<sp/>be<sp/>defined<sp/>with<sp/>either<sp/>image<sp/>(via<sp/>"</highlight><highlight class="normal">&lt;&lt;modelPar&lt;&lt;</highlight><highlight class="stringliteral">")<sp/>or<sp/>components<sp/>(via<sp/>"</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compPar&lt;&lt;</highlight><highlight class="stringliteral">"),<sp/>not<sp/>both"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parset.isDefined(modelPar))<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>vecModels<sp/>=<sp/>parset.getStringVector(modelPar);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTaylorTerms<sp/>=<sp/>parset.getInt32(std::string(</highlight><highlight class="stringliteral">"sources."</highlight><highlight class="normal">)+sources[i]+</highlight><highlight class="stringliteral">".nterms"</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK(nTaylorTerms&gt;0,<sp/></highlight><highlight class="stringliteral">"Number<sp/>of<sp/>Taylor<sp/>terms<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>a<sp/>positive<sp/>number,<sp/>you<sp/>gave<sp/>"</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTaylorTerms);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTaylorTerms&gt;1)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,</highlight><highlight class="stringliteral">"Simulation<sp/>from<sp/>model<sp/>presented<sp/>by<sp/>Taylor<sp/>series<sp/>(a.k.a.<sp/>MFS-model)<sp/>with<sp/>"</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTaylorTerms&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>terms<sp/>is<sp/>not<sp/>supported"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTaylorTerms<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPCHECK((vecModels.size()<sp/>==<sp/>1)<sp/>||<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(vecModels.size())<sp/>==<sp/>nTaylorTerms),</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"Number<sp/>of<sp/>model<sp/>images<sp/>given<sp/>by<sp/>"</highlight><highlight class="normal">&lt;&lt;modelPar&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>should<sp/>be<sp/>either<sp/>1<sp/>or<sp/>one<sp/>per<sp/>taylor<sp/>term,<sp/>you<sp/>gave<sp/>"</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecModels.size()&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>nTaylorTerms="</highlight><highlight class="normal">&lt;&lt;nTaylorTerms);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synthesis::ImageParamsHelper<sp/>iph(</highlight><highlight class="stringliteral">"image."</highlight><highlight class="normal">+sources[i]);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>simulations<sp/>we<sp/>don't<sp/>need<sp/>cross-terms</highlight><highlight class="normal"/></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order<sp/>=<sp/>0;<sp/>order&lt;nTaylorTerms;<sp/>++order)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTaylorTerms<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>an<sp/>MFS<sp/>case,<sp/>setup<sp/>Taylor<sp/>terms</highlight><highlight class="normal"/></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iph.makeTaylorTerm(order);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Processing<sp/>Taylor<sp/>term<sp/>"</highlight><highlight class="normal">&lt;&lt;order);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>model<sp/>=<sp/>vecModels[0];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vecModels.size()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>base<sp/>name<sp/>is<sp/>given,<sp/>need<sp/>to<sp/>add<sp/>taylor<sp/>suffix</highlight><highlight class="normal"/></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>+=<sp/>iph.suffix();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"/></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(loadedImageModels.begin(),loadedImageModels.end(),model)<sp/>!=<sp/>loadedImageModels.end())<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Model<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>has<sp/>already<sp/>been<sp/>loaded,<sp/>reusing<sp/>it<sp/>for<sp/>"</highlight><highlight class="normal">&lt;&lt;<sp/>sources[i]);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vecModels.size()!=1)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,<sp/></highlight><highlight class="stringliteral">"MFS<sp/>simulation<sp/>will<sp/>not<sp/>work<sp/>correctly<sp/>if<sp/>you<sp/>specified<sp/>the<sp/>same<sp/>model<sp/>"</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model&lt;&lt;</highlight><highlight class="stringliteral">"<sp/>for<sp/>multiple<sp/>Taylor<sp/>terms"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Adding<sp/>image<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>as<sp/>model<sp/>for<sp/>"</highlight><highlight class="normal">&lt;&lt;<sp/>sources[i]</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">",<sp/>parameter<sp/>name:<sp/>"</highlight><highlight class="normal">&lt;&lt;iph.paramName()<sp/>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>patch<sp/>model<sp/>to<sp/>append<sp/>taylor<sp/>suffix</highlight><highlight class="normal"/></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synthesis::SynthesisParamsHelper::loadImageParameter(*pModel,<sp/>iph.paramName(),<sp/>model);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadedImageModels.insert(model);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>through<sp/>components</highlight><highlight class="normal"/></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Adding<sp/>components<sp/>as<sp/>model<sp/>for<sp/>"</highlight><highlight class="normal">&lt;&lt;<sp/>sources[i]<sp/>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;string&gt;<sp/>compList<sp/>=<sp/>parset.getStringVector(compPar);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;string&gt;::const_iterator<sp/>cmp<sp/>=<sp/>compList.begin();<sp/>cmp<sp/>!=<sp/>compList.end();<sp/>++cmp)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Loading<sp/>component<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*cmp<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>as<sp/>part<sp/>of<sp/>the<sp/>model<sp/>for<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sources[i]);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synthesis::SynthesisParamsHelper::copyComponent(pModel,<sp/>parset,*cmp,</highlight><highlight class="stringliteral">"sources."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Successfully<sp/>read<sp/>models"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"/></codeline>
<codeline lineno="510"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/NEUtils.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="NEUtils_8h" kind="file" language="C++">
    <compoundname>NEUtils.h</compoundname>
    <innerclass refid="classaskap_1_1NEUtils" prot="public">askap::NEUtils</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"/>
<codeline lineno="6"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_NEUTILS_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_NEUTILS_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/ImagingNormalEquations.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/BasicSL.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/aips.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/OS/Timer.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/ms/MeasurementSets/MeasurementSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/ms/MeasurementSets/MSColumns.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/ms/MSOper/MSReader.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Arrays/ArrayIO.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/iostream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/namespace.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/MVTime.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>usecs(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*start,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*end)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(end-&gt;tv_sec<sp/>-<sp/>start-&gt;tv_sec)<sp/>*<sp/>1000000<sp/>+<sp/>(end-&gt;tv_usec<sp/>-<sp/>start-&gt;tv_usec);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="44" refid="classaskap_1_1NEUtils" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1NEUtils" kindref="compound">NEUtils</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1NEUtils" kindref="compound">NEUtils</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classaskap_1_1NEUtils" kindref="compound">NEUtils</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gets<sp/>an<sp/>NE<sp/>from<sp/>an<sp/>app<sp/>input<sp/>and<sp/>puts<sp/>it<sp/>into<sp/>the<sp/>ShPtr</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>receiveNE(askap::scimath::ImagingNormalEquations::ShPtr,<sp/>dlg_input_info<sp/>&amp;input);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>for<sp/>Params</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>receiveParams(askap::scimath::Params::ShPtr,<sp/>dlg_input_info<sp/>&amp;input);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Needs<sp/>a<sp/>sendNE</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sendNE(askap::scimath::ImagingNormalEquations::ShPtr<sp/>itsNe,<sp/>dlg_output_info<sp/>&amp;output);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sendParams(askap::scimath::Params::ShPtr<sp/>params,<sp/>dlg_output_info<sp/>&amp;output);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>parameters<sp/>that<sp/>may<sp/>be<sp/>missing<sp/>from<sp/>a<sp/>configuration<sp/>file</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet<sp/>addMissingParameters(LOFAR::ParameterSet&amp;<sp/>parset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan=0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>getDatasets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet&amp;<sp/>parset);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChan(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNChan(LOFAR::ParameterSet&amp;<sp/>parset);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getChanWidth(LOFAR::ParameterSet&amp;<sp/>parset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getFrequency(LOFAR::ParameterSet&amp;<sp/>parset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan=0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>barycentre=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>from<sp/>Synparallel.</highlight><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1NEUtils_1ab8a3a4fd387a08fbbf2fba61d220da77" kindref="member">readModels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LOFAR::ParameterSet&amp;<sp/>parset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scimath::Params::ShPtr<sp/>&amp;pModel);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/NEUtils.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="OutputParams_8cc" kind="file" language="C++">
    <compoundname>OutputParams.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>for<sp/>logging</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"OutputParams"</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1a1e583517dcb94f2be1d688a7257665b9" kindref="member">getAskapPackageVersion_OutputParams</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"OutputParams"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_OutputParams()</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="OutputParams_8h" kindref="compound">factory/OutputParams.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="comment">//<sp/>Data<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableConstDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IConstDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataSelector.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/><highlight class="comment">//<sp/>Solver<sp/>stuff</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageSolverFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Solver.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputParams::OutputParams(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputParams::~OutputParams()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>OutputParams::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputParams::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>OutputParams(raw_app));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"/></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1OutputParams_1a3a09d2b22cc2c97515b86fedf1e969b2" kindref="member">OutputParams::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"/></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(strcmp(param[0],<sp/>"config")<sp/>==<sp/>0)<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>config_key<sp/>=<sp/>strdup(param[1]);</highlight><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arguments++;</highlight><highlight class="normal"/></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OutputParams::run()<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>safety;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>open<sp/>the<sp/>input<sp/>and<sp/>read<sp/>it</highlight><highlight class="normal"/></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>input(</highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>parset.makeSubset(</highlight><highlight class="stringliteral">"Cimager."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>NEUtils::addMissingParameters(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"/></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actually<sp/>there<sp/>should<sp/>be<sp/>no<sp/>model<sp/>on<sp/>input<sp/>....<sp/>it<sp/>should<sp/>always<sp/>be<sp/>empty</highlight><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>my<sp/>job<sp/>to<sp/>fill<sp/>it.</highlight><highlight class="normal"/></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::receiveParams(itsModel,<sp/>input(</highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>askap::synthesis::SynthesisParamsHelper::setUpImages(itsModel,</highlight><highlight class="normal"/></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset.makeSubset("Images."));</highlight><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synthesis::SynthesisParamsHelper::setUpImageHandler(itsParset);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>images=itsModel-&gt;names();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"/></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;string&gt;::const_iterator<sp/>it=images.begin();<sp/>it<sp/>!=images.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Model<sp/>contains<sp/>"</highlight><highlight class="normal">&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;find(</highlight><highlight class="stringliteral">"image"</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>synthesis::ImageParamsHelper<sp/>iph(*it);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synthesis::SynthesisParamsHelper::saveImageParameter(*itsModel,<sp/>*it,<sp/>*it);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;find(</highlight><highlight class="stringliteral">"residual"</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>synthesis::ImageParamsHelper<sp/>iph(*it);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synthesis::SynthesisParamsHelper::saveImageParameter(*itsModel,<sp/>*it,<sp/>*it);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputParams::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"/></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputParams::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"/></codeline>
<codeline lineno="185"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/OutputParams.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="OutputParams_8h" kind="file" language="C++">
    <compoundname>OutputParams.h</compoundname>
    <innerclass refid="classaskap_1_1OutputParams" prot="public">askap::OutputParams</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"/>
<codeline lineno="6"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_OutputParams_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_OutputParams_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/MVDirection.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Solver.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="32" refid="classaskap_1_1OutputParams" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1OutputParams" kindref="compound">OutputParams</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;OutputParams&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1OutputParams" kindref="compound">OutputParams</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"OutputParams"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1OutputParams" kindref="compound">OutputParams</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1OutputParams_1a3a09d2b22cc2c97515b86fedf1e969b2" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::Params::ShPtr<sp/>itsModel;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>set</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>itsParset;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Normal<sp/>Equations</highlight><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::ImagingNormalEquations::ShPtr<sp/>itsNe;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>Solver</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::Solver::ShPtr<sp/>itsSolver;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utility<sp/>to<sp/>build<sp/>an<sp/>Imaging<sp/>Normal<sp/>Equation<sp/>from<sp/>a<sp/>parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>buildNE();</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>steps<sp/>required<sp/>by<sp/>buildNE</highlight><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/OutputParams.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="rename_8h" kind="file" language="C++">
    <compoundname>rename.h</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>@file<sp/>rename.h</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>RENAME_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>RENAME_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="comment">//#include<sp/>&lt;casacore/casa/Utilities.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="comment">//namespace<sp/>casa<sp/>=<sp/>casacore;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/rename.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="RestoreSolver_8cc" kind="file" language="C++">
    <compoundname>RestoreSolver.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>for<sp/>logging</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"RestoreSolver"</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1a9abd73a87917e50146fe865166881e93" kindref="member">getAskapPackageVersion_RestoreSolver</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"RestoreSolver"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_RestoreSolver()</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="RestoreSolver_8h" kindref="compound">factory/RestoreSolver.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="comment">//<sp/>Data<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableConstDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IConstDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataSelector.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/><highlight class="comment">//<sp/>Solver<sp/>stuff</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageSolverFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageRestoreSolver.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Solver.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>RestoreSolver::RestoreSolver(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>RestoreSolver::~RestoreSolver()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>RestoreSolver::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RestoreSolver::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RestoreSolver(raw_app));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1RestoreSolver_1a78c01f3deb392479c44403dec2e6bd6c" kindref="member">RestoreSolver::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RestoreSolver::run()<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>safety;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>open<sp/>the<sp/>input<sp/>and<sp/>read<sp/>it</highlight><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>input(</highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>parset.makeSubset(</highlight><highlight class="stringliteral">"Cimager."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"/></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>NEUtils::addMissingParameters(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actually<sp/>there<sp/>should<sp/>be<sp/>no<sp/>model<sp/>on<sp/>input<sp/>....<sp/>it<sp/>should<sp/>always<sp/>be<sp/>empty</highlight><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>my<sp/>job<sp/>to<sp/>fill<sp/>it.</highlight><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"/></codeline>
<codeline lineno="148"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::receiveParams(itsModel,<sp/>input(</highlight><highlight class="stringliteral">"Solved<sp/>Model"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Received<sp/>model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_WARN_STR(logger,</highlight><highlight class="stringliteral">"<sp/>Failed<sp/>to<sp/>receive<sp/>model<sp/>setting"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"/></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>need<sp/>to<sp/>instantiate<sp/>and<sp/>initialise<sp/>the<sp/>solver<sp/>from<sp/>the<sp/>parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsSolver<sp/>=<sp/>synthesis::ImageSolverFactory::make(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsNe<sp/>=<sp/>askap::scimath::ImagingNormalEquations::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>askap::scimath::ImagingNormalEquations());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::receiveNE(itsNe,<sp/>input(</highlight><highlight class="stringliteral">"Normal"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"/></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>toFitParams<sp/>=<sp/>itsNe-&gt;unknowns();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>iter2<sp/>=<sp/>toFitParams.begin();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iter2<sp/>!=<sp/>toFitParams.end();<sp/>iter2++)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Param<sp/>name:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*iter2);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"/></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>need<sp/>to<sp/>instantiate<sp/>and<sp/>initialise<sp/>the<sp/>solver</highlight><highlight class="normal"/></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="183"><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver-&gt;init();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver-&gt;addNormalEquations(*itsNe);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsParset.getBool(</highlight><highlight class="stringliteral">"restore"</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>need<sp/>to<sp/>build<sp/>the<sp/>restore<sp/>solver<sp/>using<sp/>this<sp/>as<sp/>the<sp/>template_solver</highlight><highlight class="normal"/></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;synthesis::ImageRestoreSolver&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>synthesis::ImageRestoreSolver::createSolver(itsParset.makeSubset(</highlight><highlight class="stringliteral">"restore."</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(ir);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsSolver);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configure<sp/>restore<sp/>solver<sp/>the<sp/>same<sp/>way<sp/>as<sp/>normal<sp/>imaging<sp/>solver</highlight><highlight class="normal"/></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;synthesis::ImageSolver&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template_solver<sp/>=<sp/>boost::dynamic_pointer_cast&lt;synthesis::ImageSolver&gt;(itsSolver);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(template_solver);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synthesis::ImageSolverFactory::configurePreconditioners(itsParset,<sp/>ir);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir-&gt;configureSolver(*template_solver);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir-&gt;copyNormalEquations(*template_solver);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"/></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"(Restoring)<sp/>Solving<sp/>Normal<sp/>Equations"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Quality<sp/>q;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"/></codeline>
<codeline lineno="204"><highlight class="normal"/></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir-&gt;solveNormalEquations(*itsModel,<sp/>q);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>resultimages=itsModel-&gt;names();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"/></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;string&gt;::const_iterator<sp/>ci=resultimages.begin();<sp/>ci!=resultimages.end();<sp/>++ci)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Restored<sp/>image<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*ci);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"/></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsModel);<sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::sendParams(itsModel,<sp/>output(</highlight><highlight class="stringliteral">"Restored<sp/>Model"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"/></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="221"><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RestoreSolver::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"/></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RestoreSolver::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal"/></codeline>
<codeline lineno="231"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/RestoreSolver.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="RestoreSolver_8h" kind="file" language="C++">
    <compoundname>RestoreSolver.h</compoundname>
    <innerclass refid="classaskap_1_1RestoreSolver" prot="public">askap::RestoreSolver</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"/>
<codeline lineno="6"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_RestoreSolver_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_RestoreSolver_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/MVDirection.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Solver.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34" refid="classaskap_1_1RestoreSolver" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1RestoreSolver" kindref="compound">RestoreSolver</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;RestoreSolver&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1RestoreSolver" kindref="compound">RestoreSolver</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"RestoreSolver"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1RestoreSolver" kindref="compound">RestoreSolver</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1RestoreSolver_1a78c01f3deb392479c44403dec2e6bd6c" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::Params::ShPtr<sp/>itsModel;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>set</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>itsParset;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Normal<sp/>Equations</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::ImagingNormalEquations::ShPtr<sp/>itsNe;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>Solver</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::Solver::ShPtr<sp/>itsSolver;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utility<sp/>to<sp/>build<sp/>an<sp/>Imaging<sp/>Normal<sp/>Equation<sp/>from<sp/>a<sp/>parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>buildNE();</highlight><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>steps<sp/>required<sp/>by<sp/>buildNE</highlight><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/RestoreSolver.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SolveNE_8cc" kind="file" language="C++">
    <compoundname>SolveNE.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>for<sp/>logging</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"SolveNE"</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1acfbaa8fdb6811361155c3ff22f2afcaa" kindref="member">getAskapPackageVersion_SolveNE</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"SolveNE"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_SolveNE()</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="SolveNE_8h" kindref="compound">factory/SolveNE.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="comment">//<sp/>Data<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableConstDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IConstDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataSelector.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/><highlight class="comment">//<sp/>Solver<sp/>stuff</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageSolverFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Solver.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>SolveNE::SolveNE(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>SolveNE::~SolveNE()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>SolveNE::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SolveNE::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SolveNE(raw_app));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"/></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1SolveNE_1a95cda66dc215fd0668e6aa4a687afc68" kindref="member">SolveNE::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"/></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SolveNE::run()<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>safety;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"/></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>open<sp/>the<sp/>input<sp/>and<sp/>read<sp/>it</highlight><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>input(</highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"/></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>parset.makeSubset(</highlight><highlight class="stringliteral">"Cimager."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>NEUtils::addMissingParameters(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actually<sp/>there<sp/>should<sp/>be<sp/>no<sp/>model<sp/>on<sp/>input<sp/>....<sp/>it<sp/>should<sp/>always<sp/>be<sp/>empty</highlight><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>my<sp/>job<sp/>to<sp/>fill<sp/>it.</highlight><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="150"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::synthesis::SynthesisParamsHelper::setUpImages(itsModel,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset.makeSubset(</highlight><highlight class="stringliteral">"Images."</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>need<sp/>to<sp/>instantiate<sp/>and<sp/>initialise<sp/>the<sp/>solver<sp/>from<sp/>the<sp/>parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsSolver<sp/>=<sp/>synthesis::ImageSolverFactory::make(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsNe<sp/>=<sp/>askap::scimath::ImagingNormalEquations::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>askap::scimath::ImagingNormalEquations());</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"/></codeline>
<codeline lineno="160"><highlight class="normal"/></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::receiveNE(itsNe,<sp/>input(</highlight><highlight class="stringliteral">"Normal"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>toFitParams<sp/>=<sp/>itsNe-&gt;unknowns();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>iter2<sp/>=<sp/>toFitParams.begin();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"/></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iter2<sp/>!=<sp/>toFitParams.end();<sp/>iter2++)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"/></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Param<sp/>name:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*iter2);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>need<sp/>to<sp/>instantiate<sp/>and<sp/>initialise<sp/>the<sp/>solver</highlight><highlight class="normal"/></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="177"><highlight class="normal"/></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver-&gt;init();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver-&gt;addNormalEquations(*itsNe);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"/></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Solving<sp/>Normal<sp/>Equations"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>askap::scimath::Quality<sp/>q;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPDEBUGASSERT(itsModel);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsSolver-&gt;solveNormalEquations(*itsModel,<sp/>q);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Solved<sp/>normal<sp/>equations"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>increment<sp/>a<sp/>solverCount<sp/>so<sp/>anything<sp/>outside<sp/>the<sp/>loop</highlight><highlight class="normal"/></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>knows<sp/>what<sp/>majorCycle<sp/>iteration<sp/>this<sp/>comes<sp/>from</highlight><highlight class="normal"/></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsModel-&gt;has(</highlight><highlight class="stringliteral">"iteration"</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iteration<sp/>=<sp/>itsModel-&gt;scalarValue(</highlight><highlight class="stringliteral">"iteration"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iteration++;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;update(</highlight><highlight class="stringliteral">"iteration"</highlight><highlight class="normal">,iteration);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iteration<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsModel-&gt;add(</highlight><highlight class="stringliteral">"iteration"</highlight><highlight class="normal">,iteration);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Sending<sp/>data<sp/>to<sp/>port<sp/>'Model'"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::sendParams(itsModel,<sp/>output(</highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"/></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"/></codeline>
<codeline lineno="205"><highlight class="normal"/></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SolveNE::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SolveNE::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"/></codeline>
<codeline lineno="214"><highlight class="normal"/></codeline>
<codeline lineno="215"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/SolveNE.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SolveNE_8h" kind="file" language="C++">
    <compoundname>SolveNE.h</compoundname>
    <innerclass refid="classaskap_1_1SolveNE" prot="public">askap::SolveNE</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"/>
<codeline lineno="6"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_SolveNE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_SolveNE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/MVDirection.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Solver.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34" refid="classaskap_1_1SolveNE" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1SolveNE" kindref="compound">SolveNE</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;SolveNE&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1SolveNE" kindref="compound">SolveNE</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"SolveNE"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1SolveNE" kindref="compound">SolveNE</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1SolveNE_1a95cda66dc215fd0668e6aa4a687afc68" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::Params::ShPtr<sp/>itsModel;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>set</highlight><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>itsParset;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Normal<sp/>Equations</highlight><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::ImagingNormalEquations::ShPtr<sp/>itsNe;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>Solver</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::Solver::ShPtr<sp/>itsSolver;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utility<sp/>to<sp/>build<sp/>an<sp/>Imaging<sp/>Normal<sp/>Equation<sp/>from<sp/>a<sp/>parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>buildNE();</highlight><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>steps<sp/>required<sp/>by<sp/>buildNE</highlight><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/SolveNE.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SpectralCube_8cc" kind="file" language="C++">
    <compoundname>SpectralCube.cc</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="SpectralCube_8cc_1a326a06e3d3756b12d9ea456a8d4e6765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>ASKAP_LOGGER</definition>
        <argsstring>(logger, ".SpectralCube")</argsstring>
        <name>ASKAP_LOGGER</name>
        <param>
          <type>logger</type>
        </param>
        <param>
          <type>".SpectralCube"</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/factory/SpectralCube.cc" line="97" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Derived from DaliugeApplication @ details Implements a test method that uses the contents of the the parset to load in a measurement set and print a summary of its contents </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>for<sp/>logging</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_NAME<sp/>"SpectralCube"</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceaskap_1a8c23a7a12cd321af6dec82bf1b9125b1" kindref="member">getAskapPackageVersion_SpectralCube</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">"SpectralCube;<sp/>ASKAPsoft==Unknown"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#define<sp/>ASKAP_PACKAGE_VERSION<sp/>askap::getAskapPackageVersion_SpectralCube()</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;regex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="SpectralCube_8h" kindref="compound">factory/SpectralCube.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="NEUtils_8h" kindref="compound">factory/NEUtils.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>Blob</highlight><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIBufString.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobOStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Blob/BlobIStream.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"/><highlight class="comment">//<sp/>ASKAP<sp/>Logger</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapLogging.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;askap/AskapError.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"/><highlight class="comment">//<sp/>Data<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/TableConstDataSource.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IConstDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataSelector.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/IDataIterator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;dataaccess/SharedIter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"/><highlight class="comment">//<sp/>Image<sp/>accessors</highlight><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;imageaccess/ImageAccessFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"/><highlight class="comment">//<sp/>params<sp/>helpers</highlight><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/SynthesisParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageParamsHelper.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;measurementequation/ImageFFTEquation.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;parallel/GroupVisAggregator.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/IVisGridder.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;gridding/VisGridderFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;utils/PolConverter.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"/><highlight class="comment">//<sp/>casacore</highlight><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Arrays/IPosition.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/SpectralCoordinate.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="76"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/DirectionCoordinate.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/StokesCoordinate.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/CoordinateSystem.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/measures/Measures/Stokes.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/images/Images/PagedImage.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/Unit.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta/QC.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".SpectralCube"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>SpectralCube::SpectralCube(dlg_app_info<sp/>*raw_app)<sp/>:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DaliugeApplication(raw_app)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Initialised<sp/>cube<sp/>builder<sp/>-<sp/>UID<sp/>is<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>raw_app-&gt;uid);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsChan<sp/>=<sp/>NEUtils::getChan(raw_app-&gt;uid);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"/></codeline>
<codeline lineno="108"><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"/></codeline>
<codeline lineno="111"><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>SpectralCube::~SpectralCube()<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>SpectralCube::createDaliugeApplication(dlg_app_info<sp/>*raw_app)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SpectralCube::ShPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SpectralCube(raw_app));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1SpectralCube_1aad561f54ab3896aef32226794f660eca" kindref="member">SpectralCube::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Argument<sp/>parsing<sp/>is<sp/>not<sp/>working<sp/>as<sp/>yet</highlight><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"/></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parset_filename<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**param<sp/>=<sp/>*arguments;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sentinel</highlight><highlight class="normal"/></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>params<sp/>I<sp/>might<sp/>need<sp/>go<sp/>here:</highlight><highlight class="normal"/></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filename:</highlight><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>longer<sp/>required<sp/>as<sp/>input<sp/>comes<sp/>from<sp/>daliuge<sp/>now</highlight><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(strcmp(param[0],<sp/>"parset_filename")<sp/>==<sp/>0)<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>parset_filename<sp/>=<sp/>strdup(param[1]);</highlight><highlight class="normal"/></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"/></codeline>
<codeline lineno="139"><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments++;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1SpectralCube_1aae29248644d4eacc7b86e5954d4199e5" kindref="member">SpectralCube::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"/></codeline>
<codeline lineno="150"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>safety;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>get<sp/>the<sp/>key-value-parset</highlight><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="JacalBPCalibrator_8cc_1a96d32795c1a116ea855bca7456d9101b" kindref="member">ASKAP_LOGGER</ref>(logger,<sp/></highlight><highlight class="stringliteral">".run"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64*1024];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_read<sp/>=<sp/>input(</highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">).read(buf,<sp/>64*1024);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"No<sp/>config<sp/>file<sp/>available"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>parset(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parset.adoptBuffer(buf);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>parset.makeSubset(</highlight><highlight class="stringliteral">"Cimager."</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>fill<sp/>the<sp/>local<sp/>parset<sp/>with<sp/>parameters<sp/>that<sp/>maybe<sp/>missing</highlight><highlight class="normal"/></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(safety);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//<sp/>ASKAP_PATCHED</highlight><highlight class="normal"/></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsParset<sp/>=<sp/>NEUtils::addMissingParameters(this-&gt;itsParset);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"/></codeline>
<codeline lineno="185"><highlight class="normal"/></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsChan<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEUtils::receiveParams(itsModel,<sp/>input(</highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Failed<sp/>to<sp/>receive<sp/>model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;itsModel.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>scimath::Params());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>images=itsModel-&gt;names();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"/></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;string&gt;::const_iterator<sp/>it=images.begin();<sp/>it<sp/>!=images.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Model<sp/>contains<sp/>"</highlight><highlight class="normal">&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sort<sp/>out<sp/>the<sp/>cube<sp/>....</highlight><highlight class="normal"/></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>this<sp/>from<sp/>the<sp/>parset?</highlight><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>essentially<sp/>need<sp/>to<sp/>get<sp/>the<sp/>info<sp/>from<sp/>some<sp/>sort<sp/>of<sp/>"prepare"<sp/>functionality</highlight><highlight class="normal"/></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>put<sp/>prepare<sp/>functionality<sp/>either<sp/>here<sp/>or<sp/>in<sp/>utils<sp/>....</highlight><highlight class="normal"/></codeline>
<codeline lineno="211"><highlight class="normal"/></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"/></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Double<sp/>baseFrequency<sp/>=<sp/>NEUtils::getFrequency(itsParset,0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Double<sp/>chanWidth<sp/>=<sp/>NEUtils::getChanWidth(itsParset,0);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Int<sp/>nchanCube<sp/>=<sp/>NEUtils::getNChan(itsParset);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Double<sp/>channelFrequency<sp/>=<sp/>NEUtils::getFrequency(itsParset,itsChan);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"/></codeline>
<codeline lineno="219"><highlight class="normal"/></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Quantity<sp/>f0(baseFrequency,</highlight><highlight class="stringliteral">"Hz"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Quantity<sp/>freqinc(chanWidth,</highlight><highlight class="stringliteral">"Hz"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"/></codeline>
<codeline lineno="226"><highlight class="normal"/></codeline>
<codeline lineno="227"><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>img_name<sp/>=<sp/></highlight><highlight class="stringliteral">"image"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>psf_name<sp/>=<sp/></highlight><highlight class="stringliteral">"psf"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>residual_name<sp/>=<sp/></highlight><highlight class="stringliteral">"residual"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>weights_name<sp/>=<sp/></highlight><highlight class="stringliteral">"weights"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>restored_name<sp/>=<sp/></highlight><highlight class="stringliteral">"restored"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"/></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"From<sp/>MS<sp/>-&gt;<sp/>nchan:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nchanCube<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>base<sp/>f0:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>f0.getValue(</highlight><highlight class="stringliteral">"MHz"</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>MHz<sp/>"</highlight><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>width:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>freqinc.getValue(</highlight><highlight class="stringliteral">"MHz"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"/></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsChan<sp/>==<sp/>-1)<sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>not<sp/>sure<sp/>this<sp/>ever<sp/>happens<sp/>now</highlight><highlight class="normal"/></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Configuring<sp/>New<sp/>Spectral<sp/>Cube"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"/></codeline>
<codeline lineno="240"><highlight class="normal"/></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsImageCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>nchanCube,<sp/>f0,<sp/>freqinc,img_name));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsPSFCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>nchanCube,<sp/>f0,<sp/>freqinc,<sp/>psf_name));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsResidualCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>nchanCube,<sp/>f0,<sp/>freqinc,<sp/>residual_name));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsWeightsCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>nchanCube,<sp/>f0,<sp/>freqinc,<sp/>weights_name));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsImageCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>img_name));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsPSFCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/><sp/>psf_name));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsResidualCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/><sp/>residual_name));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsWeightsCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>weights_name));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsParset.getBool(</highlight><highlight class="stringliteral">"restore"</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRestoredCube.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cp::CubeBuilder&lt;casacore::Float&gt;(itsParset,<sp/>restored_name));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleImageParams();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"/></codeline>
<codeline lineno="260"><highlight class="normal"/></codeline>
<codeline lineno="261"><highlight class="normal"/></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"/></codeline>
<codeline lineno="265"><highlight class="normal"/></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpectralCube::data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_running();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"/></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpectralCube::drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg_app_done(APP_FINISHED);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpectralCube::handleImageParams()</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"In<sp/>handleImageParams"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"/></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>images=itsModel-&gt;names();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::smatch<sp/>m;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex<sp/>peak_residual(</highlight><highlight class="stringliteral">"^peak_residual"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex<sp/>residual(</highlight><highlight class="stringliteral">"^residual"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex<sp/>image(</highlight><highlight class="stringliteral">"^image"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex<sp/>psf(</highlight><highlight class="stringliteral">"^psf"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex<sp/>weights(</highlight><highlight class="stringliteral">"^weights"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"/></codeline>
<codeline lineno="287"><highlight class="normal"/></codeline>
<codeline lineno="288"><highlight class="normal"/></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;string&gt;::const_iterator<sp/>it=images.begin();<sp/>it<sp/>!=images.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Will<sp/>parse<sp/>for<sp/>an<sp/>image<sp/>name<sp/>"</highlight><highlight class="normal">&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::regex_search(*it,m,peak_residual))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"/></codeline>
<codeline lineno="295"><highlight class="normal"/></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>image</highlight><highlight class="normal"/></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::regex_search(*it,m,image))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,<sp/></highlight><highlight class="stringliteral">"Matched<sp/>image<sp/>and<sp/>writing<sp/>"</highlight><highlight class="normal">&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value(*it));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsImageCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"/></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>PSF</highlight><highlight class="normal"/></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::regex_search(*it,m,psf))</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Matched<sp/>PSF<sp/>and<sp/>writing<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value(*it));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsPSFCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"/></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>residual</highlight><highlight class="normal"/></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::regex_search(*it,m,residual))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Matched<sp/>residual<sp/>and<sp/>writing<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value(*it));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsResidualCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"/></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>weights</highlight><highlight class="normal"/></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::regex_search(*it,m,weights))</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,</highlight><highlight class="stringliteral">"Matched<sp/>weights<sp/>and<sp/>writing<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*it);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value(*it));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsWeightsCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>restored</highlight><highlight class="normal"/></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(std::regex_search(*it,restored))</highlight><highlight class="normal"/></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"/></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"Writing<sp/>"<sp/>&lt;&lt;<sp/>*it);</highlight><highlight class="normal"/></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value(*it));</highlight><highlight class="normal"/></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight><highlight class="normal"/></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight><highlight class="normal"/></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>itsRestoredCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight><highlight class="normal"/></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"/></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::regex_error<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"regex_error<sp/>caught:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">'\n'</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"Unknown<sp/>exception<sp/>caught:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">'\n'</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(itsParset.getBool("restore",<sp/>false))<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="comment"/></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(itsDoingPreconditioning)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>preconditioned<sp/>PSF<sp/>image</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"Writing<sp/>preconditioned<sp/>PSF");</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(params-&gt;value("psf.image.slice"));</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsPSFimageCube-&gt;writeSlice(floatImagePixels,<sp/>chan);</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>Restored<sp/>image</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASKAPLOG_INFO_STR(logger,"Writing<sp/>Restored<sp/>Image");</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>casacore::Array&lt;double&gt;<sp/>imagePixels(itsModel-&gt;value("image.slice"));</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::Array&lt;float&gt;<sp/>floatImagePixels(imagePixels.shape());</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>casacore::convertArray&lt;float,<sp/>double&gt;(floatImagePixels,<sp/>imagePixels);</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itsRestoredCube-&gt;writeSlice(floatImagePixels,<sp/>itsChan);</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="comment"/></codeline>
<codeline lineno="374"><highlight class="comment">*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="375"><highlight class="normal"/></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"/></codeline>
<codeline lineno="378"><highlight class="normal"/></codeline>
<codeline lineno="379"><highlight class="normal"/></codeline>
<codeline lineno="380"><highlight class="normal"/></codeline>
<codeline lineno="381"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"/></codeline>
    </programlisting>
    <location file="jacal/factory/SpectralCube.cc"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SpectralCube_8h" kind="file" language="C++">
    <compoundname>SpectralCube.h</compoundname>
    <innerclass refid="classaskap_1_1SpectralCube" prot="public">askap::SpectralCube</innerclass>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
    <briefdescription>
<para>Build an output image cube. </para>    </briefdescription>
    <detaileddescription>
<para>This drop will be able to build an output cube of any format supported by ASKAPSoft </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>ASKAP_FACTORY_SPECTRALCUBE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>ASKAP_FACTORY_SPECTRALCUBE_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"rename.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DaliugeApplication_8h" kindref="compound">daliuge/DaliugeApplication.h</ref>&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;imageaccess/ImageAccessFactory.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"distributedimager/CubeBuilder.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="comment">//<sp/>LOFAR<sp/>ParameterSet</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;Common/ParameterSet.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/images/Images/PagedImage.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/lattices/Lattices/PagedArray.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Arrays/Array.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/coordinates/Coordinates/CoordinateSystem.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;casacore/casa/Quanta.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fitting/Params.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40" refid="classaskap_1_1SpectralCube" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaskap_1_1SpectralCube" kindref="compound">SpectralCube</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication" kindref="compound">DaliugeApplication</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;SpectralCube&gt;<sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">ShPtr</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1SpectralCube" kindref="compound">SpectralCube</ref>(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ApplicationName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"SpectralCube"</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classaskap_1_1SpectralCube" kindref="compound">SpectralCube</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>createDaliugeApplication(dlg_app_info<sp/>*raw_app);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1SpectralCube_1aad561f54ab3896aef32226794f660eca" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***arguments);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaskap_1_1SpectralCube_1aae29248644d4eacc7b86e5954d4199e5" kindref="member">run</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>data_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_completed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uid,<sp/>drop_status<sp/>status);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleImageParams();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scimath::Params::ShPtr<sp/>itsModel;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOFAR::ParameterSet<sp/>itsParset;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsImageCube;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsPSFCube;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsResidualCube;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsWeightsCube;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsPSFimageCube;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cp::CubeBuilder&lt;casacore::Float&gt;&gt;<sp/>itsRestoredCube;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itsChan;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>askap</highlight><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/>//</highlight></codeline>
    </programlisting>
    <location file="jacal/factory/SpectralCube.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="standalone_8cpp" kind="file" language="C++">
    <compoundname>standalone.cpp</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="standalone_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/test/standalone.cpp" line="93" column="1" bodyfile="jacal/test/standalone.cpp" bodystart="93" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight class="comment">//<sp/>Manually<sp/>running<sp/>LoadVis<sp/>to<sp/>reproduce<sp/>error</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp/>ICRAR<sp/>-<sp/>International<sp/>Centre<sp/>for<sp/>Radio<sp/>Astronomy<sp/>Research</highlight><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp/>(c)<sp/>UWA<sp/>-<sp/>The<sp/>University<sp/>of<sp/>Western<sp/>Australia,<sp/>2017</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="comment">//<sp/>Copyright<sp/>by<sp/>UWA<sp/>(in<sp/>the<sp/>framework<sp/>of<sp/>the<sp/>ICRAR)</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="comment">//<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="comment">//<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="comment">//<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="comment">//<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="comment">//<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="comment">//<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="comment">//<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="comment">//<sp/>MA<sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;streambuf&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"<ref refid="DaliugeApplicationFactory_8h" kindref="compound">factory/DaliugeApplicationFactory.h</ref>"</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal">dlg_app_info<sp/>*dummy_dlg_app(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;input_file)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>in(input_file);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>in.rdbuf();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>thread_local<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>contents<sp/>=<sp/>ss.str();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>method<sp/>that<sp/>always<sp/>returns<sp/>the<sp/>contents<sp/>of<sp/>input_file</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_read<sp/>=<sp/>[](</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contents.size()<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>contents.size();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(buf,<sp/>contents.c_str(),<sp/>n);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>method<sp/>that<sp/>writes<sp/>nothing</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_write<sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_input_info<sp/>*input<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>dlg_input_info();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>input-&gt;read<sp/>=<sp/>_read;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>input-&gt;name<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[7];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(input-&gt;name,<sp/></highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_output_info<sp/>*output<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>dlg_output_info();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;write<sp/>=<sp/>_write;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;name<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[6];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(output-&gt;name,<sp/></highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_app_info<sp/>*app<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>dlg_app_info();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;inputs<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;n_inputs<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;outputs<sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;n_outputs<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;uid<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[4];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;oid<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[4];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;appname<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[18];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(app-&gt;appname,<sp/></highlight><highlight class="stringliteral">"JacalBPCalibrator"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(app-&gt;uid,<sp/></highlight><highlight class="stringliteral">"uid"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(app-&gt;oid,<sp/></highlight><highlight class="stringliteral">"oid"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>app;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run_calibrate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;input_file)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arguments[][2]<sp/>=<sp/>{{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_app_info<sp/>*app<sp/>=<sp/>dummy_dlg_app(input_file);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>j_cal<sp/>=<sp/>DaliugeApplicationFactory::make(app);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>j_cal-&gt;init((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***)arguments);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>j_cal-&gt;run();</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/>std::string<sp/>input1)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>run_calibrate(input1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"Usage:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>&lt;parset&gt;"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>askap::run(argc,<sp/>argv[1]);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="jacal/test/standalone.cpp"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="standalone__cube_8cpp" kind="file" language="C++">
    <compoundname>standalone_cube.cpp</compoundname>
    <innernamespace refid="namespaceaskap">askap</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="standalone__cube_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="jacal/test/standalone_cube.cpp" line="101" column="1" bodyfile="jacal/test/standalone_cube.cpp" bodystart="101" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight class="comment">//<sp/>Manually<sp/>running<sp/>LoadVis<sp/>to<sp/>reproduce<sp/>error</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp/>ICRAR<sp/>-<sp/>International<sp/>Centre<sp/>for<sp/>Radio<sp/>Astronomy<sp/>Research</highlight><highlight class="normal"/></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp/>(c)<sp/>UWA<sp/>-<sp/>The<sp/>University<sp/>of<sp/>Western<sp/>Australia,<sp/>2017</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight class="comment">//<sp/>Copyright<sp/>by<sp/>UWA<sp/>(in<sp/>the<sp/>framework<sp/>of<sp/>the<sp/>ICRAR)</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="comment">//<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="comment">//<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="comment">//<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="comment">//<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight class="comment">//<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight class="comment">//<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight class="comment">//<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,</highlight><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight class="comment">//<sp/>MA<sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight class="comment">//</highlight><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;streambuf&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"<ref refid="DaliugeApplicationFactory_8h" kindref="compound">factory/DaliugeApplicationFactory.h</ref>"</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceaskap" kindref="compound">askap</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal">dlg_app_info<sp/>*dummy_dlg_app(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;input_file)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>in(input_file);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>in.rdbuf();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>thread_local<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>contents<sp/>=<sp/>ss.str();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>method<sp/>that<sp/>always<sp/>returns<sp/>the<sp/>contents<sp/>of<sp/>input_file</highlight><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_read<sp/>=<sp/>[](</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contents.size()<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>contents.size();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(buf,<sp/>contents.c_str(),<sp/>n);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>method<sp/>that<sp/>writes<sp/>nothing</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_write<sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_input_info<sp/>*input<sp/>=<sp/>(dlg_input_info<sp/>*)<sp/>calloc<sp/>(2,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dlg_input_info));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>input[0].read<sp/>=<sp/>_read;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>input[0].name<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[7];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(input[0].name,<sp/></highlight><highlight class="stringliteral">"Config"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>input[1].read<sp/>=<sp/>_read;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>input[1].name<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[6];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(input[1].name,<sp/></highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_output_info<sp/>*output<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>dlg_output_info();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;write<sp/>=<sp/>_write;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;name<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[6];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(output-&gt;name,<sp/></highlight><highlight class="stringliteral">"Model"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_app_info<sp/>*app<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>dlg_app_info();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;inputs<sp/>=<sp/>&amp;input[0];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;n_inputs<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;outputs<sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;n_outputs<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;uid<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[4];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;oid<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[4];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>app-&gt;appname<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[18];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(app-&gt;appname,<sp/></highlight><highlight class="stringliteral">"SpectralCube"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(app-&gt;uid,<sp/></highlight><highlight class="stringliteral">"uid"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(app-&gt;oid,<sp/></highlight><highlight class="stringliteral">"oid"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>app;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run_calibrate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;input_file)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arguments[][2]<sp/>=<sp/>{{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg_app_info<sp/>*app<sp/>=<sp/>dummy_dlg_app(input_file);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaskap_1_1DaliugeApplication_1a7a6d2810d428144756d8b66468a360bc" kindref="member">DaliugeApplication::ShPtr</ref><sp/>j_cal<sp/>=<sp/>DaliugeApplicationFactory::make(app);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>j_cal-&gt;init((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***)arguments);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>j_cal-&gt;run();</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/>std::string<sp/>input1)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>run_calibrate(input1);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"/><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"Usage:<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"<sp/>&lt;parset&gt;"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>askap::run(argc,<sp/>argv[1]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="jacal/test/standalone_cube.cpp"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="ProcessingComponentBindingGuide_8md" kind="file" language="Markdown">
    <compoundname>ProcessingComponentBindingGuide.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Install<sp/>Doxygen</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">http://www.doxygen.nl/</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">#<sp/>Configure<sp/>the<sp/>configuration<sp/>file<sp/>(Doxyfile<sp/>as<sp/>default)</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Doxyfile<sp/>1.8.17</highlight></codeline>
<codeline><highlight class="normal">#<sp/>This<sp/>file<sp/>describes<sp/>the<sp/>settings<sp/>to<sp/>be<sp/>used<sp/>by<sp/>the<sp/>documentation<sp/>system</highlight></codeline>
<codeline><highlight class="normal">#<sp/>doxygen<sp/>(www.doxygen.org)<sp/>for<sp/>a<sp/>project.</highlight></codeline>
<codeline><highlight class="normal">#</highlight></codeline>
<codeline><highlight class="normal">#<sp/>All<sp/>text<sp/>after<sp/>a<sp/>double<sp/>hash<sp/>(##)<sp/>is<sp/>considered<sp/>a<sp/>comment<sp/>and<sp/>is<sp/>placed<sp/>in</highlight></codeline>
<codeline><highlight class="normal">#<sp/>front<sp/>of<sp/>the<sp/>TAG<sp/>it<sp/>is<sp/>preceding.</highlight></codeline>
<codeline><highlight class="normal">#</highlight></codeline>
<codeline><highlight class="normal">#<sp/>All<sp/>text<sp/>after<sp/>a<sp/>single<sp/>hash<sp/>(#)<sp/>is<sp/>considered<sp/>a<sp/>comment<sp/>and<sp/>will<sp/>be<sp/>ignored.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>format<sp/>is:</highlight></codeline>
<codeline><highlight class="normal">#<sp/>TAG<sp/>=<sp/>value<sp/>[value,<sp/>...]</highlight></codeline>
<codeline><highlight class="normal">#<sp/>For<sp/>lists,<sp/>items<sp/>can<sp/>also<sp/>be<sp/>appended<sp/>using:</highlight></codeline>
<codeline><highlight class="normal">#<sp/>TAG<sp/>+=<sp/>value<sp/>[value,<sp/>...]</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Values<sp/>that<sp/>contain<sp/>spaces<sp/>should<sp/>be<sp/>placed<sp/>between<sp/>quotes<sp/>(\"<sp/>\").</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Project<sp/>related<sp/>configuration<sp/>options</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>PROJECT_NAME<sp/>tag<sp/>is<sp/>a<sp/>single<sp/>word<sp/>(or<sp/>a<sp/>sequence<sp/>of<sp/>words<sp/>surrounded<sp/>by</highlight></codeline>
<codeline><highlight class="normal">#<sp/>double-quotes,<sp/>unless<sp/>you<sp/>are<sp/>using<sp/>Doxywizard)<sp/>that<sp/>should<sp/>identify<sp/>the</highlight></codeline>
<codeline><highlight class="normal">#<sp/>project<sp/>for<sp/>which<sp/>the<sp/>documentation<sp/>is<sp/>generated.<sp/>This<sp/>name<sp/>is<sp/>used<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal">#<sp/>title<sp/>of<sp/>most<sp/>generated<sp/>pages<sp/>and<sp/>in<sp/>a<sp/>few<sp/>other<sp/>places.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>My<sp/>Project.</highlight></codeline>
<codeline><highlight class="normal">PROJECT_NAME  =<sp/>JACAL</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>PROJECT_NUMBER<sp/>tag<sp/>can<sp/>be<sp/>used<sp/>to<sp/>enter<sp/>a<sp/>project<sp/>or<sp/>revision<sp/>number.<sp/>This</highlight></codeline>
<codeline><highlight class="normal">#<sp/>could<sp/>be<sp/>handy<sp/>for<sp/>archiving<sp/>the<sp/>generated<sp/>documentation<sp/>or<sp/>if<sp/>some<sp/>version</highlight></codeline>
<codeline><highlight class="normal">#<sp/>control<sp/>system<sp/>is<sp/>used.</highlight></codeline>
<codeline><highlight class="normal">PROJECT_NUMBER        <sp/>=<sp/>$(PROJECT_VERSION)</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>INPUT<sp/>tag<sp/>is<sp/>used<sp/>to<sp/>specify<sp/>the<sp/>files<sp/>and/or<sp/>directories<sp/>that<sp/>contain</highlight></codeline>
<codeline><highlight class="normal">#<sp/>documented<sp/>source<sp/>files.<sp/>You<sp/>may<sp/>enter<sp/>file<sp/>names<sp/>like<sp/>myfile.cpp<sp/>or</highlight></codeline>
<codeline><highlight class="normal">#<sp/>directories<sp/>like<sp/>/usr/src/myproject.<sp/>Separate<sp/>the<sp/>files<sp/>or<sp/>directories<sp/>with</highlight></codeline>
<codeline><highlight class="normal">#<sp/>spaces.<sp/>See<sp/>also<sp/>FILE_PATTERNS<sp/>and<sp/>EXTENSION_MAPPING</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Note:<sp/>If<sp/>this<sp/>tag<sp/>is<sp/>empty<sp/>the<sp/>current<sp/>directory<sp/>is<sp/>searched.</highlight></codeline>
<codeline><highlight class="normal">INPUT                 <sp/>=<sp/></highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>OUTPUT_DIRECTORY<sp/>tag<sp/>is<sp/>used<sp/>to<sp/>specify<sp/>the<sp/>(relative<sp/>or<sp/>absolute)<sp/>path</highlight></codeline>
<codeline><highlight class="normal">#<sp/>into<sp/>which<sp/>the<sp/>generated<sp/>documentation<sp/>will<sp/>be<sp/>written.<sp/>If<sp/>a<sp/>relative<sp/>path<sp/>is</highlight></codeline>
<codeline><highlight class="normal">#<sp/>entered,<sp/>it<sp/>will<sp/>be<sp/>relative<sp/>to<sp/>the<sp/>location<sp/>where<sp/>doxygen<sp/>was<sp/>started.<sp/>If</highlight></codeline>
<codeline><highlight class="normal">#<sp/>left<sp/>blank<sp/>the<sp/>current<sp/>directory<sp/>will<sp/>be<sp/>used.</highlight></codeline>
<codeline><highlight class="normal">OUTPUT_DIRECTORY      <sp/>=<sp/><sp/>JACAL</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>OUTPUT_LANGUAGE<sp/>tag<sp/>is<sp/>used<sp/>to<sp/>specify<sp/>the<sp/>language<sp/>in<sp/>which<sp/>all</highlight></codeline>
<codeline><highlight class="normal">#<sp/>documentation<sp/>generated<sp/>by<sp/>doxygen<sp/>is<sp/>written.<sp/>Doxygen<sp/>will<sp/>use<sp/>this</highlight></codeline>
<codeline><highlight class="normal">#<sp/>information<sp/>to<sp/>generate<sp/>all<sp/>constant<sp/>output<sp/>in<sp/>the<sp/>proper<sp/>language.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Possible<sp/>values<sp/>are:<sp/>Afrikaans,<sp/>Arabic,<sp/>Armenian,<sp/>Brazilian,<sp/>Catalan,<sp/>Chinese,</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Chinese-Traditional,<sp/>Croatian,<sp/>Czech,<sp/>Danish,<sp/>Dutch,<sp/>English<sp/>(United<sp/>States),</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Esperanto,<sp/>Farsi<sp/>(Persian),<sp/>Finnish,<sp/>French,<sp/>German,<sp/>Greek,<sp/>Hungarian,</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Indonesian,<sp/>Italian,<sp/>Japanese,<sp/>Japanese-en<sp/>(Japanese<sp/>with<sp/>English<sp/>messages),</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Korean,<sp/>Korean-en<sp/>(Korean<sp/>with<sp/>English<sp/>messages),<sp/>Latvian,<sp/>Lithuanian,</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Macedonian,<sp/>Norwegian,<sp/>Persian<sp/>(Farsi),<sp/>Polish,<sp/>Portuguese,<sp/>Romanian,<sp/>Russian,</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Serbian,<sp/>Serbian-Cyrillic,<sp/>Slovak,<sp/>Slovene,<sp/>Spanish,<sp/>Swedish,<sp/>Turkish,</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Ukrainian<sp/>and<sp/>Vietnamese.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>English.</highlight></codeline>
<codeline><highlight class="normal">OUTPUT_LANGUAGE       <sp/>=<sp/>English</highlight></codeline>
<codeline><highlight class="normal">#<sp/>When<sp/>enabled<sp/>doxygen<sp/>tries<sp/>to<sp/>link<sp/>words<sp/>that<sp/>correspond<sp/>to<sp/>documented</highlight></codeline>
<codeline><highlight class="normal">#<sp/>classes,<sp/>or<sp/>namespaces<sp/>to<sp/>their<sp/>corresponding<sp/>documentation.<sp/>Such<sp/>a<sp/>link<sp/>can</highlight></codeline>
<codeline><highlight class="normal">#<sp/>be<sp/>prevented<sp/>in<sp/>individual<sp/>cases<sp/>by<sp/>putting<sp/>a<sp/>%<sp/>sign<sp/>in<sp/>front<sp/>of<sp/>the<sp/>word<sp/>or</highlight></codeline>
<codeline><highlight class="normal">#<sp/>globally<sp/>by<sp/>setting<sp/>AUTOLINK_SUPPORT<sp/>to<sp/>NO.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">AUTOLINK_SUPPORT      <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">#<sp/>For<sp/>Microsoft's<sp/>IDL<sp/>there<sp/>are<sp/>propget<sp/>and<sp/>propput<sp/>attributes<sp/>to<sp/>indicate</highlight></codeline>
<codeline><highlight class="normal">#<sp/>getter<sp/>and<sp/>setter<sp/>methods<sp/>for<sp/>a<sp/>property.<sp/>Setting<sp/>this<sp/>option<sp/>to<sp/>YES<sp/>will<sp/>make</highlight></codeline>
<codeline><highlight class="normal">#<sp/>doxygen<sp/>to<sp/>replace<sp/>the<sp/>get<sp/>and<sp/>set<sp/>methods<sp/>by<sp/>a<sp/>property<sp/>in<sp/>the<sp/>documentation.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>This<sp/>will<sp/>only<sp/>work<sp/>if<sp/>the<sp/>methods<sp/>are<sp/>indeed<sp/>getting<sp/>or<sp/>setting<sp/>a<sp/>simple</highlight></codeline>
<codeline><highlight class="normal">#<sp/>type.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>the<sp/>case,<sp/>or<sp/>you<sp/>want<sp/>to<sp/>show<sp/>the<sp/>methods<sp/>anyway,<sp/>you</highlight></codeline>
<codeline><highlight class="normal">#<sp/>should<sp/>set<sp/>this<sp/>option<sp/>to<sp/>NO.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">IDL_PROPERTY_SUPPORT  <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>input<sp/>files</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>RECURSIVE<sp/>tag<sp/>can<sp/>be<sp/>used<sp/>to<sp/>specify<sp/>whether<sp/>or<sp/>not<sp/>subdirectories<sp/>should</highlight></codeline>
<codeline><highlight class="normal">#<sp/>be<sp/>searched<sp/>for<sp/>input<sp/>files<sp/>as<sp/>well.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>NO.</highlight></codeline>
<codeline><highlight class="normal">RECURSIVE             <sp/>=<sp/>YES</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>HTML<sp/>output</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>GENERATE_HTML<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>generate<sp/>HTML<sp/>output</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">GENERATE_HTML         <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>LaTeX<sp/>output</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>GENERATE_LATEX<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>generate<sp/>LaTeX<sp/>output.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">GENERATE_LATEX        <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>XML<sp/>output</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>GENERATE_XML<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>generate<sp/>an<sp/>XML<sp/>file<sp/>that</highlight></codeline>
<codeline><highlight class="normal">#<sp/>captures<sp/>the<sp/>structure<sp/>of<sp/>the<sp/>code<sp/>including<sp/>all<sp/>documentation.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>NO.</highlight></codeline>
<codeline><highlight class="normal">GENERATE_XML          <sp/>=<sp/>YES</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>XML_PROGRAMLISTING<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>dump<sp/>the<sp/>program</highlight></codeline>
<codeline><highlight class="normal">#<sp/>listings<sp/>(including<sp/>syntax<sp/>highlighting<sp/>and<sp/>cross-referencing<sp/>information)<sp/>to</highlight></codeline>
<codeline><highlight class="normal">#<sp/>the<sp/>XML<sp/>output.<sp/>Note<sp/>that<sp/>enabling<sp/>this<sp/>will<sp/>significantly<sp/>increase<sp/>the<sp/>size</highlight></codeline>
<codeline><highlight class="normal">#<sp/>of<sp/>the<sp/>XML<sp/>output.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>This<sp/>tag<sp/>requires<sp/>that<sp/>the<sp/>tag<sp/>GENERATE_XML<sp/>is<sp/>set<sp/>to<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">XML_PROGRAMLISTING    <sp/>=<sp/>YES</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>XML_NS_MEMB_FILE_SCOPE<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>include</highlight></codeline>
<codeline><highlight class="normal">#<sp/>namespace<sp/>members<sp/>in<sp/>file<sp/>scope<sp/>as<sp/>well,<sp/>matching<sp/>the<sp/>HTML<sp/>output.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>NO.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>This<sp/>tag<sp/>requires<sp/>that<sp/>the<sp/>tag<sp/>GENERATE_XML<sp/>is<sp/>set<sp/>to<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">XML_NS_MEMB_FILE_SCOPE<sp/>=<sp/>YES</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>preprocessor</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>ENABLE_PREPROCESSING<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>evaluate<sp/>all</highlight></codeline>
<codeline><highlight class="normal">#<sp/>C-preprocessor<sp/>directives<sp/>found<sp/>in<sp/>the<sp/>sources<sp/>and<sp/>include<sp/>files.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">ENABLE_PREPROCESSING  <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>dot<sp/>tool</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>CLASS_DIAGRAMS<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>generate<sp/>a<sp/>class<sp/>diagram</highlight></codeline>
<codeline><highlight class="normal">#<sp/>(in<sp/>HTML<sp/>and<sp/>LaTeX)<sp/>for<sp/>classes<sp/>with<sp/>base<sp/>or<sp/>super<sp/>classes.<sp/>Setting<sp/>the<sp/>tag<sp/>to</highlight></codeline>
<codeline><highlight class="normal">#<sp/>NO<sp/>turns<sp/>the<sp/>diagrams<sp/>off.<sp/>Note<sp/>that<sp/>this<sp/>option<sp/>also<sp/>works<sp/>with<sp/>HAVE_DOT</highlight></codeline>
<codeline><highlight class="normal">#<sp/>disabled,<sp/>but<sp/>it<sp/>is<sp/>recommended<sp/>to<sp/>install<sp/>and<sp/>use<sp/>dot,<sp/>since<sp/>it<sp/>yields<sp/>more</highlight></codeline>
<codeline><highlight class="normal">#<sp/>powerful<sp/>graphs.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">CLASS_DIAGRAMS        <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Add<sp/>comments<sp/>in<sp/>the<sp/>source<sp/>code<sp/>files</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">##<sp/>Source<sp/>Files</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">###<sp/>**Filename**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">The<sp/>name<sp/>of<sp/>the<sp/>source<sp/>file</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```c++</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">* \file<sp/>LoadVis.h</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">or</highlight></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">/##</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\file<sp/>LoadVis.h</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">###<sp/>**Description**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">A<sp/>brief<sp/>description<sp/>of<sp/>the<sp/>purpose<sp/>of<sp/>this<sp/>component. A<sp/>detailed<sp/>description<sp/>is<sp/>also<sp/>included<sp/>here.</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```c++</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\brief<sp/>Load<sp/>a<sp/>CASA<sp/>Measurement<sp/>Set<sp/>in<sp/>the<sp/>DaliugeApplication<sp/>Framework</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\details<sp/>We<sp/>will<sp/>build<sp/>on<sp/>the<sp/>LoadParset<sp/>structure<sp/>-<sp/>but<sp/>use<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>parset<sp/>to<sp/>load<sp/>a<sp/>measurement<sp/>set.</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">/##</highlight></codeline>
<codeline><highlight class="normal">#<sp/>\brief<sp/>Load<sp/>a<sp/>CASA<sp/>Measurement<sp/>Set<sp/>in<sp/>the<sp/>DaliugeApplication<sp/>Framework</highlight></codeline>
<codeline><highlight class="normal">#<sp/>\details<sp/>We<sp/>will<sp/>build<sp/>on<sp/>the<sp/>LoadParset<sp/>structure<sp/>-<sp/>but<sp/>use<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>parset<sp/>to<sp/>load<sp/>a<sp/>measurement<sp/>set.</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Location</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">The<sp/>location<sp/>of<sp/>the<sp/>file<sp/>that<sp/>generated<sp/>this<sp/>component<sp/>description.<sp/>Contains<sp/>repository<sp/>location,<sp/>file<sp/>path<sp/>within<sp/>repository<sp/>and<sp/>git<sp/>commit<sp/>hash. </highlight></codeline>
<codeline/>
<codeline><highlight class="normal">Note:<sp/>the<sp/>value<sp/>of<sp/>$(GITLAB_REPO)<sp/>will<sp/>be<sp/>substituted<sp/>at<sp/>run-time.</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```c++</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param<sp/>gitrepo<sp/>$(GIT_REPO)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">###<sp/></highlight></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">/##</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param<sp/>gitrepo<sp/>$(GIT_REPO)</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">###<sp/>**Version**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">The<sp/>version<sp/>of<sp/>the<sp/>code<sp/>file. </highlight></codeline>
<codeline/>
<codeline><highlight class="normal">Note:<sp/>the<sp/>value<sp/>of<sp/>$(PROJECT_VERSION)<sp/>will<sp/>be<sp/>substituted<sp/>at<sp/>run-time,<sp/>and<sp/>also<sp/>give<sp/>value<sp/>to<sp/>PROJECT_NUMBER<sp/>in<sp/>the<sp/>Doxygen<sp/>configuration<sp/>file<sp/>"Doxyfile"<sp/>(<sp/>PROJECT_NUMBER<sp/>=<sp/>$(PROJECT_VERSION)<sp/>).</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```c++</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param<sp/>version<sp/>$(PROJECT_VERSION)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">/##</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param<sp/>version<sp/>$(PROJECT_VERSION)</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">###<sp/>**Category**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">DynlibApp,<sp/>DynlibProcApp, PythonApp,<sp/>BashShellApp</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```c++</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param<sp/>category<sp/>DynlibApp</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">##<sp/></highlight></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">/##</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param<sp/>category<sp/>DynlibApp</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">##<sp/>Parameters<sp/>(Fields)</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">###<sp/>**Name,<sp/>Description,<sp/>Direction,<sp/>Default<sp/>Value,<sp/>Data<sp/>Type**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">The<sp/>pattern<sp/>is:</highlight></codeline>
<codeline/>
<codeline><highlight class="normal"><sp/>\param[**Direction**]<sp/>param/**Name**/**Default<sp/>Value**/**Data<sp/>Type**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal"><sp/>\~<sp/>LanguageOption1<sp/>**D****escription**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal"><sp/>\~<sp/>LanguageOption2<sp/>**Description**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal"><sp/>\~</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```c++</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param[in]<sp/>param/start_frequency/500/Integer</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~English<sp/>the<sp/>start<sp/>frequency<sp/>to<sp/>read<sp/>from\n</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~Chinese<sp/>要读取的起始频率\n</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param[in]<sp/>param/end_frequency/500/Integer<sp/></highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~English<sp/>the<sp/>end<sp/>frequency<sp/>to<sp/>read<sp/>from\n<sp/></highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~Chinese<sp/>要读取的结束频率\n<sp/></highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~<sp/></highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param[in]<sp/>param/channels/64/Integer<sp/></highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~English<sp/>how<sp/>many<sp/>channels<sp/>to<sp/>load\n<sp/></highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~Chinese<sp/>需要加载的通道数量\n<sp/></highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">##<sp/></highlight></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal"><sp/>/##</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param[in]<sp/>param/start_frequency/500/Integer</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~English<sp/>the<sp/>start<sp/>frequency<sp/>to<sp/>read<sp/>from\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~Chinese<sp/>要读取的起始频率\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param[in]<sp/>param/end_frequency/500/Integer</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~English<sp/>the<sp/>end<sp/>frequency<sp/>to<sp/>read<sp/>from\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~Chinese<sp/>要读取的结束频率\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param[in]<sp/>param/channels/64/Integer</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~English<sp/>how<sp/>many<sp/>channels<sp/>to<sp/>load\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~Chinese<sp/>需要加载的通道数量\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">##<sp/>Ports/Local<sp/>Ports</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">###<sp/>**Name,<sp/>Description,<sp/>Direction**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">The<sp/>pattern<sp/>is:</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">\param[**Direction**]<sp/>port/**Name**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal"><sp/>\~<sp/>LanguageOption1<sp/>**Description**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal"><sp/>\~<sp/>LanguageOption2<sp/>**Description**</highlight></codeline>
<codeline/>
<codeline><highlight class="normal"><sp/>\~</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```c++</highlight></codeline>
<codeline><highlight class="normal">/*!</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param[in]<sp/>port/config</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~English<sp/>the<sp/>configuration<sp/>of<sp/>the<sp/>input_port\n</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~Chinese<sp/>输入端口的设置\n</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param[in]<sp/>port/event</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~English<sp/>the<sp/>event<sp/>of<sp/>the<sp/>input_port\n</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~Chinese<sp/>输入端口的事件\n</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\param[out]<sp/>port/File</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~English<sp/>the<sp/>file<sp/>of<sp/>the<sp/>output_port<sp/>\n</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~Chinese<sp/>输出端口的文件\n</highlight></codeline>
<codeline><highlight class="normal">* <sp/> <sp/> \~</highlight></codeline>
<codeline><highlight class="normal">*<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal"><sp/>/##</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_START</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param[in]<sp/>port/config</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~English<sp/>the<sp/>configuration<sp/>of<sp/>the<sp/>input_port\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~Chinese<sp/>输入端口的设置\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param[in]<sp/>port/event</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~English<sp/>the<sp/>event<sp/>of<sp/>the<sp/>input_port\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~Chinese<sp/>输入端口的事件\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param[in]<sp/>local-port/event</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~English<sp/>the<sp/>event<sp/>of<sp/>the<sp/>input_port\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~Chinese<sp/>输入端口的事件\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\param[out]<sp/>port/File</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~English<sp/>the<sp/>file<sp/>of<sp/>the<sp/>output_port<sp/>\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~Chinese<sp/>输出端口的文件\n</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\~</highlight></codeline>
<codeline><highlight class="normal"><sp/>#<sp/>\par<sp/>EAGLE_END</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Run<sp/>Doxygen</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">If<sp/>do<sp/>not<sp/>need<sp/>the<sp/>location<sp/>and<sp/>version<sp/>of<sp/>the<sp/>current<sp/>code<sp/>,<sp/>could<sp/>just<sp/>run<sp/></highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```shell</highlight></codeline>
<codeline><highlight class="normal">doxygen<sp/>Doxyfile</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">or</highlight></codeline>
<codeline><highlight class="normal">```shell</highlight></codeline>
<codeline><highlight class="normal">doxygen<sp/><sp/>#the<sp/>default<sp/>configuration<sp/>file<sp/>named<sp/>as<sp/>Doxyfile</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Otherwise,<sp/>could<sp/>get<sp/>the<sp/>location<sp/>information<sp/>with:</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```shell</highlight></codeline>
<codeline><highlight class="normal">git<sp/>remote<sp/>-v</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">get<sp/>the<sp/>version<sp/>information<sp/><sp/>with<sp/>(at<sp/>first,<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>the<sp/>correct<sp/>branch):</highlight></codeline>
<codeline><highlight class="normal">```shell</highlight></codeline>
<codeline><highlight class="normal">git<sp/>rev-parse<sp/>--short<sp/>HEAD</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">and<sp/>the<sp/>GIT_REPO<sp/>or<sp/>PROJECT_VERSION<sp/>should<sp/>be<sp/>subscripted<sp/>with<sp/>GIT_REPO=$(git<sp/>remote<sp/>-v)<sp/>and<sp/>PROJECT_VERSION=$(git<sp/>rev-parse<sp/>--short<sp/>HEAD),<sp/><sp/>could<sp/>run<sp/>like<sp/>this:</highlight></codeline>
<codeline><highlight class="normal">```shell</highlight></codeline>
<codeline><highlight class="normal">GIT_REPO=$(git<sp/>remote<sp/>-v)<sp/>PROJECT_VERSION=$(git<sp/>rev-parse<sp/>--short<sp/>HEAD)<sp/>doxygen</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Combine<sp/>the<sp/>files<sp/>to<sp/>one<sp/>file.</highlight></codeline>
<codeline><highlight class="normal">```shell</highlight></codeline>
<codeline><highlight class="normal">xsltproc<sp/>combine.xslt<sp/>index.xml<sp/>&gt;jacal.xml</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Examples<sp/>of<sp/>the<sp/>output<sp/>xml<sp/>files</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">```xml</highlight></codeline>
<codeline><highlight class="normal">-&lt;simplesect<sp/>kind="par"&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;title&gt;EAGLE_START&lt;/title&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;para/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/simplesect&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterlist<sp/>kind="param"&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername&gt;gitrepo&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">origin<sp/></highlight></codeline>
<codeline><highlight class="normal">&lt;ulink<sp/>url="https://gitlab.com/llwang/jacal.git"&gt;https://gitlab.com/llwang/jacal.git&lt;/ulink&gt;</highlight></codeline>
<codeline><highlight class="normal">(fetch)<sp/>origin<sp/></highlight></codeline>
<codeline><highlight class="normal">&lt;ulink<sp/>url="https://gitlab.com/llwang/jacal.git"&gt;https://gitlab.com/llwang/jacal.git&lt;/ulink&gt;</highlight></codeline>
<codeline><highlight class="normal">(push)<sp/></highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername&gt;version&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;para&gt;84a5066<sp/>&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername&gt;category&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;para&gt;DynlibApp<sp/>&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterlist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;simplesect<sp/>kind="par"&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;title&gt;EAGLE_END&lt;/title&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;para/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/simplesect&gt;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Or:</highlight></codeline>
<codeline><highlight class="normal">```xml</highlight></codeline>
<codeline><highlight class="normal">-&lt;detaileddescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;simplesect<sp/>kind="par"&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;title&gt;EAGLE_START&lt;/title&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;para/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/simplesect&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterlist<sp/>kind="param"&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername&gt;gitrepo&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">origin<sp/></highlight></codeline>
<codeline><highlight class="normal">&lt;ulink<sp/>url="https://github.com/ICRAR/daliuge.git"&gt;https://github.com/ICRAR/daliuge.git&lt;/ulink&gt;</highlight></codeline>
<codeline><highlight class="normal">(fetch)<sp/>origin<sp/></highlight></codeline>
<codeline><highlight class="normal">&lt;ulink<sp/>url="https://github.com/ICRAR/daliuge.git"&gt;https://github.com/ICRAR/daliuge.git&lt;/ulink&gt;</highlight></codeline>
<codeline><highlight class="normal">(push)<sp/></highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername&gt;version&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;para&gt;6d29b61<sp/>&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername&gt;category&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;para&gt;Python<sp/>&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterlist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;simplesect<sp/>kind="par"&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;title&gt;EAGLE_END&lt;/title&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;para/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/simplesect&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/detaileddescription&gt;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">```xml</highlight></codeline>
<codeline><highlight class="normal">-&lt;detaileddescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;simplesect<sp/>kind="par"&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;title&gt;EAGLE_START&lt;/title&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;para/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/simplesect&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterlist<sp/>kind="param"&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername<sp/>direction="in"&gt;param/start_frequency/500M/Integer&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">the<sp/>start<sp/>frequency<sp/>to<sp/>read<sp/>from</highlight></codeline>
<codeline><highlight class="normal">&lt;linebreak/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername<sp/>direction="in"&gt;param/end_frequency/500M/Integer&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">the<sp/>end<sp/>frequency<sp/>to<sp/>read<sp/>from</highlight></codeline>
<codeline><highlight class="normal">&lt;linebreak/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername<sp/>direction="in"&gt;param/channels/64/Integer&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">how<sp/>many<sp/>channels<sp/>to<sp/>load</highlight></codeline>
<codeline><highlight class="normal">&lt;linebreak/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername<sp/>direction="in"&gt;port/config&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">the<sp/>configuration<sp/>of<sp/>the<sp/>input_port</highlight></codeline>
<codeline><highlight class="normal">&lt;linebreak/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername<sp/>direction="in"&gt;port/event&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">the<sp/>event<sp/>of<sp/>the<sp/>input_port</highlight></codeline>
<codeline><highlight class="normal">&lt;linebreak/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername<sp/>direction="in"&gt;local-port/event&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">the<sp/>event<sp/>of<sp/>the<sp/>input_port</highlight></codeline>
<codeline><highlight class="normal">&lt;linebreak/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;parametername<sp/>direction="out"&gt;port/File&lt;/parametername&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameternamelist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;para&gt;</highlight></codeline>
<codeline><highlight class="normal">the<sp/>file<sp/>of<sp/>the<sp/>output_port<sp/></highlight></codeline>
<codeline><highlight class="normal">&lt;linebreak/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterdescription&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameteritem&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/parameterlist&gt;</highlight></codeline>
<codeline><highlight class="normal">-&lt;simplesect<sp/>kind="par"&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;title&gt;EAGLE_END&lt;/title&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;para/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/simplesect&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/para&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/detaileddescription&gt;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
    </programlisting>
    <location file="ProcessingComponentBindingGuide.md"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">##<sp/>JACAL</highlight></codeline>
<codeline><highlight class="normal">**J**oint<sp/>**A**stronomy<sp/>**CAL**ibration<sp/>and</highlight></codeline>
<codeline><highlight class="normal">imaging<sp/>software</highlight></codeline>
<codeline><highlight class="normal">&lt;img<sp/>align="right"<sp/>src="logo.jpg"<sp/>alt="logo"<sp/>width="265"/&gt;</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">[![Documentation<sp/>Status](https://readthedocs.org/projects/jacal/badge/?version=latest)](https://jacal.readthedocs.io/en/latest/?badge=latest)</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">JACAL<sp/>integrates<sp/>[ASKAPSoft](https://www.atnf.csiro.au/computing/software/askapsoft/sdp/docs/current/pipelines/introduction.html)</highlight></codeline>
<codeline><highlight class="normal">(now<sp/>rebranded<sp/>to<sp/>*Yandasoft*)</highlight></codeline>
<codeline><highlight class="normal">and<sp/>the<sp/>execution<sp/>framework<sp/>[DALiuGE](https://github.com/ICRAR/daliuge).</highlight></codeline>
<codeline><highlight class="normal">A<sp/>shared<sp/>library<sp/>offers<sp/>a<sp/>calling<sp/>convention<sp/>supported<sp/>by<sp/>DALiuGE<sp/>and<sp/>internally<sp/>links<sp/>and<sp/>reuses<sp/>ASKAPSoft<sp/>code.</highlight></codeline>
<codeline><highlight class="normal">JACAL<sp/>is<sp/>freely<sp/>available<sp/>in<sp/>this<sp/>[GitLab<sp/>repository](https://gitlab.com/ska-telescope/jacal)</highlight></codeline>
<codeline><highlight class="normal">under<sp/>a<sp/>variation<sp/>of<sp/>the<sp/>open<sp/>source<sp/>BSD<sp/>3-Clause<sp/>[License](LICENSE).</highlight></codeline>
<codeline><highlight class="normal">The<sp/>repository<sp/>contains<sp/>the<sp/>following:</highlight></codeline>
<codeline><highlight class="normal">*<sp/>The<sp/>C/C++<sp/>code<sp/>of<sp/>the<sp/>shared<sp/>library<sp/>libjacal.so<sp/>described<sp/>above.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>A<sp/>number<sp/>of<sp/>tests<sp/>running<sp/>the<sp/>different<sp/>components<sp/>inside<sp/>DALiuGE<sp/>graphs.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>A<sp/>standalone<sp/>utility<sp/>for<sp/>library<sp/>testing<sp/>independent<sp/>of<sp/>DALiuGE.</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">This<sp/>repository<sp/>is<sp/>an<sp/>offshoot<sp/>from<sp/>the<sp/>original<sp/>located<sp/>in<sp/>[GitHub](https://github.com/ICRAR/jacal).</highlight></codeline>
<codeline><highlight class="normal">The<sp/>latter<sp/>should<sp/>be<sp/>considered<sp/>deprecated,<sp/>and<sp/>has<sp/>only<sp/>been<sp/>left<sp/>available</highlight></codeline>
<codeline><highlight class="normal">for<sp/>reference.</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">##<sp/>Installation</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">Installation<sp/>instructions<sp/>can<sp/>be<sp/>found<sp/>in<sp/>jacal's<sp/>[documentation](https://jacal.readthedocs.io/en/latest/?badge=latest).</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">##<sp/>Acknowledgement</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">The<sp/>development<sp/>of<sp/>JACAL<sp/>was<sp/>jointly<sp/>initiated<sp/>by<sp/>[ICRAR](https://www.icrar.org/)<sp/>and<sp/>[CSIRO](https://www.csiro.au/)<sp/>during<sp/>the<sp/>SKA<sp/>pre-construction<sp/>phase.<sp/>The<sp/>work<sp/>was<sp/>supported<sp/>by<sp/>the<sp/>Australian<sp/>Government<sp/>through<sp/>the<sp/>Department<sp/>of<sp/>Industry,<sp/>Innovation<sp/>and<sp/>Science<sp/>under<sp/>the<sp/>Round<sp/>2<sp/>SKA<sp/>Pre-construction<sp/>Grants<sp/>Programme<sp/>and<sp/>more<sp/>recently<sp/>by<sp/>the<sp/>SKA<sp/>Bridging<sp/>Grant<sp/>SKA75656.</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">The<sp/>logo<sp/>image<sp/>depicted<sp/>on<sp/>this<sp/>page<sp/>is<sp/>a<sp/>licensed<sp/>reproduction<sp/>of<sp/>the<sp/>aboriginal<sp/>artistic<sp/>work<sp/>*Journey<sp/>of<sp/>Self*<sp/>by<sp/>Leslie<sp/>Lee.<sp/><sp/><sp/></highlight></codeline>
<codeline/>
<codeline><highlight class="normal">##<sp/>Questions?</highlight></codeline>
<codeline/>
<codeline><highlight class="normal">Feel<sp/>free<sp/>to<sp/>open<sp/>an<sp/>issue<sp/>to<sp/>discuss<sp/>any<sp/>questions<sp/>not<sp/>covered<sp/>so<sp/>far.</highlight></codeline>
    </programlisting>
    <location file="README.md"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="md_ProcessingComponentBindingGuide" kind="page">
    <compoundname>md_ProcessingComponentBindingGuide</compoundname>
    <title>Install Doxygen</title>
    <detaileddescription>
<para><ulink url="http://www.doxygen.nl/">http://www.doxygen.nl/</ulink></para><para><heading level="1">Configure the configuration file (Doxyfile as default)</heading>
</para><para><programlisting><codeline><highlight class="normal">#<sp/>Doxyfile<sp/>1.8.17</highlight></codeline>
<codeline><highlight class="normal">#<sp/>This<sp/>file<sp/>describes<sp/>the<sp/>settings<sp/>to<sp/>be<sp/>used<sp/>by<sp/>the<sp/>documentation<sp/>system</highlight></codeline>
<codeline><highlight class="normal">#<sp/>doxygen<sp/>(www.doxygen.org)<sp/>for<sp/>a<sp/>project.</highlight></codeline>
<codeline><highlight class="normal">#</highlight></codeline>
<codeline><highlight class="normal">#<sp/>All<sp/>text<sp/>after<sp/>a<sp/>double<sp/>hash<sp/>(##)<sp/>is<sp/>considered<sp/>a<sp/>comment<sp/>and<sp/>is<sp/>placed<sp/>in</highlight></codeline>
<codeline><highlight class="normal">#<sp/>front<sp/>of<sp/>the<sp/>TAG<sp/>it<sp/>is<sp/>preceding.</highlight></codeline>
<codeline><highlight class="normal">#</highlight></codeline>
<codeline><highlight class="normal">#<sp/>All<sp/>text<sp/>after<sp/>a<sp/>single<sp/>hash<sp/>(#)<sp/>is<sp/>considered<sp/>a<sp/>comment<sp/>and<sp/>will<sp/>be<sp/>ignored.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>format<sp/>is:</highlight></codeline>
<codeline><highlight class="normal">#<sp/>TAG<sp/>=<sp/>value<sp/>[value,<sp/>...]</highlight></codeline>
<codeline><highlight class="normal">#<sp/>For<sp/>lists,<sp/>items<sp/>can<sp/>also<sp/>be<sp/>appended<sp/>using:</highlight></codeline>
<codeline><highlight class="normal">#<sp/>TAG<sp/>+=<sp/>value<sp/>[value,<sp/>...]</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Values<sp/>that<sp/>contain<sp/>spaces<sp/>should<sp/>be<sp/>placed<sp/>between<sp/>quotes<sp/>(\"<sp/>\").</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Project<sp/>related<sp/>configuration<sp/>options</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>PROJECT_NAME<sp/>tag<sp/>is<sp/>a<sp/>single<sp/>word<sp/>(or<sp/>a<sp/>sequence<sp/>of<sp/>words<sp/>surrounded<sp/>by</highlight></codeline>
<codeline><highlight class="normal">#<sp/>double-quotes,<sp/>unless<sp/>you<sp/>are<sp/>using<sp/>Doxywizard)<sp/>that<sp/>should<sp/>identify<sp/>the</highlight></codeline>
<codeline><highlight class="normal">#<sp/>project<sp/>for<sp/>which<sp/>the<sp/>documentation<sp/>is<sp/>generated.<sp/>This<sp/>name<sp/>is<sp/>used<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal">#<sp/>title<sp/>of<sp/>most<sp/>generated<sp/>pages<sp/>and<sp/>in<sp/>a<sp/>few<sp/>other<sp/>places.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>My<sp/>Project.</highlight></codeline>
<codeline><highlight class="normal">PROJECT_NAME  =<sp/>JACAL</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>PROJECT_NUMBER<sp/>tag<sp/>can<sp/>be<sp/>used<sp/>to<sp/>enter<sp/>a<sp/>project<sp/>or<sp/>revision<sp/>number.<sp/>This</highlight></codeline>
<codeline><highlight class="normal">#<sp/>could<sp/>be<sp/>handy<sp/>for<sp/>archiving<sp/>the<sp/>generated<sp/>documentation<sp/>or<sp/>if<sp/>some<sp/>version</highlight></codeline>
<codeline><highlight class="normal">#<sp/>control<sp/>system<sp/>is<sp/>used.</highlight></codeline>
<codeline><highlight class="normal">PROJECT_NUMBER        <sp/>=<sp/>$(PROJECT_VERSION)</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>INPUT<sp/>tag<sp/>is<sp/>used<sp/>to<sp/>specify<sp/>the<sp/>files<sp/>and/or<sp/>directories<sp/>that<sp/>contain</highlight></codeline>
<codeline><highlight class="normal">#<sp/>documented<sp/>source<sp/>files.<sp/>You<sp/>may<sp/>enter<sp/>file<sp/>names<sp/>like<sp/>myfile.cpp<sp/>or</highlight></codeline>
<codeline><highlight class="normal">#<sp/>directories<sp/>like<sp/>/usr/src/myproject.<sp/>Separate<sp/>the<sp/>files<sp/>or<sp/>directories<sp/>with</highlight></codeline>
<codeline><highlight class="normal">#<sp/>spaces.<sp/>See<sp/>also<sp/>FILE_PATTERNS<sp/>and<sp/>EXTENSION_MAPPING</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Note:<sp/>If<sp/>this<sp/>tag<sp/>is<sp/>empty<sp/>the<sp/>current<sp/>directory<sp/>is<sp/>searched.</highlight></codeline>
<codeline><highlight class="normal">INPUT                 <sp/>=<sp/></highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>OUTPUT_DIRECTORY<sp/>tag<sp/>is<sp/>used<sp/>to<sp/>specify<sp/>the<sp/>(relative<sp/>or<sp/>absolute)<sp/>path</highlight></codeline>
<codeline><highlight class="normal">#<sp/>into<sp/>which<sp/>the<sp/>generated<sp/>documentation<sp/>will<sp/>be<sp/>written.<sp/>If<sp/>a<sp/>relative<sp/>path<sp/>is</highlight></codeline>
<codeline><highlight class="normal">#<sp/>entered,<sp/>it<sp/>will<sp/>be<sp/>relative<sp/>to<sp/>the<sp/>location<sp/>where<sp/>doxygen<sp/>was<sp/>started.<sp/>If</highlight></codeline>
<codeline><highlight class="normal">#<sp/>left<sp/>blank<sp/>the<sp/>current<sp/>directory<sp/>will<sp/>be<sp/>used.</highlight></codeline>
<codeline><highlight class="normal">OUTPUT_DIRECTORY      <sp/>=<sp/><sp/>JACAL</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>OUTPUT_LANGUAGE<sp/>tag<sp/>is<sp/>used<sp/>to<sp/>specify<sp/>the<sp/>language<sp/>in<sp/>which<sp/>all</highlight></codeline>
<codeline><highlight class="normal">#<sp/>documentation<sp/>generated<sp/>by<sp/>doxygen<sp/>is<sp/>written.<sp/>Doxygen<sp/>will<sp/>use<sp/>this</highlight></codeline>
<codeline><highlight class="normal">#<sp/>information<sp/>to<sp/>generate<sp/>all<sp/>constant<sp/>output<sp/>in<sp/>the<sp/>proper<sp/>language.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Possible<sp/>values<sp/>are:<sp/>Afrikaans,<sp/>Arabic,<sp/>Armenian,<sp/>Brazilian,<sp/>Catalan,<sp/>Chinese,</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Chinese-Traditional,<sp/>Croatian,<sp/>Czech,<sp/>Danish,<sp/>Dutch,<sp/>English<sp/>(United<sp/>States),</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Esperanto,<sp/>Farsi<sp/>(Persian),<sp/>Finnish,<sp/>French,<sp/>German,<sp/>Greek,<sp/>Hungarian,</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Indonesian,<sp/>Italian,<sp/>Japanese,<sp/>Japanese-en<sp/>(Japanese<sp/>with<sp/>English<sp/>messages),</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Korean,<sp/>Korean-en<sp/>(Korean<sp/>with<sp/>English<sp/>messages),<sp/>Latvian,<sp/>Lithuanian,</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Macedonian,<sp/>Norwegian,<sp/>Persian<sp/>(Farsi),<sp/>Polish,<sp/>Portuguese,<sp/>Romanian,<sp/>Russian,</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Serbian,<sp/>Serbian-Cyrillic,<sp/>Slovak,<sp/>Slovene,<sp/>Spanish,<sp/>Swedish,<sp/>Turkish,</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Ukrainian<sp/>and<sp/>Vietnamese.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>English.</highlight></codeline>
<codeline><highlight class="normal">OUTPUT_LANGUAGE       <sp/>=<sp/>English</highlight></codeline>
<codeline><highlight class="normal">#<sp/>When<sp/>enabled<sp/>doxygen<sp/>tries<sp/>to<sp/>link<sp/>words<sp/>that<sp/>correspond<sp/>to<sp/>documented</highlight></codeline>
<codeline><highlight class="normal">#<sp/>classes,<sp/>or<sp/>namespaces<sp/>to<sp/>their<sp/>corresponding<sp/>documentation.<sp/>Such<sp/>a<sp/>link<sp/>can</highlight></codeline>
<codeline><highlight class="normal">#<sp/>be<sp/>prevented<sp/>in<sp/>individual<sp/>cases<sp/>by<sp/>putting<sp/>a<sp/>%<sp/>sign<sp/>in<sp/>front<sp/>of<sp/>the<sp/>word<sp/>or</highlight></codeline>
<codeline><highlight class="normal">#<sp/>globally<sp/>by<sp/>setting<sp/>AUTOLINK_SUPPORT<sp/>to<sp/>NO.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">AUTOLINK_SUPPORT      <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">#<sp/>For<sp/>Microsoft's<sp/>IDL<sp/>there<sp/>are<sp/>propget<sp/>and<sp/>propput<sp/>attributes<sp/>to<sp/>indicate</highlight></codeline>
<codeline><highlight class="normal">#<sp/>getter<sp/>and<sp/>setter<sp/>methods<sp/>for<sp/>a<sp/>property.<sp/>Setting<sp/>this<sp/>option<sp/>to<sp/>YES<sp/>will<sp/>make</highlight></codeline>
<codeline><highlight class="normal">#<sp/>doxygen<sp/>to<sp/>replace<sp/>the<sp/>get<sp/>and<sp/>set<sp/>methods<sp/>by<sp/>a<sp/>property<sp/>in<sp/>the<sp/>documentation.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>This<sp/>will<sp/>only<sp/>work<sp/>if<sp/>the<sp/>methods<sp/>are<sp/>indeed<sp/>getting<sp/>or<sp/>setting<sp/>a<sp/>simple</highlight></codeline>
<codeline><highlight class="normal">#<sp/>type.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>the<sp/>case,<sp/>or<sp/>you<sp/>want<sp/>to<sp/>show<sp/>the<sp/>methods<sp/>anyway,<sp/>you</highlight></codeline>
<codeline><highlight class="normal">#<sp/>should<sp/>set<sp/>this<sp/>option<sp/>to<sp/>NO.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">IDL_PROPERTY_SUPPORT  <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>input<sp/>files</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>RECURSIVE<sp/>tag<sp/>can<sp/>be<sp/>used<sp/>to<sp/>specify<sp/>whether<sp/>or<sp/>not<sp/>subdirectories<sp/>should</highlight></codeline>
<codeline><highlight class="normal">#<sp/>be<sp/>searched<sp/>for<sp/>input<sp/>files<sp/>as<sp/>well.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>NO.</highlight></codeline>
<codeline><highlight class="normal">RECURSIVE             <sp/>=<sp/>YES</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>HTML<sp/>output</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>GENERATE_HTML<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>generate<sp/>HTML<sp/>output</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">GENERATE_HTML         <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>LaTeX<sp/>output</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>GENERATE_LATEX<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>generate<sp/>LaTeX<sp/>output.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">GENERATE_LATEX        <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>XML<sp/>output</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>GENERATE_XML<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>generate<sp/>an<sp/>XML<sp/>file<sp/>that</highlight></codeline>
<codeline><highlight class="normal">#<sp/>captures<sp/>the<sp/>structure<sp/>of<sp/>the<sp/>code<sp/>including<sp/>all<sp/>documentation.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>NO.</highlight></codeline>
<codeline><highlight class="normal">GENERATE_XML          <sp/>=<sp/>YES</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>XML_PROGRAMLISTING<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>dump<sp/>the<sp/>program</highlight></codeline>
<codeline><highlight class="normal">#<sp/>listings<sp/>(including<sp/>syntax<sp/>highlighting<sp/>and<sp/>cross-referencing<sp/>information)<sp/>to</highlight></codeline>
<codeline><highlight class="normal">#<sp/>the<sp/>XML<sp/>output.<sp/>Note<sp/>that<sp/>enabling<sp/>this<sp/>will<sp/>significantly<sp/>increase<sp/>the<sp/>size</highlight></codeline>
<codeline><highlight class="normal">#<sp/>of<sp/>the<sp/>XML<sp/>output.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>This<sp/>tag<sp/>requires<sp/>that<sp/>the<sp/>tag<sp/>GENERATE_XML<sp/>is<sp/>set<sp/>to<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">XML_PROGRAMLISTING    <sp/>=<sp/>YES</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>XML_NS_MEMB_FILE_SCOPE<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>include</highlight></codeline>
<codeline><highlight class="normal">#<sp/>namespace<sp/>members<sp/>in<sp/>file<sp/>scope<sp/>as<sp/>well,<sp/>matching<sp/>the<sp/>HTML<sp/>output.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>NO.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>This<sp/>tag<sp/>requires<sp/>that<sp/>the<sp/>tag<sp/>GENERATE_XML<sp/>is<sp/>set<sp/>to<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">XML_NS_MEMB_FILE_SCOPE<sp/>=<sp/>YES</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>preprocessor</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>ENABLE_PREPROCESSING<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>evaluate<sp/>all</highlight></codeline>
<codeline><highlight class="normal">#<sp/>C-preprocessor<sp/>directives<sp/>found<sp/>in<sp/>the<sp/>sources<sp/>and<sp/>include<sp/>files.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">ENABLE_PREPROCESSING  <sp/>=<sp/>NO</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>options<sp/>related<sp/>to<sp/>the<sp/>dot<sp/>tool</highlight></codeline>
<codeline><highlight class="normal">#---------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">#<sp/>If<sp/>the<sp/>CLASS_DIAGRAMS<sp/>tag<sp/>is<sp/>set<sp/>to<sp/>YES,<sp/>doxygen<sp/>will<sp/>generate<sp/>a<sp/>class<sp/>diagram</highlight></codeline>
<codeline><highlight class="normal">#<sp/>(in<sp/>HTML<sp/>and<sp/>LaTeX)<sp/>for<sp/>classes<sp/>with<sp/>base<sp/>or<sp/>super<sp/>classes.<sp/>Setting<sp/>the<sp/>tag<sp/>to</highlight></codeline>
<codeline><highlight class="normal">#<sp/>NO<sp/>turns<sp/>the<sp/>diagrams<sp/>off.<sp/>Note<sp/>that<sp/>this<sp/>option<sp/>also<sp/>works<sp/>with<sp/>HAVE_DOT</highlight></codeline>
<codeline><highlight class="normal">#<sp/>disabled,<sp/>but<sp/>it<sp/>is<sp/>recommended<sp/>to<sp/>install<sp/>and<sp/>use<sp/>dot,<sp/>since<sp/>it<sp/>yields<sp/>more</highlight></codeline>
<codeline><highlight class="normal">#<sp/>powerful<sp/>graphs.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>The<sp/>default<sp/>value<sp/>is:<sp/>YES.</highlight></codeline>
<codeline><highlight class="normal">CLASS_DIAGRAMS        <sp/>=<sp/>NO</highlight></codeline>
</programlisting> <heading level="1">Add comments in the source code files</heading>
</para><para><heading level="2">Source Files</heading>
</para><para><heading level="3">**Filename**</heading>
</para><para>The name of the source file</para><para>```c++ /*! *  </para>    </detaileddescription>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="md_README" kind="page">
    <compoundname>md_README</compoundname>
    <title>JACAL</title>
    <detaileddescription>
<para>**J**oint **A**stronomy **CAL**ibration and imaging software <image type="html" name="logo.jpg"/>
</para><para><ulink url="https://jacal.readthedocs.io/en/latest/?badge=latest"/></para><para>JACAL integrates <ulink url="https://www.atnf.csiro.au/computing/software/askapsoft/sdp/docs/current/pipelines/introduction.html">ASKAPSoft</ulink> (now rebranded to <emphasis>Yandasoft</emphasis>) and the execution framework <ulink url="https://github.com/ICRAR/daliuge">DALiuGE</ulink>. A shared library offers a calling convention supported by DALiuGE and internally links and reuses ASKAPSoft code. JACAL is freely available in this <ulink url="https://gitlab.com/ska-telescope/jacal">GitLab repository</ulink> under a variation of the open source BSD 3-Clause [License](LICENSE). The repository contains the following:<itemizedlist>
<listitem><para>The C/C++ code of the shared library libjacal.so described above.</para></listitem><listitem><para>A number of tests running the different components inside DALiuGE graphs.</para></listitem><listitem><para>A standalone utility for library testing independent of DALiuGE.</para></listitem></itemizedlist>
</para><para>This repository is an offshoot from the original located in <ulink url="https://github.com/ICRAR/jacal">GitHub</ulink>. The latter should be considered deprecated, and has only been left available for reference.</para><para><heading level="2">Installation</heading>
</para><para>Installation instructions can be found in jacal's <ulink url="https://jacal.readthedocs.io/en/latest/?badge=latest">documentation</ulink>.</para><para><heading level="2">Acknowledgement</heading>
</para><para>The development of JACAL was jointly initiated by <ulink url="https://www.icrar.org/">ICRAR</ulink> and <ulink url="https://www.csiro.au/">CSIRO</ulink> during the SKA pre-construction phase. The work was supported by the Australian Government through the Department of Industry, Innovation and Science under the Round 2 SKA Pre-construction Grants Programme and more recently by the SKA Bridging Grant SKA75656.</para><para>The logo image depicted on this page is a licensed reproduction of the aboriginal artistic work <emphasis>Journey of Self</emphasis> by Leslie Lee.</para><para><heading level="2">Questions?</heading>
</para><para>Feel free to open an issue to discuss any questions not covered so far. </para>    </detaileddescription>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_d2155c4f55375059a25789d3a756d987" kind="dir">
    <compoundname>build/CMakeFiles/3.13.4</compoundname>
    <innerdir refid="dir_000c007802b370c77f402acfc5312725">build/CMakeFiles/3.13.4/CompilerIdC</innerdir>
    <innerdir refid="dir_9d61b6036b2ceca1f8ff2749c19141c3">build/CMakeFiles/3.13.4/CompilerIdCXX</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/CMakeFiles/3.13.4/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_4fef79e7177ba769987a8da36c892c5f" kind="dir">
    <compoundname>build</compoundname>
    <innerdir refid="dir_63772b626f2709090f0bdca0f40827b4">build/CMakeFiles</innerdir>
    <innerfile refid="DartConfiguration_8tcl">DartConfiguration.tcl</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_3e4fb9d73f6929721c1ee36cee6b398d" kind="dir">
    <compoundname>build/CMakeFiles/casacore_version</compoundname>
    <innerfile refid="casacore__version_8cxx">casacore_version.cxx</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/CMakeFiles/casacore_version/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_63772b626f2709090f0bdca0f40827b4" kind="dir">
    <compoundname>build/CMakeFiles</compoundname>
    <innerdir refid="dir_d2155c4f55375059a25789d3a756d987">build/CMakeFiles/3.13.4</innerdir>
    <innerdir refid="dir_3e4fb9d73f6929721c1ee36cee6b398d">build/CMakeFiles/casacore_version</innerdir>
    <innerdir refid="dir_fa8195710906fe85ca0ba20ca9c0e156">build/CMakeFiles/FindMPI</innerdir>
    <innerdir refid="dir_368f7ebfef5751c901e7a8fd60f0d690">build/CMakeFiles/hdf5</innerdir>
    <innerfile refid="feature__tests_8c">feature_tests.c</innerfile>
    <innerfile refid="feature__tests_8cxx">feature_tests.cxx</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/CMakeFiles/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_000c007802b370c77f402acfc5312725" kind="dir">
    <compoundname>build/CMakeFiles/3.13.4/CompilerIdC</compoundname>
    <innerfile refid="CMakeCCompilerId_8c">CMakeCCompilerId.c</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/CMakeFiles/3.13.4/CompilerIdC/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_9d61b6036b2ceca1f8ff2749c19141c3" kind="dir">
    <compoundname>build/CMakeFiles/3.13.4/CompilerIdCXX</compoundname>
    <innerfile refid="CMakeCXXCompilerId_8cpp">CMakeCXXCompilerId.cpp</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/CMakeFiles/3.13.4/CompilerIdCXX/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_44dcaee53a9dec12aa2e7e8e629734ed" kind="dir">
    <compoundname>jacal/daliuge</compoundname>
    <innerfile refid="DaliugeApplication_8h">DaliugeApplication.h</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="jacal/daliuge/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_49e56c817e5e54854c35e136979f97ca" kind="dir">
    <compoundname>docs</compoundname>
    <innerfile refid="conf_8py">conf.py</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="docs/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_639e9497dde12a6ac66d3e0147aca9f4" kind="dir">
    <compoundname>jacal/factory</compoundname>
    <innerfile refid="CalcNE_8cc">CalcNE.cc</innerfile>
    <innerfile refid="CalcNE_8h">CalcNE.h</innerfile>
    <innerfile refid="DaliugeApplicationFactory_8cc">DaliugeApplicationFactory.cc</innerfile>
    <innerfile refid="DaliugeApplicationFactory_8h">DaliugeApplicationFactory.h</innerfile>
    <innerfile refid="InitSpectralCube_8cc">InitSpectralCube.cc</innerfile>
    <innerfile refid="InitSpectralCube_8h">InitSpectralCube.h</innerfile>
    <innerfile refid="Interface_8cc">Interface.cc</innerfile>
    <innerfile refid="Interface_8h">Interface.h</innerfile>
    <innerfile refid="JacalBPCalibrator_8cc">JacalBPCalibrator.cc</innerfile>
    <innerfile refid="JacalBPCalibrator_8h">JacalBPCalibrator.h</innerfile>
    <innerfile refid="LoadNE_8cc">LoadNE.cc</innerfile>
    <innerfile refid="LoadNE_8h">LoadNE.h</innerfile>
    <innerfile refid="LoadParset_8cc">LoadParset.cc</innerfile>
    <innerfile refid="LoadParset_8h">LoadParset.h</innerfile>
    <innerfile refid="LoadVis_8cc">LoadVis.cc</innerfile>
    <innerfile refid="LoadVis_8h">LoadVis.h</innerfile>
    <innerfile refid="MajorCycle_8cc">MajorCycle.cc</innerfile>
    <innerfile refid="MajorCycle_8h">MajorCycle.h</innerfile>
    <innerfile refid="NESpectralCube_8cc">NESpectralCube.cc</innerfile>
    <innerfile refid="NESpectralCube_8h">NESpectralCube.h</innerfile>
    <innerfile refid="NEUtils_8cc">NEUtils.cc</innerfile>
    <innerfile refid="NEUtils_8h">NEUtils.h</innerfile>
    <innerfile refid="OutputParams_8cc">OutputParams.cc</innerfile>
    <innerfile refid="OutputParams_8h">OutputParams.h</innerfile>
    <innerfile refid="rename_8h">rename.h</innerfile>
    <innerfile refid="RestoreSolver_8cc">RestoreSolver.cc</innerfile>
    <innerfile refid="RestoreSolver_8h">RestoreSolver.h</innerfile>
    <innerfile refid="SolveNE_8cc">SolveNE.cc</innerfile>
    <innerfile refid="SolveNE_8h">SolveNE.h</innerfile>
    <innerfile refid="SpectralCube_8cc">SpectralCube.cc</innerfile>
    <innerfile refid="SpectralCube_8h">SpectralCube.h</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="jacal/factory/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_fa8195710906fe85ca0ba20ca9c0e156" kind="dir">
    <compoundname>build/CMakeFiles/FindMPI</compoundname>
    <innerfile refid="test__mpi_8cpp">test_mpi.cpp</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/CMakeFiles/FindMPI/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_368f7ebfef5751c901e7a8fd60f0d690" kind="dir">
    <compoundname>build/CMakeFiles/hdf5</compoundname>
    <innerfile refid="cmake__hdf5__test_8c">cmake_hdf5_test.c</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/CMakeFiles/hdf5/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_738208cfbba85d607f38c498b972b770" kind="dir">
    <compoundname>jacal</compoundname>
    <innerdir refid="dir_44dcaee53a9dec12aa2e7e8e629734ed">jacal/daliuge</innerdir>
    <innerdir refid="dir_639e9497dde12a6ac66d3e0147aca9f4">jacal/factory</innerdir>
    <innerdir refid="dir_ada9bf371daa3bbc360aca3d8b713828">jacal/test</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="jacal/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_ada9bf371daa3bbc360aca3d8b713828" kind="dir">
    <compoundname>jacal/test</compoundname>
    <innerfile refid="standalone_8cpp">standalone.cpp</innerfile>
    <innerfile refid="standalone__cube_8cpp">standalone_cube.cpp</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="jacal/test/"/>
  </compounddef></doxygen>